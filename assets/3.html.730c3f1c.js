import{_ as d}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as m,c as v,e as b,a as n,b as s,d as a,w as t,f as i,r as u}from"./app.81e1b519.js";const g="/aurora-blog/assets/image-20221122215839348.8b81253e.png",h="/aurora-blog/assets/image-20221122164141158.d36569b7.png",f="/aurora-blog/assets/image-20221122174112638.ab0c4ff4.png",r="/aurora-blog/assets/image-20221122181822288.c5f8f6e4.png",y="/aurora-blog/assets/image-20221122215351054.10773f4a.png",w="/aurora-blog/assets/image-20221122195454869.3111129e.png",_="/aurora-blog/assets/image-20221122204043542.9a7a6c7a.png",F="/aurora-blog/assets/image-20221122212812819.f9722a6b.png",S={},j=n("p",null,"Filter ，Interceptor",-1),q=i('<p><code>Filter</code> 和 <code>Interceptor</code> 都是 AOP 思想的产物，是对整个 <strong>【请求，响应】</strong> 过程的横向切面操作。</p><h2 id="filter" tabindex="-1"><a class="header-anchor" href="#filter" aria-hidden="true">#</a> Filter</h2><p>【Filter 的定义】</p><p>当你有一堆东西的时候，你只希望选择符合你要求的某一些东西。定义这些要求的工具，就是过滤器。</p><p><img src="'+g+'" alt="image-20221122215839348" loading="lazy"></p><p>【Filter 的一些使用实例、场景】</p><ul><li><p>认证过滤器</p></li><li><p>日志记录和审核过滤器</p></li><li><p>图像转换过滤器</p></li><li><p>数据压缩过滤器</p></li><li><p>加密过滤器</p></li><li><p>标记过滤器</p></li><li><p>触发资源访问事件的过滤器</p></li><li><p>字符集统一处理，数据转换处理等等</p></li></ul><p>在 SpringMVC 中并未对 <code>Filter</code> 进行重新封装，所以要想使用 <code>Filter</code>得用底层 Selvlet 的 <code>Filter</code> ，</p><p>要自定义 <code>Filter</code> 需要考虑的两个基本问题为：</p><ol><li>如何自定义 <code>Filter</code> ；</li><li>如何配置 <code>Filter</code> 的相关信息。</li></ol><h2 id="在-spring-boot-中使用-filter" tabindex="-1"><a class="header-anchor" href="#在-spring-boot-中使用-filter" aria-hidden="true">#</a> 在 Spring boot 中使用 Filter</h2>',11),C=n("code",null,"Filter",-1),x={href:"https://javaee.github.io/javaee-spec/javadocs/javax/servlet/Filter.html",target:"_blank",rel:"noopener noreferrer"},R=n("code",null,"Filter",-1),I=n("code",null,"implements",-1),B=i(`<blockquote><p><code>Filter</code> 接口</p></blockquote><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span>
  
  <span class="token comment">// 初始化过滤器后执行的操作</span>
  <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">FilterConfig</span> filterConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  
  <span class="token comment">// 对请求进行过滤</span>
  <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> var1<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> var2<span class="token punctuation">,</span> 
                <span class="token class-name">FilterChain</span> var3<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span><span class="token punctuation">;</span>
  
  <span class="token comment">// 销毁过滤器后执行的操作，主要用于对某些资源的回收</span>
  <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>Filter</code> 在什么时候被执行？</p></blockquote><p>在 Spring boot 中而言，默认使用 Tomcat 作为网络中间层，而 Tomcat 本质也是一个 Servlet 实例。</p><p>在 SpringMVC 的底层也是由 <code>DispatcherServlet</code> 来控制其整个运行的。而 <code>Filter</code> 属于 Servlet 容器的原生组件，所以可以得出 Filter 的处理 <code>request</code> 和 <code>response</code> 时的介入阶段：</p><p><img src="`+h+'" alt="image-20221122164141158" loading="lazy"></p><h3 id="_1-第一种方式" tabindex="-1"><a class="header-anchor" href="#_1-第一种方式" aria-hidden="true">#</a> 1. 第一种方式</h3><ol><li>实现 <code>Filter</code> 接口，</li><li>使用 java 配置方式配置。</li></ol>',8),H=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Slf4j"),s(`
`),n("span",{class:"token annotation punctuation"},"@Component"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"LoginFilter"),s(),n("span",{class:"token keyword"},"implements"),s(),n("span",{class:"token class-name"},"Filter"),s(),n("span",{class:"token punctuation"},"{"),s(`

  `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"init"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"FilterConfig"),s(" filterConfig"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    log`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"info"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"初始化过滤器: {}"'),n("span",{class:"token punctuation"},","),s(" filterConfig"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"doFilter"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ServletRequest"),s(" servletRequest"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"ServletResponse"),s(" servletResponse"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"FilterChain"),s(" filterChain"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"IOException"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"ServletException"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"//对请求进行预处理"),s(`
    log`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"info"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"过滤器开始对请求进行预处理："'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"HttpServletRequest"),s(" request "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"HttpServletRequest"),n("span",{class:"token punctuation"},")"),s(" servletRequest"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"String"),s(" requestUri "),n("span",{class:"token operator"},"="),s(" request"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getRequestURI"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"请求的接口为："'),s(),n("span",{class:"token operator"},"+"),s(" requestUri"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"long"),s(" startTime "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"currentTimeMillis"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//通过 doFilter 方法实现过滤功能"),s(`
    filterChain`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"doFilter"),n("span",{class:"token punctuation"},"("),s("servletRequest"),n("span",{class:"token punctuation"},","),s(" servletResponse"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// 上面的 doFilter 方法执行结束后用户的请求已经返回"),s(`
    `),n("span",{class:"token keyword"},"long"),s(" endTime "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"currentTimeMillis"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"该用户的请求已经处理完毕，请求花费的时间为："'),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token punctuation"},"("),s("endTime "),n("span",{class:"token operator"},"-"),s(" startTime"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"destroy"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    log`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"info"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"销毁过滤器"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),O=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Configuration"),s(`
`),n("span",{class:"token annotation punctuation"},"@Slf4j"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(" webFilterConfig "),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token annotation punctuation"},"@Autowired"),s(`
  `),n("span",{class:"token class-name"},"LoginFilter"),s(" loginFilter"),n("span",{class:"token punctuation"},";"),s("    "),n("span",{class:"token comment"},"// 自定义的过滤器"),s(`
  
  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * FilterRegistrationBean`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("T")]),n("span",{class:"token punctuation"},">")]),s(`  
   *     FilterRegistrationBean 为 Filter 的配置 Bean
   *     T 为自定义的过滤器
   * `),n("span",{class:"token keyword"},"@return"),s(` 配置好的 Filter 配置 Bean
   */`)]),s(`
  `),n("span",{class:"token annotation punctuation"},"@Bean"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"FilterRegistrationBean"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"LoginFilter"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"loginFilterBean"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"var"),s(" filterBean "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"FilterRegistrationBean"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"LoginFilter"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    filterBean`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setFilter"),n("span",{class:"token punctuation"},"("),s("loginFilter"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// 设置该过滤器要过滤的请求路径"),s(`
    filterBean`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setUrlPatterns"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ArrayList"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Arrays"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"asList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/user/all-users"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    log`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"info"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"{}"'),n("span",{class:"token punctuation"},","),s(" filterBean"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" filterBean"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),L=i('<div class="custom-container info"><p class="custom-container-title">相关信息</p><p><code>Filter</code> 是底层 Servlet 中的组件，其生命周期与 Servlet 容器相关，但是要想在 Spring 中使用，那么就要将其作为 Bean 交给 Spring 管理，</p></div><p>日志输出：</p><p><img src="'+f+'" alt="image-20221122174112638" loading="lazy"></p><h3 id="_2-第二种方式" tabindex="-1"><a class="header-anchor" href="#_2-第二种方式" aria-hidden="true">#</a> 2.第二种方式</h3><p>在第一种方式中使用 java 配置来配置 Filter 的相关配置，除了这种方式，还有使用注解的形式：</p>',5),A=n("code",null,"Filter",-1),E={href:"https://docs.oracle.com/javaee/7/api/javax/servlet/annotation/WebFilter.html",target:"_blank",rel:"noopener noreferrer"},P=n("code",null,"@WebFilter",-1),T=i(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@WebFilter</span><span class="token punctuation">(</span>filterName <span class="token operator">=</span> <span class="token string">&quot;MyFilterWithAnnotation&quot;</span><span class="token punctuation">,</span> urlPatterns <span class="token operator">=</span> <span class="token string">&quot;/user/all-users&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyFilterWithAnnotation</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span>

   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),W={class:"custom-container info"},M=n("p",{class:"custom-container-title"},"相关信息",-1),V=n("code",null,"Filter",-1),z={href:"https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/web/servlet/ServletComponentScan.html",target:"_blank",rel:"noopener noreferrer"},N=n("code",null,"@ServletComponentScan",-1),U=n("code",null,"@ServletComponentScan",-1),D={href:"https://docs.oracle.com/javaee/7/api/javax/servlet/annotation/WebFilter.html",target:"_blank",rel:"noopener noreferrer"},G=n("code",null,"@WebServlet",-1),J={href:"https://docs.oracle.com/javaee/7/api/javax/servlet/annotation/WebFilter.html",target:"_blank",rel:"noopener noreferrer"},K=n("code",null,"@WebFilter",-1),Q={href:"https://docs.oracle.com/javaee/7/api/javax/servlet/annotation/WebListener.html",target:"_blank",rel:"noopener noreferrer"},X=n("code",null,"@WebListener",-1),Y=i(`<h3 id="多个过滤器顺序配置问题" tabindex="-1"><a class="header-anchor" href="#多个过滤器顺序配置问题" aria-hidden="true">#</a> 多个过滤器顺序配置问题</h3><p>具体实现功能时，一个过滤器可能不够，需要使用多个过滤器，那么就需要为这多个过滤器设置执行顺序问题。</p><h3 id="_1-第一种方式-1" tabindex="-1"><a class="header-anchor" href="#_1-第一种方式-1" aria-hidden="true">#</a> 1.第一种方式</h3><p>使用 java 配置，<code>setOrder(int order)</code> 同一请求路径中，对应过滤器的设置的 order 越小优先级越高</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> webFilterConfig <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Autowired</span>
  <span class="token class-name">LoginFilter</span> loginFilter<span class="token punctuation">;</span>     

  <span class="token annotation punctuation">@Autowired</span>
  <span class="token class-name">LoginFilter2</span> loginFilter2<span class="token punctuation">;</span>

  <span class="token annotation punctuation">@Bean</span>
  <span class="token keyword">public</span> <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LoginFilter</span><span class="token punctuation">&gt;</span></span> <span class="token function">loginFilterBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> filterBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LoginFilter</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    filterBean<span class="token punctuation">.</span><span class="token function">setFilter</span><span class="token punctuation">(</span>loginFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    filterBean<span class="token punctuation">.</span><span class="token function">setOrder</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    filterBean<span class="token punctuation">.</span><span class="token function">setUrlPatterns</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;/user/all-users&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> filterBean<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> filterBean<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Bean</span>
  <span class="token keyword">public</span> <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LoginFilter2</span><span class="token punctuation">&gt;</span></span> <span class="token function">loginFilterBean2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> filterBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterRegistrationBean</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">LoginFilter2</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    filterBean<span class="token punctuation">.</span><span class="token function">setFilter</span><span class="token punctuation">(</span>loginFilter2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    filterBean<span class="token punctuation">.</span><span class="token function">setOrder</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    filterBean<span class="token punctuation">.</span><span class="token function">setUrlPatterns</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;/user/all-users&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> filterBean<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> filterBean<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>LoginFilter2</code> 的 order 更小，所以先执行：</p><p><img src="`+r+'" alt="image-20221122181822288" loading="lazy"></p><h3 id="_2-第二种方式-1" tabindex="-1"><a class="header-anchor" href="#_2-第二种方式-1" aria-hidden="true">#</a> 2.第二种方式</h3>',8),Z={href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/core/annotation/Order.html",target:"_blank",rel:"noopener noreferrer"},$=n("code",null,"@Order",-1),nn=n("code",null,"Filter Bean",-1),sn=n("strong",null,"执行顺序",-1),an=n("code",null,"Filter",-1),tn=n("p",null,[s("但是这种方式并不推荐，因为有可能我们需要多条 "),n("code",null,"Filter chain"),s(" ，那么使用这个去管理就不太容易。")],-1),en=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Order"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@Component"),s(`
`),n("span",{class:"token annotation punctuation"},"@WebFilter"),n("span",{class:"token punctuation"},"("),s("filterName "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"LoginFilter2"'),n("span",{class:"token punctuation"},","),s(" urlPatterns "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"/user/all-users"'),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@Slf4j"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"LoginFilter2"),s(),n("span",{class:"token keyword"},"implements"),s(),n("span",{class:"token class-name"},"Filter"),s(),n("span",{class:"token punctuation"},"{"),s(`

  `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"init"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"FilterConfig"),s(" filterConfig"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"ServletException"),s(),n("span",{class:"token punctuation"},"{"),s(`
    log`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"info"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"LoginFilter2 初始化"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"Filter"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"super"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"init"),n("span",{class:"token punctuation"},"("),s("filterConfig"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"doFilter"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ServletRequest"),s(" servletRequest"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"ServletResponse"),s(" servletResponse"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"FilterChain"),s(" filterChain"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"IOException"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"ServletException"),s(),n("span",{class:"token punctuation"},"{"),s(`
    log`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"info"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"LoginFilter2 开始执行"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    filterChain`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"doFilter"),n("span",{class:"token punctuation"},"("),s("servletRequest"),n("span",{class:"token punctuation"},","),s(" servletResponse"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"destroy"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    log`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"info"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"loginFilter2 销毁"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"Filter"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"super"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"destroy"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),on=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Slf4j"),s(`
`),n("span",{class:"token annotation punctuation"},"@Order"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@Component"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"LoginFilter"),s(),n("span",{class:"token keyword"},"implements"),s(),n("span",{class:"token class-name"},"Filter"),s(),n("span",{class:"token punctuation"},"{"),s(`

  `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"init"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"FilterConfig"),s(" filterConfig"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    log`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"info"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"初始化过滤器: {}"'),n("span",{class:"token punctuation"},","),s(" filterConfig"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"doFilter"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"ServletRequest"),s(" servletRequest"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"ServletResponse"),s(" servletResponse"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"FilterChain"),s(" filterChain"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"IOException"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"ServletException"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"//对请求进行预处理"),s(`
    log`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"info"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"过滤器1开始对请求进行预处理："'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"HttpServletRequest"),s(" request "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"HttpServletRequest"),n("span",{class:"token punctuation"},")"),s(" servletRequest"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"String"),s(" requestUri "),n("span",{class:"token operator"},"="),s(" request"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getRequestURI"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"请求的接口为："'),s(),n("span",{class:"token operator"},"+"),s(" requestUri"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"long"),s(" startTime "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"currentTimeMillis"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"//通过 doFilter 方法实现过滤功能"),s(`
    filterChain`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"doFilter"),n("span",{class:"token punctuation"},"("),s("servletRequest"),n("span",{class:"token punctuation"},","),s(" servletResponse"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// 上面的 doFilter 方法执行结束后用户的请求已经返回"),s(`
    `),n("span",{class:"token keyword"},"long"),s(" endTime "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"currentTimeMillis"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"该用户的请求已经处理完毕，请求花费的时间为："'),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token punctuation"},"("),s("endTime "),n("span",{class:"token operator"},"-"),s(" startTime"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"destroy"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    log`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"info"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"销毁过滤器1"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),cn=n("p",null,[n("img",{src:r,alt:"image-20221122181822288",loading:"lazy"})],-1),ln=n("h2",{id:"interceptor",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#interceptor","aria-hidden":"true"},"#"),s(" Interceptor")],-1),pn=n("p",null,"【拦截器的定义】",-1),un=n("p",null,"在一个流程正在进行的时候，你希望干预它的进展，甚至终止它进行，这是拦截器做的事情。",-1),rn=n("p",null,[n("img",{src:y,alt:"image-20221122215351054",loading:"lazy"})],-1),kn=n("p",null,"【拦截器的使用场景】",-1),dn={href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/HandlerInterceptor.html",target:"_blank",rel:"noopener noreferrer"},mn=i(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">{</span>
  <span class="token keyword">default</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> 
                            <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">postHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> 
                          <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">,</span> 
                          <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ModelAndView</span> modelAndView<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">afterCompletion</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> 
                               <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">,</span> 
                               <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><div class="highlight-line"> </div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一个拦截器的执行过程：</p><p><img src="`+w+'" alt="image-20221122195454869" loading="lazy"></p><div class="custom-container info"><p class="custom-container-title">相关信息</p><ul><li><code>preHandle</code> 在执行对应的 <code>Contrlloer</code> 之前；</li><li><code>postHandle</code> 在执行对应的 <code>Controller</code> 之后；</li><li><code>afterCompletion</code> 在完成此次<strong>请求</strong>之后。</li></ul></div><blockquote><p>访问 <code>/userinfo</code> 之前必须处于登录状态，对于第一次访问将其拦截后重定向至首页，(这里省去了检查登录状态，直接重定向至首页去登录)</p></blockquote>',5),vn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Slf4j"),s(`
`),n("span",{class:"token annotation punctuation"},"@Component"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(" loginInterceptor "),n("span",{class:"token keyword"},"implements"),s(),n("span",{class:"token class-name"},"HandlerInterceptor"),s(),n("span",{class:"token punctuation"},"{"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   *
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"request"),s(`    请求体
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"response"),s(`   响应体
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"handler"),s(`
   * `),n("span",{class:"token keyword"},"@return"),s(` 布尔值:
   *   true  : 处理程序的执行链继续执行
   *   false : DispatcherServlet 假定拦截器本身已处理请求，并不再执行后续执行链中的其他的拦截器和对应Controller
   */`)]),s(`
  `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"boolean"),s(),n("span",{class:"token function"},"preHandle"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"HttpServletRequest"),s(" request"),n("span",{class:"token punctuation"},","),s(` 
                           `),n("span",{class:"token class-name"},"HttpServletResponse"),s(" response"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Object"),s(" handler"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"Exception"),s(),n("span",{class:"token punctuation"},"{"),s(`
    log`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"info"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"preHandle , 执行 Controller 之前"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    log`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"info"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"访问的当前路径必须先登录"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// 在 Session 上下文中保存错误信息"),s(`
    `),n("span",{class:"token class-name"},"HttpSession"),s(" session "),n("span",{class:"token operator"},"="),s(" request"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getSession"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    session`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"setAttribute"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"msg"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token string"},'"请先登录"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// 重定向到首页去登录"),s(`
    response`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"sendRedirect"),n("span",{class:"token punctuation"},"("),s("request"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getContextPath"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token string"},'"/index"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`


  `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"postHandle"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"HttpServletRequest"),s(" request"),n("span",{class:"token punctuation"},","),s(` 
                         `),n("span",{class:"token class-name"},"HttpServletResponse"),s(" response"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Object"),s(" handler"),n("span",{class:"token punctuation"},","),s(` 
                         `),n("span",{class:"token class-name"},"ModelAndView"),s(" modelAndView"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"Exception"),s(),n("span",{class:"token punctuation"},"{"),s(`
    log`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"info"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"postHandle, 执行完 Controller 之后"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"HandlerInterceptor"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"super"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"postHandle"),n("span",{class:"token punctuation"},"("),s("request"),n("span",{class:"token punctuation"},","),s(" response"),n("span",{class:"token punctuation"},","),s(" handler"),n("span",{class:"token punctuation"},","),s(" modelAndView"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  
  `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"afterCompletion"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"HttpServletRequest"),s(" request"),n("span",{class:"token punctuation"},","),s(` 
                              `),n("span",{class:"token class-name"},"HttpServletResponse"),s(" response"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Object"),s(" handler"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Exception"),s(" ex"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"throws"),s(),n("span",{class:"token class-name"},"Exception"),s(),n("span",{class:"token punctuation"},"{"),s(`
    log`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"info"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"afterCompletion , 本次请求结束之后"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"HandlerInterceptor"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"super"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"afterCompletion"),n("span",{class:"token punctuation"},"("),s("request"),n("span",{class:"token punctuation"},","),s(" response"),n("span",{class:"token punctuation"},","),s(" handler"),n("span",{class:"token punctuation"},","),s(" ex"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),bn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Configuration"),s(`
`),n("span",{class:"token annotation punctuation"},"@EnableWebMvc"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(" adminWebConfig "),n("span",{class:"token keyword"},"implements"),s(),n("span",{class:"token class-name"},"WebMvcConfigurer"),s(),n("span",{class:"token punctuation"},"{"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 配置拦截器
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"InterceptorRegistry"),s(` 拦截器注册中心
   */`)]),s(`
  `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"addInterceptors"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"InterceptorRegistry"),s(" registry"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// 配置一个拦截器"),s(`
    registry`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addInterceptor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token function"},"loginInterceptor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addPathPatterns"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/userinfo"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("       "),n("span",{class:"token comment"},"//  添加要拦截的路径"),s(`
    `),n("span",{class:"token comment"},'//      .excludePathPatterns("不拦截的路径")'),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),gn=n("ul",null,[n("li",null,[s("要为拦截器添加不拦截的路径使用 "),n("code",null,"excludePathPatterns()")]),n("li",null,[n("code",null,"/**"),s(" 默认是所有路径包括静态资源。")])],-1),hn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@RestController"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"LoginHandler"),s(),n("span",{class:"token punctuation"},"{"),s(`
  
  `),n("span",{class:"token annotation punctuation"},"@GetMapping"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/index"'),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"String"),s(),n("span",{class:"token function"},"indexInfo"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"HttpServletRequest"),s(" request"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token class-name"},"HttpSession"),s(" session "),n("span",{class:"token operator"},"="),s(" request"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getSession"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"Object"),s(" msg "),n("span",{class:"token operator"},"="),s(" session"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"getAttribute"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"msg"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token string"},'"这里是首页"'),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token string"},'"   "'),s(),n("span",{class:"token operator"},"+"),s(" msg"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),fn=n("p",null,[n("img",{src:_,alt:"image-20221122204043542",loading:"lazy"})],-1),yn=n("h3",{id:"多个-interperctor-执行顺序问题。",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#多个-interperctor-执行顺序问题。","aria-hidden":"true"},"#"),s(" 多个 Interperctor 执行顺序问题。")],-1),wn=n("ul",null,[n("li",null,"默认为配置文件中的配置顺序"),n("li",null,[s("使用 "),n("code",null,"order()"),s(" 方法，越小优先级越高")])],-1),_n=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token comment"},"//  先执行 loginInterceptor ,  再执行 authorityInterceptor "),s(`
`),n("span",{class:"token annotation punctuation"},"@Configuration"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(" adminWebConfig "),n("span",{class:"token keyword"},"implements"),s(),n("span",{class:"token class-name"},"WebMvcConfigurer"),s(),n("span",{class:"token punctuation"},"{"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 配置拦截器
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"registry"),s(` 拦截器注册中心
   */`)]),s(`
  `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"addInterceptors"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"InterceptorRegistry"),s(" registry"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`

    registry`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addInterceptor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token function"},"loginInterceptor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addPathPatterns"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/login"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`           

    registry`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addInterceptor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token function"},"authorityInterceptor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addPathPatterns"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/login"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Fn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token comment"},"//  先执行 authorityInterceptor  , 再执行loginInterceptor"),s(`
`),n("span",{class:"token annotation punctuation"},"@Configuration"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(" adminWebConfig "),n("span",{class:"token keyword"},"implements"),s(),n("span",{class:"token class-name"},"WebMvcConfigurer"),s(),n("span",{class:"token punctuation"},"{"),s(`

  `),n("span",{class:"token annotation punctuation"},"@Override"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"addInterceptors"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"InterceptorRegistry"),s(" registry"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`

    registry`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addInterceptor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token function"},"loginInterceptor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addPathPatterns"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/login"'),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"order"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`           


    registry`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addInterceptor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token function"},"authorityInterceptor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addPathPatterns"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"/login"'),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"order"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Sn=n("p",null,"过滤器，拦截器，dispatch，Controller 整个大致的执行流程：",-1),jn=n("p",null,[n("img",{src:F,alt:"image-20221122212812819",loading:"lazy"})],-1);function qn(Cn,xn){const e=u("ExternalLinkIcon"),p=u("CodeTabs"),k=u("Tabs");return m(),v("div",null,[j,b(" more "),q,n("p",null,[C,s(" 的接口定义在 Java EE 中，"),n("a",x,[s("Filter (javaEE8)- javax.servlet.Filter"),a(e)]),s(") 那么要自定义 "),R,s(" 时就需要 "),I,s(" 该接口。")]),B,a(p,{id:"123",data:[{title:"自定义的 Filter"},{title:"Filter 配置"}]},{tab0:t(({title:o,value:c,isActive:l})=>[H]),tab1:t(({title:o,value:c,isActive:l})=>[O]),_:1}),L,n("ul",null,[n("li",null,[s("为实现 "),A,s(" 的类加上 "),n("a",E,[P,a(e)]),s(" 注解")])]),T,n("div",W,[M,n("p",null,[s("这样定义 "),V,s(" 之后，配置和实现都有了，但是其并不能被 Spring 发现，可以将 "),n("a",z,[N,a(e)]),s("添加到启动类上。")]),n("p",null,[s("在 SpringBootApplication 上使用 "),U,s(" 注解后，Servlet（控制器）、Filter（过滤器）、Listener（监听器）可以直接通过 "),n("a",D,[G,a(e)]),s("、"),n("a",J,[K,a(e)]),s("、"),n("a",Q,[X,a(e)]),s(" 注解自动注册到Spring容器中，无需其他代码。")])]),Y,n("p",null,[s("可以使用 "),n("a",Z,[$,a(e)]),s(" 注解来控制 "),nn,s(" 的"),sn,s("，所以前提是将 "),an,s(" 的添加到 IOC 容器中，同样也是设置的值越小优先级就越高。")]),tn,a(p,{id:"192",data:[{title:"LoginFilter2"},{title:"LoginFilter"}]},{tab0:t(({title:o,value:c,isActive:l})=>[en]),tab1:t(({title:o,value:c,isActive:l})=>[on]),_:1}),cn,ln,pn,un,rn,kn,n("p",null,[s("SpringMVC 中有对应的拦截器接口 "),n("a",dn,[s("HandlerInterceptor 接口"),a(e)]),s(" ，可通过实现该接口定制自己的拦截器。")]),mn,a(k,{id:"252",data:[{title:"loginInterceptor"},{title:"配置拦截器"},{title:"LoginHandler"}]},{tab0:t(({title:o,value:c,isActive:l})=>[vn]),tab1:t(({title:o,value:c,isActive:l})=>[bn,gn]),tab2:t(({title:o,value:c,isActive:l})=>[hn]),_:1}),fn,yn,wn,a(p,{id:"293",data:[{title:"默认配置"},{title:"order()"}]},{tab0:t(({title:o,value:c,isActive:l})=>[_n]),tab1:t(({title:o,value:c,isActive:l})=>[Fn]),_:1},8,["data"]),Sn,jn])}const Bn=d(S,[["render",qn],["__file","3.html.vue"]]);export{Bn as default};
