import{_ as r}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as d,c as k,e as m,a as n,b as s,d as c,w as a,f as l,r as u}from"./app.7810a35f.js";const v="/aurora-blog/assets/image-20221116102111136.919b8ea6.png",b="/aurora-blog/assets/image-20221116102141216.60bedcde.png",g="/aurora-blog/assets/image-20221118112135759.4f2974ae.png",h={},y=n("p",null,"Spring IOC",-1),f=l('<h2 id="spring-ioc" tabindex="-1"><a class="header-anchor" href="#spring-ioc" aria-hidden="true">#</a> Spring IOC</h2><p>​ IOC (Inversion of Control) 控制反转，是 Spring 的核心思想之一；其可以简单理解为将你设计好的对象交给容器集中管理，而不是传统意义上的在你的对象内部直接控制。在 Spring 中这个容器就称为 【IOC 容器】.</p><p>其本质区别如下图：</p><p><img src="'+v+'" alt="image-20221116102111136" loading="lazy"></p><p><img src="'+b+'" alt="image-20221116102141216" loading="lazy"></p><h2 id="向-ioc-容器中配置-bean" tabindex="-1"><a class="header-anchor" href="#向-ioc-容器中配置-bean" aria-hidden="true">#</a> 向 IOC 容器中配置 bean</h2><h3 id="xml-配置" tabindex="-1"><a class="header-anchor" href="#xml-配置" aria-hidden="true">#</a> XML 配置</h3><p>XML 配置较为繁琐，大多用于不支持注解的第三方库。</p><h3 id="java-配置" tabindex="-1"><a class="header-anchor" href="#java-配置" aria-hidden="true">#</a> java 配置</h3><p>​ 是 XML 配置的一种替代方式，使用的 java 代码进行配置，灵活性更高，但是可读性较差，其【较适用】的场景是在 springboot 项目中代替 XML 配置某些第三方库的一些较为复杂的全局配置。当然在其中也可以配置自定义的 <code>bean</code> 。</p>',10),w={href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/Configuration.html",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"@Configuration",-1),x=n("code",null,"bean",-1),D={href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/Bean.html",target:"_blank",rel:"noopener noreferrer"},I=n("code",null,"@Bean",-1),S=l(`<p>例如：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BeanConfig</span> <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">&quot;userDao&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token class-name">UserDaoImpl</span> <span class="token function">userDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UserDaoImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span><span class="token string">&quot;userService&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token class-name">UserServiceImpl</span> <span class="token function">userService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">UserServiceImpl</span> userService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    userService<span class="token punctuation">.</span><span class="token function">setUserDao</span><span class="token punctuation">(</span><span class="token function">userDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> userService<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注解配置" tabindex="-1"><a class="header-anchor" href="#注解配置" aria-hidden="true">#</a> 注解配置</h3><p>纯注解配置更加灵活，但需要注意其前提是必须配置注解扫描器；</p><h4 id="配置注解扫描器" tabindex="-1"><a class="header-anchor" href="#配置注解扫描器" aria-hidden="true">#</a> 配置注解扫描器</h4><blockquote><p>设置<code>ComponentScan</code>的<code>basePackage</code></p></blockquote><p>例如需要扫描 <code>com</code> 包中的内容：</p><p><img src="`+g+'" alt="image-20221118112135759" loading="lazy"></p>',8),U=n("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[n("pre",{class:"language-xml"},[n("code",null,[n("span",{class:"token comment"},"<!-- 用于 XML 配置文件中 -->"),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token namespace"},"context:"),s("component-scan")]),s(),n("span",{class:"token attr-name"},"base-package"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},"'"),s("com"),n("span",{class:"token punctuation"},"'")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),n("span",{class:"token namespace"},"context:"),s("component-scan")]),n("span",{class:"token punctuation"},">")]),s(`

`),n("span",{class:"token comment"},"<!-- 扫描多个 -->"),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token namespace"},"context:"),s("component-scan")]),s(),n("span",{class:"token attr-name"},"base-package"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},"'"),s("com.service;com.entity"),n("span",{class:"token punctuation"},"'")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),n("span",{class:"token namespace"},"context:"),s("component-scan")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),j=n("p",null,[n("code",null,"context:component-scan"),s(" 有两个子属性")],-1),C=n("ul",null,[n("li",null,[n("p",null,[n("code",null,"context:exclude-filter"),s(" 排除")])]),n("li",null,[n("p",null,[n("code",null,"context:include-filter"),s(" 包含， 需要设置 "),n("code",null,'use-default-filters="false"')])])],-1),L=n("p",null,"可根据这两者属性进行自定义。来避免一些重复扫描的问题。",-1),T={href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/ComponentScan.html",target:"_blank",rel:"noopener noreferrer"},A=n("code",null,"@ComponentScan",-1),q=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token comment"},"// 用于 java 配置类上"),s(`
`),n("span",{class:"token annotation punctuation"},"@ComponentScan"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"com"'),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),E=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token comment"},"// 用于实际编写的代码中"),s(`
`),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"AnnotationConfigApplicationContext"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"com"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),R=l('<div class="custom-container warning"><p class="custom-container-title">注意</p><ul><li>扫描包的范围并不是越大越好，过大会导致扫描过慢，根据不同情形下的需要扫描指定目录即可。</li><li><code>Springboot</code> 中默认使用启动类所在的目录作为扫描的目录。</li></ul></div><h4 id="相关注解" tabindex="-1"><a class="header-anchor" href="#相关注解" aria-hidden="true">#</a> 相关注解</h4><p>配置好注解扫描器之后，Spring 会自动扫描所有带有 ：</p><ol><li><code>@Component</code> : 将当前类作为 bean 添加到 IOC 容器中，用于一般组件</li><li><code>@Controller</code> : 用于控制层</li><li><code>@Service</code> : 用于服务层</li><li><code>@Repository</code> : 用于持久层</li></ol><p>这四个注解的类。</p><p>​ 其中 <code>@Component</code> 是其他三个注解的别名，所以这四个注解的<strong>功能都一样</strong>，都是将当前类作为 <code>bean</code> 添加到 IOC 容器中；只有语义上的差别。</p>',6),M=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Target"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"ElementType"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"TYPE"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@Retention"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"RetentionPolicy"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"RUNTIME"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@Documented"),s(`
`),n("span",{class:"token annotation punctuation"},"@Indexed"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token annotation punctuation"},"@interface"),s(),n("span",{class:"token class-name"},"Component"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token class-name"},"String"),s(),n("span",{class:"token function"},"value"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),N=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Target"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"ElementType"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"TYPE"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@Retention"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"RetentionPolicy"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"RUNTIME"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@Documented"),s(`
`),n("span",{class:"token annotation punctuation"},"@Component"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token annotation punctuation"},"@interface"),s(),n("span",{class:"token class-name"},"Controller"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token annotation punctuation"},"@AliasFor"),n("span",{class:"token punctuation"},"("),s(`
    annotation `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Component"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),s(`
  `),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token class-name"},"String"),s(),n("span",{class:"token function"},"value"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),O=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Target"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"ElementType"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"TYPE"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@Retention"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"RetentionPolicy"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"RUNTIME"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@Documented"),s(`
`),n("span",{class:"token annotation punctuation"},"@Component"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token annotation punctuation"},"@interface"),s(),n("span",{class:"token class-name"},"Service"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token annotation punctuation"},"@AliasFor"),n("span",{class:"token punctuation"},"("),s(`
    annotation `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Component"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),s(`
  `),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token class-name"},"String"),s(),n("span",{class:"token function"},"value"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),P=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token annotation punctuation"},"@Target"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),n("span",{class:"token class-name"},"ElementType"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"TYPE"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@Retention"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"RetentionPolicy"),n("span",{class:"token punctuation"},"."),n("span",{class:"token constant"},"RUNTIME"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token annotation punctuation"},"@Documented"),s(`
`),n("span",{class:"token annotation punctuation"},"@Component"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token annotation punctuation"},"@interface"),s(),n("span",{class:"token class-name"},"Repository"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token annotation punctuation"},"@AliasFor"),n("span",{class:"token punctuation"},"("),s(`
    annotation `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Component"),n("span",{class:"token punctuation"},"."),n("span",{class:"token keyword"},"class"),s(`
  `),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token class-name"},"String"),s(),n("span",{class:"token function"},"value"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"default"),s(),n("span",{class:"token string"},'""'),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),X=l('<div class="custom-container info"><p class="custom-container-title">相关信息</p><ul><li><p>使用上面注解之后，默认使用 <strong>类名首字母小写的驼峰形式</strong> 作为 <code>bean</code> 的 <code>id</code> 属性，</p><ul><li><p>例如： <code>@Component</code> 声明在 <code>UserService</code> 类上，默认的 id 就是 <code>userService</code></p></li><li><p>也可自定义 <code>id</code> 属性。eg: <code>@Component(&quot;myBean&quot;)</code></p></li></ul></li><li><p><code>ElementType.TYPE</code> 表明注解可用于类，接口，注解类型，以及枚举的声明中。</p></li></ul></div><h2 id="为-ioc-容器中的-bean-作依赖注入" tabindex="-1"><a class="header-anchor" href="#为-ioc-容器中的-bean-作依赖注入" aria-hidden="true">#</a> 为 IOC 容器中的 bean 作依赖注入</h2><h3 id="setter-注入" tabindex="-1"><a class="header-anchor" href="#setter-注入" aria-hidden="true">#</a> Setter 注入</h3><p>Spring 3.x 中使用</p><ul><li>在 XML 文件中配置 Setter 注入</li></ul>',5),B=n("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[n("pre",{class:"language-xml"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("bean")]),s(),n("span",{class:"token attr-name"},"id"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("userService"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("com.service.UserServiceImpl"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("property")]),s(),n("span",{class:"token attr-name"},"name"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("userDao"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"ref"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("userDao"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},"/>")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("bean")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),V=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"UserServiceImpl"),s(),n("span",{class:"token punctuation"},"{"),s(`

  `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"UserDaoImpl"),s(" userDao"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"UserServiceImpl"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"findUserList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("userDao"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"findUserList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * set dao.
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"userDao"),s(` user dao
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"setUserDao"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"UserDaoImpl"),s(" userDao"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("userDao "),n("span",{class:"token operator"},"="),s(" userDao"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Y=l(`<ul><li>在注解和Java配置中配置 Setter 注入</li></ul><p>直接在 <code>Setter</code> 方法上使用 <code>@Autowired</code> 注解即可。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token class-name">UserDaoImpl</span> userDao<span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token class-name">UserServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">findUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userDao<span class="token punctuation">.</span><span class="token function">findUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/**
   * set dao.
   * <span class="token keyword">@param</span> <span class="token parameter">userDao</span> user dao
   */</span>
  <span class="token annotation punctuation">@Autowired</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserDao</span><span class="token punctuation">(</span><span class="token class-name">UserDaoImpl</span> userDao<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>userDao <span class="token operator">=</span> userDao<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="constructor-注入" tabindex="-1"><a class="header-anchor" href="#constructor-注入" aria-hidden="true">#</a> Constructor 注入</h3><p>Spring 4.x 中使用</p><ul><li>在 XML 文件中配置 Constructor 注入</li></ul>`,6),z=n("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[n("pre",{class:"language-xml"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("bean")]),s(),n("span",{class:"token attr-name"},"id"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("userService"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"class"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("com.service.UserServiceImpl"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("constructor-arg")]),s(),n("span",{class:"token attr-name"},"name"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("userDao"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"ref"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("userDao"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},"/>")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("bean")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),F=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"UserServiceImpl"),s(),n("span",{class:"token punctuation"},"{"),s(`

  `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"final"),s(),n("span",{class:"token class-name"},"UserDaoImpl"),s(" userDao"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * Constructor.
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"userDaoImpl"),s(` user dao impl
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"UserServiceImpl"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"UserDaoImpl"),s(" userDaoImpl"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("userDao "),n("span",{class:"token operator"},"="),s(" userDaoImpl"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"findUserList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("userDao"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"findUserList"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),J=l(`<ul><li>在注解和Java配置中配置 Setter 注入</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">UserDaoImpl</span> userDao<span class="token punctuation">;</span>

  <span class="token doc-comment comment">/**
   * Constructor.
   * <span class="token keyword">@param</span> <span class="token parameter">userDaoImpl</span> user dao impl
   */</span>
  <span class="token annotation punctuation">@Autowired</span>     <span class="token comment">// 这里的 @Autowired 也可以省略</span>
  <span class="token keyword">public</span> <span class="token class-name">UserServiceImpl</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">UserDaoImpl</span> userDaoImpl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>userDao <span class="token operator">=</span> userDaoImpl<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">findUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userDao<span class="token punctuation">.</span><span class="token function">findUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="基于注解的注入" tabindex="-1"><a class="header-anchor" href="#基于注解的注入" aria-hidden="true">#</a> 基于注解的注入</h3><p>以 <code>@Autowired</code>（自动注入）注解注入为例，修饰符有三个属性：<code>Constructor</code>，<code>byType</code>，<code>byName</code>。默认按照 <code>byType</code> 注入。</p><ul><li><strong>constructor</strong>：通过构造方法进行自动注入，spring 会匹配与构造方法参数类型一致的 bean 进行注入，如果有一个多参数的构造方法，一个只有一个参数的构造方法，在容器中查找到多个匹配多参数构造方法的 bean，那么 spring 会优先将 bean 注入到多参数的构造方法中。</li><li><strong>byName</strong>：被注入 bean 的 id 名必须与 set 方法后半截匹配，并且 id 名称的第一个单词首字母必须小写，这一点与手动 set 注入有点不同。</li><li><strong>byType</strong>：查找所有的set方法，将符合符合参数类型的bean注入。</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token punctuation">{</span>
	
  <span class="token annotation punctuation">@Autowired</span>
  <span class="token keyword">private</span> <span class="token class-name">UserDaoImpl</span> userDao<span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">findUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userDao<span class="token punctuation">.</span><span class="token function">findUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><ul><li>当使用 <code>@Autowired</code> 注入时，默认使用 <code>byType</code> 选择对应的 <code>bean</code> 时，如果有多个 <code>bean</code> 的对应的类型是一样的，那么 <code>byType</code> 就是失效，此时就会自动转为使用 <code>byName</code> 进行选择。</li><li>当上述情况无法通过 <code>byName</code> 选择时，并且此时 IOC 容器中有多个类型匹配的 <code>bean</code> ，那么此时可使用 <code>@Qualifier</code> 注解来指定 <code>bean</code> 的 <code>id</code> 即可。</li></ul></div>`,7);function Q(G,H){const i=u("ExternalLinkIcon"),p=u("Tabs");return d(),k("div",null,[y,m(" more "),f,n("blockquote",null,[n("p",null,[s("在一个类上添加 "),n("a",w,[_,c(i)]),s(" 注解将其声明为配置类。")])]),n("p",null,[s("要想为将自定义的 "),x,s(" 交给 IOC 容器时，可使用 "),n("a",D,[I,c(i)]),s(" 注解")]),S,c(p,{id:"66",data:[{title:"XML"},{title:"注解"},{title:"java"}]},{tab0:a(({title:e,value:t,isActive:o})=>[U,j,C,L]),tab1:a(({title:e,value:t,isActive:o})=>[n("p",null,[n("a",T,[A,c(i)])]),q]),tab2:a(({title:e,value:t,isActive:o})=>[E]),_:1}),R,c(p,{id:"146",data:[{title:"@Component"},{title:"@Controller"},{title:"@Service"},{title:"@Repository"}]},{tab0:a(({title:e,value:t,isActive:o})=>[M]),tab1:a(({title:e,value:t,isActive:o})=>[N]),tab2:a(({title:e,value:t,isActive:o})=>[O]),tab3:a(({title:e,value:t,isActive:o})=>[P]),_:1}),X,c(p,{id:"202",data:[{title:"XML"},{title:"java"}]},{tab0:a(({title:e,value:t,isActive:o})=>[B]),tab1:a(({title:e,value:t,isActive:o})=>[V]),_:1}),Y,c(p,{id:"234",data:[{title:"XML"},{title:"java"}]},{tab0:a(({title:e,value:t,isActive:o})=>[z]),tab1:a(({title:e,value:t,isActive:o})=>[F]),_:1}),J])}const Z=r(h,[["render",Q],["__file","2.html.vue"]]);export{Z as default};
