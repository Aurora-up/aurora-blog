import{_ as k}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as d,c as m,e as b,a as n,b as s,d as c,w as a,f as i,r as p}from"./app.f5ce3eca.js";const v="/aurora-blog/assets/image-20230102134355550.64cd84a3.png",h="/aurora-blog/assets/image-20230102134453477.e1a5ff34.png",g="/aurora-blog/assets/image-20230102134525630.d3cd47b1.png",y="/aurora-blog/assets/image-20230102134555666.9aa91e0c.png",w="/aurora-blog/assets/image-20230102135633720.25063c24.png",f="/aurora-blog/assets/image-20230102140323493.9459588a.png",_="/aurora-blog/assets/image-20230102140405760.5c9f9e9f.png",T="/aurora-blog/assets/image-20230102140542501.6618b46f.png",x="/aurora-blog/assets/image-20230109111314747.a4c70740.png",N="/aurora-blog/assets/image-20230109113522390.7b05735f.png",L="/aurora-blog/assets/image-20230109120203094.daf937e0.png",A={},V=n("p",null,"「AVL 树」",-1),M=n("p",null,[s('G. M. Adelson-Velsky 和 E. M. Landis 在其 1962 年发表的论文 "An algorithm for the organization of information" 中提出了「AVL 树」。'),n("strong",null,"论文中描述了一系列操作，使得在不断添加与删除结点后，AVL 树仍然不会发生退化"),s("，进而使得各种操作的时间复杂度均能保持在 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"l"),n("mi",null,"o"),n("mi",null,"g"),n("mtext",null," ⁡"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(log \\ ⁡n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mspace"}," "),n("span",{class:"mord"},"⁡"),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])]),s(" 级别。")],-1),R=n("p",null,"换言之，在频繁增删查改的使用场景中，AVL 树可始终保持很高的数据增删查改效率，具有很好的应用价值。",-1),S=n("h2",{id:"avl-树常见术语",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#avl-树常见术语","aria-hidden":"true"},"#"),s(" AVL 树常见术语")],-1),j=n("p",null,"「AVL 树」既是「二叉搜索树」又是「平衡二叉树」，同时满足这两种二叉树的所有性质，因此又被称为「平衡二叉搜索树」.",-1),O=n("h3",{id:"结点高度",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#结点高度","aria-hidden":"true"},"#"),s(" 结点高度")],-1),z=n("p",null,[s("在 AVL 树的操作中，需要获取结点「高度 Height」，所以给 AVL 树的结点类添加 "),n("code",null,"height"),s(" 变量。")],-1),C=n("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token comment"},"// AVL 树的结点"),s(`
`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token type-definition class-name"},"AVLNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"pub"),s(" value"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},","),s("                       "),n("span",{class:"token comment"},"// 结点值"),s(`
  height`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},","),s("                      "),n("span",{class:"token comment"},"// 结点高度"),s(`
  `),n("span",{class:"token keyword"},"pub"),s(" left"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"AVLNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s("  "),n("span",{class:"token comment"},"// 左子结点"),s(`
  `),n("span",{class:"token keyword"},"pub"),s(" right"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"AVLNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// 右子结点"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token comment"},"// AVLNode 的左子树或右子树"),s(`
`),n("span",{class:"token attribute attr-name"},"#[derive(Clone, Copy)]"),s(`
`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"enum"),s(),n("span",{class:"token type-definition class-name"},"Side"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token class-name"},"Left"),n("span",{class:"token punctuation"},","),s(`
  `),n("span",{class:"token class-name"},"Right"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token keyword"},"impl"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"AVLNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"/// 返回 左 / 右 子结点的不可变引用"),s(`
  `),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"child"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" side"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"AVLNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"match"),s(" side "),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Left"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Right"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token comment"},"/// 返回 左 / 右 子结点的可变引用"),s(`
  `),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"child_mut"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" side"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"AVLNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"match"),s(" side "),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Left"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Right"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token comment"},"// 为 Side 实现 ! 操作符"),s(`
`),n("span",{class:"token keyword"},"impl"),s(),n("span",{class:"token class-name"},"Not"),s(),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token class-name"},"Side"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"type"),s(),n("span",{class:"token type-definition class-name"},"Output"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"not"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"Self"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Output"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"match"),s(),n("span",{class:"token keyword"},"self"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Left"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Right"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Right"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Left"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),B=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token comment"},"// AVL 树的结点"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),s(),n("span",{class:"token keyword"},"extends"),s(),n("span",{class:"token class-name"},"Comparable"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"T"),s(" value"),n("span",{class:"token punctuation"},";"),s("             "),n("span",{class:"token comment"},"// 结点值"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(" height"),n("span",{class:"token punctuation"},";"),s("          "),n("span",{class:"token comment"},"// 结点高度"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" left"),n("span",{class:"token punctuation"},";"),s("    "),n("span",{class:"token comment"},"// 左子结点"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" right"),n("span",{class:"token punctuation"},";"),s("   "),n("span",{class:"token comment"},"// 右子结点"),s(`
  
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"T"),s(" value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("value "),n("span",{class:"token operator"},"="),s(" value"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),H=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token comment"},"// AVL 树中的结点"),s(`
`),n("span",{class:"token keyword"},"template"),s(),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"typename"),s(),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">"),s(`
`),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"TreeNode"),s(),n("span",{class:"token punctuation"},"{"),s(`
  T value`),n("span",{class:"token punctuation"},";"),s("            "),n("span",{class:"token comment"},"// 结点值"),s(`
  TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("left"),n("span",{class:"token punctuation"},";"),s("  "),n("span",{class:"token comment"},"// 左子结点"),s(`
  TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("right"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 右子结点"),s(`
  `),n("span",{class:"token keyword"},"int"),s(" height "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s("     "),n("span",{class:"token comment"},"// 结点高度"),s(`
  `),n("span",{class:"token function"},"TreeNode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"default"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"explicit"),s(),n("span",{class:"token function"},"TreeNode"),n("span",{class:"token punctuation"},"("),s("T x"),n("span",{class:"token punctuation"},","),s(" TreeNode"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("left "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},","),s(" TreeNode"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("right "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"value"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token function"},"left"),n("span",{class:"token punctuation"},"("),s("left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token function"},"right"),n("span",{class:"token punctuation"},"("),s("right"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),F=n("p",null,[s("「结点高度」是最远叶结点到该结点的距离，即走过的「边」的数量。需要特别注意，"),n("strong",null,"叶结点的高度为 0 ，空结点的高度为 -1"),s(" 。封装两个工具函数，分别用于获取与更新结点的高度。")],-1),E=n("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token keyword"},"impl"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"AVLNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"/// 返回 左 / 右 子树高度"),s(`
  `),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"height"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" side"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"usize"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// None(叶子结点) 时高度为 0"),s(`
    `),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"child"),n("span",{class:"token punctuation"},"("),s("side"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"as_ref"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"map_or"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token closure-params"},[n("span",{class:"token closure-punctuation punctuation"},"|"),s("n"),n("span",{class:"token closure-punctuation punctuation"},"|")]),s(" n"),n("span",{class:"token punctuation"},"."),s("height"),n("span",{class:"token punctuation"},")"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token comment"},"/// 更新结点的高度"),s(`
  `),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"update_height"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// 左，右子树高度的最大值 + 1"),s(`
    `),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("height "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token namespace"},[s("std"),n("span",{class:"token punctuation"},"::"),s("cmp"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"max"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"height"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"height"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),G=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"AVLTree"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),s(),n("span",{class:"token keyword"},"extends"),s(),n("span",{class:"token class-name"},"Comparable"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" root"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 获取结点高度
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"node"),s(` 结点信息
   * `),n("span",{class:"token keyword"},"@return"),s(` 结点高度
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"height"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// 空结点高度为 -1 ，叶结点高度为 0"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" node "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),s(),n("span",{class:"token operator"},":"),s(" node"),n("span",{class:"token punctuation"},"."),s("height"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 更新结点高度
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"node"),s(`
   */`)]),s(`
  `),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"updateHeight"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// 结点高度等于最高子树高度 + 1"),s(`
    node`),n("span",{class:"token punctuation"},"."),s("height "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Math"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"max"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"height"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token function"},"height"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),q=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token keyword"},"template"),s(),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"typename"),s(),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">"),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"AVLTree"),s(),n("span",{class:"token punctuation"},"{"),s(`
`),n("span",{class:"token keyword"},"private"),n("span",{class:"token operator"},":"),s(`
  TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),n("span",{class:"token operator"},"*"),s(" root"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},`/**
   * 获取结点高度
   * @param node 结点
   * @return 结点的高度
   */`),s(`
  `),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"height"),n("span",{class:"token punctuation"},"("),s("TreeNode"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),n("span",{class:"token operator"},"*"),s(" node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// 空结点高度为 -1, 叶节点高度为 0"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" node "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"nullptr"),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),s(),n("span",{class:"token operator"},":"),s(" node"),n("span",{class:"token operator"},"->"),s("height"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token comment"},`/**
   * 更新结点高度
   * @param node 结点
   */`),s(`
  `),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"update_height"),n("span",{class:"token punctuation"},"("),s("TreeNode"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s(`
    node`),n("span",{class:"token operator"},"->"),s("height "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"max"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"height"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token operator"},"->"),s("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token function"},"height"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token operator"},"->"),s("left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"public"),n("span",{class:"token operator"},":"),s(`
  `),n("span",{class:"token function"},"AVLTree"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"default"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"explicit"),s(),n("span",{class:"token function"},"AVLTree"),n("span",{class:"token punctuation"},"("),s("TreeNode"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"root"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
  
  TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token function"},"get_root"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("root"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),D=n("h3",{id:"结点平衡因子",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#结点平衡因子","aria-hidden":"true"},"#"),s(" 结点平衡因子")],-1),I=n("p",null,[s("结点的「平衡因子 Balance Factor」是 "),n("strong",null,"结点的左子树高度减去右子树高度"),s("，并定义空结点的平衡因子为 0 。同样地，将获取结点平衡因子封装成函数，以便后续使用。")],-1),J=n("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token keyword"},"impl"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"AVLNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"/// 返回该结点的平衡因子"),s(`
  `),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"balance_factor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"i8"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// 结点的左，右子树高度"),s(`
    `),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token punctuation"},"("),s("left"),n("span",{class:"token punctuation"},","),s(" right"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"height"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"height"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"if"),s(" left "),n("span",{class:"token operator"},"<"),s(" right "),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// 右子树高"),s(`
      `),n("span",{class:"token punctuation"},"("),s("right "),n("span",{class:"token operator"},"-"),s(" left"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"as"),s(),n("span",{class:"token keyword"},"i8"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// 左子树高"),s(`
      `),n("span",{class:"token operator"},"-"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"("),s("right "),n("span",{class:"token operator"},"-"),s(" left"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"as"),s(),n("span",{class:"token keyword"},"i8"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),K=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * 获取该结点的平衡因子
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"node"),s(` 结点
 * `),n("span",{class:"token keyword"},"@return"),s(` 结点的平衡因子
 */`)]),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"balanceFactor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// 空结点平衡因子为 0"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("node "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// 结点平衡因子 = 左子树高度 - 右子树高度"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"height"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token function"},"height"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),P=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token comment"},`/**
 * 获取结点的平衡因子
 * @param node 结点
 * @return 结点的平衡因子
 */`),s(`
`),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"get_balance_factor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"const"),s(" TreeNode"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// 空结点平衡因子为 0"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("node "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// 左子树 - 右子树"),s(`
  `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"height"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token operator"},"->"),s("left"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token function"},"height"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token operator"},"->"),s("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Q=n("div",{class:"custom-container info"},[n("p",{class:"custom-container-title"},"AVL 树性质"),n("p",null,[s("设平衡因子为 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"f")]),n("annotation",{encoding:"application/x-tex"},"f")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f")])])]),s(" ，则一颗 AVL 树的任意结点的平衡因子皆满足 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",null,"−"),n("mn",null,"1"),n("mo",null,"≤"),n("mi",null,"f"),n("mo",null,"≤"),n("mn",null,"1")]),n("annotation",{encoding:"application/x-tex"},"-1≤f≤1")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.7804em","vertical-align":"-0.136em"}}),n("span",{class:"mord"},"−"),n("span",{class:"mord"},"1"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"≤"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"≤"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"1")])])]),s(" .")])],-1),U=n("h2",{id:"avl-树旋转",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#avl-树旋转","aria-hidden":"true"},"#"),s(" AVL 树旋转")],-1),W=n("p",null,[s("AVL 树的独特之处在于「旋转 Rotation」的操作，其可 "),n("strong",null,"在不影响二叉树中序遍历序列的前提下，使失衡结点重新恢复平衡。"),s(" 换言之，旋转操作既可以使树保持为「二叉搜索树」，也可以使树重新恢复为「平衡二叉树」。")],-1),X=n("p",null,[s("将平衡因子的绝对值 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",null,">"),n("mn",null,"1")]),n("annotation",{encoding:"application/x-tex"},">1")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.5782em","vertical-align":"-0.0391em"}}),n("span",{class:"mrel"},">"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"1")])])]),s(" 的结点称为「失衡结点」。根据结点的失衡情况，旋转操作分为 "),n("strong",null,"右旋、左旋、先右旋后左旋、先左旋后右旋"),s(".")],-1),Y=n("h3",{id:"右旋-顺时针",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#右旋-顺时针","aria-hidden":"true"},"#"),s(" 右旋 (顺时针)")],-1),Z=n("p",null,[s("如下图所示（结点下方为「平衡因子」），从底至顶看，二叉树中首个失衡结点是 "),n("strong",null,"结点 3"),s(" 。聚焦在以该失衡结点为根结点的子树上，将该结点记为 "),n("code",null,"node"),s(" ，将其左子结点记为 "),n("code",null,"child"),s(" ，执行「右旋」操作。完成右旋后，该子树已经恢复平衡，并且仍然为二叉搜索树。")],-1),$=n("p",null,[n("img",{src:v,alt:"image-20230102134355550",loading:"lazy"})],-1),nn=n("p",null,[n("img",{src:h,alt:"image-20230102134453477",loading:"lazy"})],-1),sn=n("p",null,[n("img",{src:g,alt:"image-20230102134525630",loading:"lazy"})],-1),an=n("p",null,[n("img",{src:y,alt:"image-20230102134555666",loading:"lazy"})],-1),tn=n("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token keyword"},"impl"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"AVLNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// 执行左旋 / 右旋"),s(`
  `),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"rotate"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" side"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// 左旋 / 右旋 时获取 右子结点 / 左子结点 (该点为旋转时的基准原点)"),s(`
    `),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" subtree "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"child_mut"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("side"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"take"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token operator"},"*"),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"child_mut"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("side"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(" subtree"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"child_mut"),n("span",{class:"token punctuation"},"("),s("side"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"take"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 将旋转时被替换的结点的子树接到新的结点上"),s(`
    `),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"update_height"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token namespace"},[s("mem"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"swap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" subtree"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"as_mut"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 在内存中交换 “根结点” 和子结点"),s(`
    `),n("span",{class:"token operator"},"*"),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"child_mut"),n("span",{class:"token punctuation"},"("),s("side"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("subtree"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 将 “根结点” 作为左子结点 / 右子结点的右子结点 / 左子结点"),s(`
    `),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"update_height"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),en=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * 右旋操作
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"node"),s(` 失衡结点
 * `),n("span",{class:"token keyword"},"@return"),s(` 右转后该子树的根结点
 */`)]),s(`
`),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"rightRotate"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" child "),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" grandChild "),n("span",{class:"token operator"},"="),s(" child"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// 以 child 为原点, 将 node 向左旋转"),s(`
  child`),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},";"),s(`
  node`),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"="),s(" grandChild"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// 更新结点高度"),s(`
  `),n("span",{class:"token function"},"updateHeight"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token function"},"updateHeight"),n("span",{class:"token punctuation"},"("),s("child"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// 返回旋转后子树的根结点"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" child"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),on=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token comment"},`/**
 * 右旋
 * @param node 失衡结点
 * @return 调正之后的最小不平衡子树的根结点
 */`),s(`
TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token function"},"right_rotate"),n("span",{class:"token punctuation"},"("),s("TreeNode"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s(" child "),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token operator"},"->"),s("left"),n("span",{class:"token punctuation"},";"),s(`
  TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s(" grandChild "),n("span",{class:"token operator"},"="),s(" child"),n("span",{class:"token operator"},"->"),s("right"),n("span",{class:"token punctuation"},";"),s(`
  child`),n("span",{class:"token operator"},"->"),s("right "),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},";"),s(`
  node`),n("span",{class:"token operator"},"->"),s("left "),n("span",{class:"token operator"},"="),s(" grandChild"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token function"},"update_height"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token function"},"update_height"),n("span",{class:"token punctuation"},"("),s("child"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" child"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),cn=n("h3",{id:"左旋-逆时针",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#左旋-逆时针","aria-hidden":"true"},"#"),s(" 左旋 (逆时针)")],-1),ln=n("p",null,[s("类似地，如果将取上述失衡二叉树的“镜像”，那么则需要「左旋」操作。观察发现，"),n("strong",null,"「左旋」和「右旋」操作是镜像对称的，两者对应解决的两种失衡情况也是对称的"),s("。")],-1),pn=n("p",null,[n("img",{src:w,alt:"image-20230102135633720",loading:"lazy"})],-1),un=n("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token keyword"},"impl"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"AVLNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// 执行左旋 / 右旋"),s(`
  `),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"rotate"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" side"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// 左旋 / 右旋 时获取 右子结点 / 左子结点 (该点为旋转时的基准原点)"),s(`
    `),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" subtree "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"child_mut"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("side"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"take"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token operator"},"*"),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"child_mut"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("side"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(" subtree"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"child_mut"),n("span",{class:"token punctuation"},"("),s("side"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"take"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 将旋转时被替换的结点的子树接到新的结点上"),s(`
    `),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"update_height"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token namespace"},[s("mem"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token function"},"swap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" subtree"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"as_mut"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 在内存中交换 “根结点” 和子结点"),s(`
    `),n("span",{class:"token operator"},"*"),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"child_mut"),n("span",{class:"token punctuation"},"("),s("side"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("subtree"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 将 “根结点” 作为左子结点 / 右子结点的右子结点 / 左子结点"),s(`
    `),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"update_height"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),rn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * 左旋操作
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"node"),s(` 失衡结点
 * `),n("span",{class:"token keyword"},"@return"),s(` 左旋后该子树的根结点
 */`)]),s(`
`),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"leftRotate"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" child "),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" grandChild "),n("span",{class:"token operator"},"="),s(" child"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// 以 child 为原点将 node 向左旋转"),s(`
  child`),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},";"),s(`
  node`),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(" grandChild"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// 更新结点高度"),s(`
  `),n("span",{class:"token function"},"updateHeight"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token function"},"updateHeight"),n("span",{class:"token punctuation"},"("),s("child"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// 返回旋转后子树的根结点"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" child"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),kn=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token comment"},`/**
 * 左旋
 * @param node 失衡结点
 * @return 调正之后的最小不平衡子树的根结点
 */`),s(`
TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token function"},"left_rotate"),n("span",{class:"token punctuation"},"("),s("TreeNode"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s(" child "),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token operator"},"->"),s("right"),n("span",{class:"token punctuation"},";"),s(`
  TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s(" grandChild "),n("span",{class:"token operator"},"="),s(" child"),n("span",{class:"token operator"},"->"),s("left"),n("span",{class:"token punctuation"},";"),s(`
  child`),n("span",{class:"token operator"},"->"),s("left "),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},";"),s(`
  node`),n("span",{class:"token operator"},"->"),s("right "),n("span",{class:"token operator"},"="),s(" grandChild"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token function"},"update_height"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token function"},"update_height"),n("span",{class:"token punctuation"},"("),s("child"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" child"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),dn=i('<h3 id="先左后右" tabindex="-1"><a class="header-anchor" href="#先左后右" aria-hidden="true">#</a> 先左后右</h3><p>对于下图的失衡结点 3 ，<strong>单一使用左旋或右旋都无法使子树恢复平衡</strong>，此时需要「先左旋后右旋」，即先对 <code>child</code> 执行「左旋」，再对 <code>node</code> 执行「右旋」.</p><p><img src="'+f+'" alt="image-20230102140323493" loading="lazy"></p><h3 id="先右后左" tabindex="-1"><a class="header-anchor" href="#先右后左" aria-hidden="true">#</a> 先右后左</h3><p>同理，取以上失衡二叉树的镜像，则需要「先右旋后左旋」，即先对 <code>child</code> 执行「右旋」，然后对 <code>node</code> 执行「左旋」。</p><p><img src="'+_+'" alt="image-20230102140405760" loading="lazy"></p><h3 id="旋转的选择" tabindex="-1"><a class="header-anchor" href="#旋转的选择" aria-hidden="true">#</a> 旋转的选择</h3><p>下图描述的四种失衡情况：</p><table><thead><tr><th style="text-align:center;">代称</th><th style="text-align:center;">情况</th><th style="text-align:center;">采取措施</th></tr></thead><tbody><tr><td style="text-align:center;">LL</td><td style="text-align:center;">左子结点的左子树中插入结点</td><td style="text-align:center;">右旋</td></tr><tr><td style="text-align:center;">LR</td><td style="text-align:center;">左子结点的右子树中插入结点</td><td style="text-align:center;">先左旋后右旋</td></tr><tr><td style="text-align:center;">RL</td><td style="text-align:center;">右子结点的左子树中插入结点</td><td style="text-align:center;">先右旋后左旋</td></tr><tr><td style="text-align:center;">RR</td><td style="text-align:center;">右子结点的右子树中插入结点</td><td style="text-align:center;">左旋</td></tr></tbody></table><p><img src="'+T+'" alt="image-20230102140542501" loading="lazy"></p><p>具体地，需要使用 <strong>失衡结点的平衡因子、较高一侧子结点的平衡因子</strong> 来确定失衡结点属于上图中的哪种情况。</p>',11),mn=n("table",null,[n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"失衡结点的平衡因子"),n("th",{style:{"text-align":"center"}},"子结点的平衡因子"),n("th",{style:{"text-align":"center"}},"应采用的旋转方法")])]),n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"center"}},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",null,">"),n("mn",null,"0")]),n("annotation",{encoding:"application/x-tex"},">0")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.5782em","vertical-align":"-0.0391em"}}),n("span",{class:"mrel"},">"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"0")])])]),s(" (左偏树)")]),n("td",{style:{"text-align":"center"}},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",null,"≥"),n("mn",null,"0")]),n("annotation",{encoding:"application/x-tex"},"≥0")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.7719em","vertical-align":"-0.136em"}}),n("span",{class:"mrel"},"≥"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"0")])])])]),n("td",{style:{"text-align":"center"}},"右旋")]),n("tr",null,[n("td",{style:{"text-align":"center"}},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",null,">"),n("mn",null,"0")]),n("annotation",{encoding:"application/x-tex"},">0")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.5782em","vertical-align":"-0.0391em"}}),n("span",{class:"mrel"},">"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"0")])])]),s(" (左偏树)")]),n("td",{style:{"text-align":"center"}},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",null,"<"),n("mn",null,"0")]),n("annotation",{encoding:"application/x-tex"},"<0")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.5782em","vertical-align":"-0.0391em"}}),n("span",{class:"mrel"},"<"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"0")])])])]),n("td",{style:{"text-align":"center"}},"先左旋后右旋")]),n("tr",null,[n("td",{style:{"text-align":"center"}},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",null,"<"),n("mn",null,"0")]),n("annotation",{encoding:"application/x-tex"},"<0")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.5782em","vertical-align":"-0.0391em"}}),n("span",{class:"mrel"},"<"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"0")])])]),s(" (右偏树)")]),n("td",{style:{"text-align":"center"}},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",null,"≤"),n("mn",null,"0")]),n("annotation",{encoding:"application/x-tex"},"≤0")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.7719em","vertical-align":"-0.136em"}}),n("span",{class:"mrel"},"≤"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"0")])])])]),n("td",{style:{"text-align":"center"}},"左旋")]),n("tr",null,[n("td",{style:{"text-align":"center"}},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",null,"<"),n("mn",null,"0")]),n("annotation",{encoding:"application/x-tex"},"<0")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.5782em","vertical-align":"-0.0391em"}}),n("span",{class:"mrel"},"<"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"0")])])]),s(" (右偏树)")]),n("td",{style:{"text-align":"center"}},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mo",null,">"),n("mn",null,"0")]),n("annotation",{encoding:"application/x-tex"},">0")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.5782em","vertical-align":"-0.0391em"}}),n("span",{class:"mrel"},">"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"0")])])])]),n("td",{style:{"text-align":"center"}},"先右旋后左旋")])])],-1),bn=n("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token keyword"},"impl"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"AVLTree"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"/// 调整该结点的子树使其 “平衡”"),s(`
  `),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"rebalance"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"update_height"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"let"),s(" side "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"match"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"balance_factor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token number"},"2"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Right"),n("span",{class:"token punctuation"},","),s("   "),n("span",{class:"token comment"},"// 右偏树 (RR[左旋] / RL[先右后左])  "),s(`
      `),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"2"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Left"),n("span",{class:"token punctuation"},","),s("   "),n("span",{class:"token comment"},"// 左偏树 (LL[右旋] / LR[先左后右])"),s(`
      _ `),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"let"),s(" subtree "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"child_mut"),n("span",{class:"token punctuation"},"("),s("side"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"as_mut"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// 等于 1 时为LR 型第一步左旋 或者 等于 -1 时为RL 型第一步右旋"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Left"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Side"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Right"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("side"),n("span",{class:"token punctuation"},","),s(" subtree"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"balance_factor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      subtree`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rotate"),n("span",{class:"token punctuation"},"("),s("side"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token comment"},"// LR 型第二步右旋 或者 RL 型第二步左旋"),s(`
    `),n("span",{class:"token comment"},"// LL型 右旋 或者 RR型 左旋 "),s(`
    `),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rotate"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("side"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),vn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * 根据结点的平衡因子和子结点的平衡因子选择对应的旋转方式
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"node"),s(` 失衡结点
 * `),n("span",{class:"token keyword"},"@return"),s(` 已经平衡的树的根结点
 */`)]),s(`
`),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"rotate"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"// 获取结点 node 的失衡因子"),s(`
  `),n("span",{class:"token keyword"},"int"),s(" balanceFactor "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"balanceFactor"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// 左偏树"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("balanceFactor "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"balanceFactor"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},">="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// 右旋"),s(`
      `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"rightRotate"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// 先左旋后右旋"),s(`
      node`),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"leftRotate"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"rightRotate"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token comment"},"// 右偏树"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("balanceFactor "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"balanceFactor"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// 左旋"),s(`
      `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"leftRotate"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// 先右旋后左旋"),s(`
      node`),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"rightRotate"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"leftRotate"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token comment"},"// 已经旋转为平衡树, 直接返回"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" node"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),hn=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token comment"},`/**
 * 根据结点的平衡因子和子结点的平衡因子选择对应的旋转方式
 * @param node 失衡结点
 * @return 调正之后的子树的根结点
 */`),s(`
TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token function"},"rotate"),n("span",{class:"token punctuation"},"("),s("TreeNode"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"int"),s(" balance_factor "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"get_balance_factor"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// 左偏树  LL[右旋] / LR[先左后右]"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("balance_factor "),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"get_balance_factor"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token operator"},"->"),s("left"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},">="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s("  "),n("span",{class:"token comment"},"// LL[右旋]"),s(`
      `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"right_rotate"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s("                       "),n("span",{class:"token comment"},"// LR[先左后右]"),s(`
      node`),n("span",{class:"token operator"},"->"),s("left "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"left_rotate"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token operator"},"->"),s("left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"right_rotate"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token comment"},"// 右偏树  RR[左旋] / RL[先右后左]"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("balance_factor "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"get_balance_factor"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token operator"},"->"),s("right"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s("  "),n("span",{class:"token comment"},"//  RR[左旋]"),s(`
      `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"left_rotate"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s("                        "),n("span",{class:"token comment"},"//  RL[先右后左]"),s(`
      node`),n("span",{class:"token operator"},"->"),s("right "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"right_rotate"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token operator"},"->"),s("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"left_rotate"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" node"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),gn=n("h2",{id:"avl-树常用操作",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#avl-树常用操作","aria-hidden":"true"},"#"),s(" AVL 树常用操作")],-1),yn=n("h3",{id:"插入结点",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#插入结点","aria-hidden":"true"},"#"),s(" 插入结点")],-1),wn=n("p",null,[s("「AVL 树」的结点插入操作与「二叉搜索树」主体类似。不同的是，在插入结点后，从该结点到根结点的路径上会出现一系列「失衡结点」。所以，"),n("strong",null,"我们需要从该结点开始，从底至顶地执行旋转操作，使所有失衡结点恢复平衡"),s("。实际上在调整完"),n("strong",null,"最小不平衡子树"),s("时就可以使得整颗树达到平衡。")],-1),fn=n("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token comment"},"/// AVL 树"),s(`
`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token type-definition class-name"},"AVLTree"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token punctuation"},"{"),s(`
    root`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"AVLNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s(`
    length`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"impl"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"AVLTree"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"/// 创建一个空的二叉树"),s(`
  `),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"Self"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token class-name"},"AVLTree"),s(),n("span",{class:"token punctuation"},"{"),s(`
      root`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"None"),n("span",{class:"token punctuation"},","),s(`
      length`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token comment"},"/// 插入结点"),s(`
  `),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"insert"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"bool"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"let"),s(" inserted "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"insert"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("root"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"if"),s(" inserted "),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("length "),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    inserted
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token comment"},"/// 递归的插入结点"),s(`
`),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"insert"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},"("),s("tree"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"AVLNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"bool"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(" tree "),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"let"),s(" inserted "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"match"),s(" value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"cmp"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),s("node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token class-name"},"Ordering"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Equal"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token class-name"},"Ordering"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Less"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token function"},"insert"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(" node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token class-name"},"Ordering"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Greater"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token function"},"insert"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(" node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"if"),s(" inserted "),n("span",{class:"token punctuation"},"{"),s(`
      node`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rebalance"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    inserted
  `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token operator"},"*"),s("tree "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Box"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"AVLNode"),s(),n("span",{class:"token punctuation"},"{"),s(`
      value`),n("span",{class:"token punctuation"},","),s(`
      height`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(`
      left`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"None"),n("span",{class:"token punctuation"},","),s(`
      right`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"None"),n("span",{class:"token punctuation"},","),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token boolean"},"true"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_n=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * 插入结点
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"node"),s(` 待插入结点
 * `),n("span",{class:"token keyword"},"@return"),s(` 插入后 AVL 树的根结点
 */`)]),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"insert"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  root `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"insertHelper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("root"),n("span",{class:"token punctuation"},","),s(" node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" root"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token doc-comment comment"},[s(`/**
 * 递归的插入结点 (辅助函数)
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"node"),s(`   子树的根结点
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"i_node"),s(` 待插入结点
 * `),n("span",{class:"token keyword"},"@return"),s(` 返回子树的根结点
 */`)]),s(`
`),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"insertHelper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" node"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" i_node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("node "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(" i_node"),n("span",{class:"token punctuation"},";"),s("         "),n("span",{class:"token comment"},"// 树为空, 插入结点直接作为根结点"),s(`
  `),n("span",{class:"token comment"},"// 1. 查找插入位置，并插入结点"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("i_node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"compareTo"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(`
    node`),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"insertHelper"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},","),s(" i_node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("i_node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"compareTo"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(`
    node`),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"insertHelper"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},","),s(" i_node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"else"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" node"),n("span",{class:"token punctuation"},";"),s("           "),n("span",{class:"token comment"},"// 重复结点不插入，直接返回"),s(`
  `),n("span",{class:"token function"},"updateHeight"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("      "),n("span",{class:"token comment"},"// 更新结点高度"),s(`
  `),n("span",{class:"token comment"},"// 2. 执行旋转操作, 使子树重新恢复平衡"),s(`
  node `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"rotate"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" node"),n("span",{class:"token punctuation"},";"),s("              "),n("span",{class:"token comment"},"// 返回子树的根结点"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Tn=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[s("TreeNode"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token function"},"insert"),n("span",{class:"token punctuation"},"("),s("T value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("root "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"insert_helper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("root"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" root"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token function"},"insert_helper"),n("span",{class:"token punctuation"},"("),s("TreeNode"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),n("span",{class:"token operator"},"*"),s(" node"),n("span",{class:"token punctuation"},","),s(" T value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"auto"),s(),n("span",{class:"token operator"},"*"),s(" i_node "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"TreeNode"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),s("value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("node "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(" i_node"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("value "),n("span",{class:"token operator"},">"),s(" node"),n("span",{class:"token operator"},"->"),s("value"),n("span",{class:"token punctuation"},")"),s(`
    node`),n("span",{class:"token operator"},"->"),s("right "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"insert_helper"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token operator"},"->"),s("right"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("value "),n("span",{class:"token operator"},"<"),s(" node"),n("span",{class:"token operator"},"->"),s("value"),n("span",{class:"token punctuation"},")"),s(`
    node`),n("span",{class:"token operator"},"->"),s("left "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"insert_helper"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token operator"},"->"),s("left"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"else"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" node"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token function"},"update_height"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  node `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"rotate"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" node"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),xn=n("h3",{id:"删除结点",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#删除结点","aria-hidden":"true"},"#"),s(" 删除结点")],-1),Nn=n("p",null,[s("「AVL 树」删除结点操作与「二叉搜索树」删除结点操作总体相同。类似地，"),n("strong",null,"在删除结点后，也需要从底至顶地执行旋转操作，使所有失衡结点恢复平衡"),s("。实际上在调整完"),n("strong",null,"最小不平衡子树"),s("时就可以使得整颗树达到平衡。")],-1),Ln=n("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token keyword"},"impl"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"AVLTree"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"/// 删除结点"),s(`
  `),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"remove"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"bool"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"let"),s(" removed "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"remove"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("root"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"if"),s(" removed "),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("length "),n("span",{class:"token operator"},"-="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    removed
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token comment"},"/// 递归的删除结点"),s(`
`),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"remove"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},"("),s("tree"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"AVLNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"bool"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(" tree "),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"let"),s(" removed "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"match"),s(" value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"cmp"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),s("node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
			`),n("span",{class:"token class-name"},"Ordering"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Less"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token function"},"remove"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(" node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token class-name"},"Ordering"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Greater"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token function"},"remove"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(" node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token class-name"},"Ordering"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Equal"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s(`
				`),n("span",{class:"token operator"},"*"),s("tree "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"match"),s(),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"take"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"take"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
					`),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"None"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"None"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token class-name"},"None"),n("span",{class:"token punctuation"},","),s(`
					`),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("b"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"None"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"None"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("b"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("b"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
					`),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"merge"),n("span",{class:"token punctuation"},"("),s("left"),n("span",{class:"token punctuation"},","),s(" right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
				`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
				`),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},";"),s(`
			`),n("span",{class:"token punctuation"},"}"),s(`
		`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token keyword"},"if"),s(" removed "),n("span",{class:"token punctuation"},"{"),s(`
			node`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rebalance"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token punctuation"},"}"),s(`
		removed
	`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token boolean"},"false"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token comment"},"/// 合并左右子树"),s(`
`),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"merge"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},"("),s("left"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"AVLNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token punctuation"},","),s(" right"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"AVLNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"AVLNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" op_right "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" root "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"take_min"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(" op_right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	root`),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	root`),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(" op_right"),n("span",{class:"token punctuation"},";"),s(`
	root`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"balance_factor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	root
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token comment"},"/// 找最小值"),s(`
`),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"take_min"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},"("),s("tree"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"AVLNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"AVLNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"mut"),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(" tree"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"take"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("small"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"take_min"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(" node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
			node`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"rebalance"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
			`),n("span",{class:"token operator"},"*"),s("tree "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
			`),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("small"),n("span",{class:"token punctuation"},")"),s(`
		`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
			`),n("span",{class:"token operator"},"*"),s("tree "),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"take"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
			`),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),s(`
		`),n("span",{class:"token punctuation"},"}"),s(`
	`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token class-name"},"None"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),An=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * 删除结点
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"node"),s(` 待删除结点
 * `),n("span",{class:"token keyword"},"@return"),s(` 删除后 AVL 树的根结点
 */`)]),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"remove"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  root `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"removeHelper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("root"),n("span",{class:"token punctuation"},","),s(" node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" root"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token doc-comment comment"},[s(`/**
 * 递归地删除结点 (辅助函数)
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"node"),s(` 子树的根结点
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"r_node"),s(` 待删除结点
 * `),n("span",{class:"token keyword"},"@return"),s(` 返回子树的根结点
 */`)]),s(`
`),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"removeHelper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" node"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" r_node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("node "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// 1. 查找结点, 并删除"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("r_node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"compareTo"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(`
    node`),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"removeHelper"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},","),s(" r_node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("r_node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"compareTo"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(`
    node`),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"removeHelper"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},","),s(" r_node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),s(),n("span",{class:"token operator"},"||"),s(" node"),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" child "),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),s(),n("span",{class:"token operator"},"?"),s(" node"),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},":"),s(" node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("child "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s("    "),n("span",{class:"token comment"},"// 子结点数量 = 0 ，直接删除 node 并返回"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token keyword"},"else"),s("                  "),n("span",{class:"token comment"},"// 子结点数量 = 1 ，直接删除 node"),s(`
        node `),n("span",{class:"token operator"},"="),s(" child"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// 子结点数量 = 2 ，则将中序遍历的下个结点删除，并用该结点替换当前结点"),s(`
      `),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" next "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"inOrderNext"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token class-name"},"T"),s(" tmp "),n("span",{class:"token operator"},"="),s(" next"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},";"),s(`
      node`),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"removeHelper"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),s("tmp"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      node`),n("span",{class:"token punctuation"},"."),s("value "),n("span",{class:"token operator"},"="),s(" tmp"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token function"},"updateHeight"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("       "),n("span",{class:"token comment"},"// 更新结点高度"),s(`
  `),n("span",{class:"token comment"},"// 2. 执行旋转操作，使该子树重新恢复平衡"),s(`
  node `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"rotate"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" node"),n("span",{class:"token punctuation"},";"),s("              "),n("span",{class:"token comment"},"// 返回子树的根结点"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token doc-comment comment"},[s(`/**
 * 获取待删除结点在中序遍历下的后继结点
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"node"),s(` 待删除结点的右子结点
 * `),n("span",{class:"token keyword"},"@return"),s(` 待删除结点在中序遍历下的后继结点
 */`)]),s(`
`),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"inOrderNext"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("node "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// 循环访问左子结点,直到叶结点时为最小结点,跳出循环"),s(`
  `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    node `),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" node"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Vn=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[s("TreeNode"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token function"},"remove"),n("span",{class:"token punctuation"},"("),s("T value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("root "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"remove_helper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("root"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" root"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token function"},"remove_helper"),n("span",{class:"token punctuation"},"("),s("TreeNode"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),n("span",{class:"token operator"},"*"),s(" node"),n("span",{class:"token punctuation"},","),s(" T value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("node "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("value "),n("span",{class:"token operator"},"<"),s(" node"),n("span",{class:"token operator"},"->"),s("value"),n("span",{class:"token punctuation"},")"),s(`
    node`),n("span",{class:"token operator"},"->"),s("left "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"remove_helper"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token operator"},"->"),s("left"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("value "),n("span",{class:"token operator"},">"),s(" node"),n("span",{class:"token operator"},"->"),s("value"),n("span",{class:"token punctuation"},")"),s(`
    node`),n("span",{class:"token operator"},"->"),s("right "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"remove_helper"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token operator"},"->"),s("right"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token operator"},"->"),s("left "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"nullptr"),s(),n("span",{class:"token operator"},"||"),s(" node"),n("span",{class:"token operator"},"->"),s("right "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// 当子结点数量 = 0 / 1 时， child = nullptr / 该子结点"),s(`
      TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("child "),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token operator"},"->"),s("left "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"nullptr"),s(),n("span",{class:"token operator"},"?"),s(" node"),n("span",{class:"token operator"},"->"),s("left "),n("span",{class:"token operator"},":"),s(" node"),n("span",{class:"token operator"},"->"),s("right"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("child "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(`
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token keyword"},"else"),s(`
        node `),n("span",{class:"token operator"},"="),s(" child"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token comment"},"// 子结点数量 = 2"),s(`
    `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
      TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("next "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"take_min"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token operator"},"->"),s("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      T tmp `),n("span",{class:"token operator"},"="),s(" next"),n("span",{class:"token operator"},"->"),s("value"),n("span",{class:"token punctuation"},";"),s(`
      node`),n("span",{class:"token operator"},"->"),s("right "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"remove_helper"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token operator"},"->"),s("right"),n("span",{class:"token punctuation"},","),s(" tmp"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      node`),n("span",{class:"token operator"},"->"),s("value "),n("span",{class:"token operator"},"="),s(" tmp"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token function"},"update_height"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  node `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"rotate"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" node"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},`/**
 * @brief 获取最小结点
 * @param root 所要寻找结点的右子结点
 * @return TreeNode<T>* 右子树上的最小结点
 */`),s(`
TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),n("span",{class:"token function"},"take_min"),n("span",{class:"token punctuation"},"("),s("TreeNode"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("root"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("root "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(" root"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// 循环访问左子结点，直到叶结点时为最小结点返回"),s(`
  `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token operator"},"->"),s("left "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    root `),n("span",{class:"token operator"},"="),s(" root"),n("span",{class:"token operator"},"->"),s("left"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" root"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Mn=n("h3",{id:"查找结点",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#查找结点","aria-hidden":"true"},"#"),s(" 查找结点")],-1),Rn=n("p",null,[s("在 AVL 树中查找的过程与二叉搜索树相同，假设 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("msub",null,[n("mi",null,"n"),n("mi",null,"h")])]),n("annotation",{encoding:"application/x-tex"},"n_h")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),n("span",{class:"mord"},[n("span",{class:"mord mathnormal"},"n"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.3361em"}},[n("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mathnormal mtight"},"h")])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.15em"}},[n("span")])])])])])])])]),s(" 表示深度为 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"h")]),n("annotation",{encoding:"application/x-tex"},"h")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal"},"h")])])]),s(" 的平衡树中含有的"),n("strong",null,"最少结点数"),s("，显然有 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("msub",null,[n("mi",null,"n"),n("mn",null,"0")]),n("mo",null,"="),n("mn",null,"0"),n("mo",{separator:"true"},","),n("msub",null,[n("mi",null,"n"),n("mn",null,"1")]),n("mo",null,"="),n("mn",null,"1"),n("mo",{separator:"true"},","),n("msub",null,[n("mi",null,"n"),n("mn",null,"2")]),n("mo",null,"="),n("mn",null,"2")]),n("annotation",{encoding:"application/x-tex"},"n_0=0,n_1=1,n_2=2")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),n("span",{class:"mord"},[n("span",{class:"mord mathnormal"},"n"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.3011em"}},[n("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},"0")])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.15em"}},[n("span")])])])])]),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8389em","vertical-align":"-0.1944em"}}),n("span",{class:"mord"},"0"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord"},[n("span",{class:"mord mathnormal"},"n"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.3011em"}},[n("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},"1")])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.15em"}},[n("span")])])])])]),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8389em","vertical-align":"-0.1944em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord"},[n("span",{class:"mord mathnormal"},"n"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.3011em"}},[n("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},"2")])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.15em"}},[n("span")])])])])]),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"2")])])]),s(" ，并且有 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("msub",null,[n("mi",null,"n"),n("mi",null,"h")]),n("mo",null,"="),n("msub",null,[n("mi",null,"n"),n("mrow",null,[n("mi",null,"h"),n("mo",null,"−"),n("mn",null,"1")])]),n("mo",null,"+"),n("msub",null,[n("mi",null,"n"),n("mrow",null,[n("mi",null,"h"),n("mo",null,"−"),n("mn",null,"2")])]),n("mo",null,"+"),n("mn",null,"1")]),n("annotation",{encoding:"application/x-tex"},"n_h=n_{h-1}+n_{h-2}+1")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),n("span",{class:"mord"},[n("span",{class:"mord mathnormal"},"n"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.3361em"}},[n("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mathnormal mtight"},"h")])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.15em"}},[n("span")])])])])]),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.7917em","vertical-align":"-0.2083em"}}),n("span",{class:"mord"},[n("span",{class:"mord mathnormal"},"n"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.3361em"}},[n("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mathnormal mtight"},"h"),n("span",{class:"mbin mtight"},"−"),n("span",{class:"mord mtight"},"1")])])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.2083em"}},[n("span")])])])])]),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.7917em","vertical-align":"-0.2083em"}}),n("span",{class:"mord"},[n("span",{class:"mord mathnormal"},"n"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.3361em"}},[n("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mathnormal mtight"},"h"),n("span",{class:"mbin mtight"},"−"),n("span",{class:"mord mtight"},"2")])])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.2083em"}},[n("span")])])])])]),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"1")])])]),s(" .")],-1),Sn=n("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token keyword"},"impl"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"AVLTree"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"/// 查找结点值"),s(`
  `),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"search"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"bool"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" cur "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("root"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(" cur "),n("span",{class:"token punctuation"},"{"),s(`
      cur `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"match"),s(" value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"cmp"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),s("node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"Ordering"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Equal"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token class-name"},"Ordering"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Less"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token operator"},"&"),s("node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},","),s(`
        `),n("span",{class:"token class-name"},"Ordering"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Greater"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token operator"},"&"),s("node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},","),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token boolean"},"false"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),jn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * 查找结点
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"node"),s(` 带查找的结点
 * `),n("span",{class:"token keyword"},"@return"),s(` 目标结点
 */`)]),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"search"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" cur "),n("span",{class:"token operator"},"="),s(" root"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("cur "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("cur"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"compareTo"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s("       "),n("span",{class:"token comment"},"// 目标结点在 root 的右子树中"),s(`
      cur `),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("cur"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"compareTo"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"// 目标结点在 root 的左子树中"),s(`
      cur `),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"else"),s("             "),n("span",{class:"token comment"},"// 找到目标结点，跳出循环"),s(`
      `),n("span",{class:"token keyword"},"break"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" cur"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),On=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token comment"},`/**
 * 查找结点
 * @param value 结点值
 * @return 结点信息
 */`),s(`
TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),n("span",{class:"token function"},"search"),n("span",{class:"token punctuation"},"("),s("T value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("cur "),n("span",{class:"token operator"},"="),s(" root"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("root "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("value "),n("span",{class:"token operator"},">"),s(" root"),n("span",{class:"token operator"},"->"),s("value"),n("span",{class:"token punctuation"},")"),s(" cur "),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token operator"},"->"),s("right"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("value "),n("span",{class:"token operator"},"<"),s(" root"),n("span",{class:"token operator"},"->"),s("value"),n("span",{class:"token punctuation"},")"),s(`
      cur `),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token operator"},"->"),s("left"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"else"),s(`
      `),n("span",{class:"token keyword"},"break"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" cur"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),zn=i('<h4 id="调整平衡练习" tabindex="-1"><a class="header-anchor" href="#调整平衡练习" aria-hidden="true">#</a> 调整平衡练习</h4><p>【RR型】</p><p><img src="'+x+'" alt="image-20230109111314747" loading="lazy"></p><p>【RL型】</p><p>先以失衡结点的右孩子的左孩子为原点进行右旋，将原点转为失衡结点的右孩子，变为 RR 型，然后再通过左旋将其调整平衡.</p><p><img src="'+N+'" alt="image-20230109113522390" loading="lazy"></p><p>【LR型】</p><p>先以失衡结点的左孩子的右孩子为原点进行左旋，将原点转为失衡结点的左孩子，变为 LL 型，然后再通过右旋将其调整平衡.</p><p><img src="'+L+'" alt="image-20230109120203094" loading="lazy"></p>',9);function Cn(Bn,Hn){const u=p("RouterLink"),l=p("CodeTabs"),r=p("Tabs");return d(),m("div",null,[V,b(" more "),n("p",null,[s("在「"),c(u,{to:"/Algorithm/data_struct/3.html"},{default:a(()=>[s("二叉搜索树 - 二叉搜索树的退化")]),_:1}),s("」中，可见二叉搜索树在动态维护中效率并不高。")]),M,R,S,j,O,z,c(l,{id:"25",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:o})=>[C]),tab1:a(({title:t,value:e,isActive:o})=>[B]),tab2:a(({title:t,value:e,isActive:o})=>[H]),_:1}),F,c(l,{id:"39",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:o})=>[E]),tab1:a(({title:t,value:e,isActive:o})=>[G]),tab2:a(({title:t,value:e,isActive:o})=>[q]),_:1}),D,I,c(l,{id:"56",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:o})=>[J]),tab1:a(({title:t,value:e,isActive:o})=>[K]),tab2:a(({title:t,value:e,isActive:o})=>[P]),_:1}),Q,U,W,X,Y,Z,c(r,{id:"87",data:[{title:"step1"},{title:"step2"},{title:"step3"},{title:"step4"}]},{tab0:a(({title:t,value:e,isActive:o})=>[$]),tab1:a(({title:t,value:e,isActive:o})=>[nn]),tab2:a(({title:t,value:e,isActive:o})=>[sn]),tab3:a(({title:t,value:e,isActive:o})=>[an]),_:1}),c(l,{id:"109",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:o})=>[tn]),tab1:a(({title:t,value:e,isActive:o})=>[en]),tab2:a(({title:t,value:e,isActive:o})=>[on]),_:1}),cn,ln,pn,c(l,{id:"129",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:o})=>[un]),tab1:a(({title:t,value:e,isActive:o})=>[rn]),tab2:a(({title:t,value:e,isActive:o})=>[kn]),_:1}),dn,mn,c(l,{id:"292",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:o})=>[bn]),tab1:a(({title:t,value:e,isActive:o})=>[vn]),tab2:a(({title:t,value:e,isActive:o})=>[hn]),_:1}),gn,yn,wn,c(l,{id:"312",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:o})=>[fn]),tab1:a(({title:t,value:e,isActive:o})=>[_n]),tab2:a(({title:t,value:e,isActive:o})=>[Tn]),_:1}),xn,Nn,c(l,{id:"329",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:o})=>[Ln]),tab1:a(({title:t,value:e,isActive:o})=>[An]),tab2:a(({title:t,value:e,isActive:o})=>[Vn]),_:1}),Mn,Rn,c(l,{id:"346",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:o})=>[Sn]),tab1:a(({title:t,value:e,isActive:o})=>[jn]),tab2:a(({title:t,value:e,isActive:o})=>[On]),_:1}),zn])}const Gn=k(A,[["render",Cn],["__file","5.html.vue"]]);export{Gn as default};
