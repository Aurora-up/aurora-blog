import{_ as r}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as k,c as m,e as d,d as c,w as a,a as n,b as s,f as i,r as u}from"./app.baae078d.js";const v="/aurora-blog/assets/image-20221227222729075.d0cb3478.png",b="/aurora-blog/assets/image-20221227224209336.27d44d6c.png",h="/aurora-blog/assets/image-20221227224245927.84b08366.png",w="/aurora-blog/assets/image-20221227224312600.fa03f11a.png",g="/aurora-blog/assets/image-20221227224343427.375a578e.png",y="/aurora-blog/assets/image-20221227225855008.c63fc071.png",f="/aurora-blog/assets/image-20221227230225366.e3248dc2.png",T="/aurora-blog/assets/image-20221227230333570.7ca18543.png",x="/aurora-blog/assets/image-20221227232312859.b48cafe6.png",_="/aurora-blog/assets/image-20221227232349026.46ec736c.png",N="/aurora-blog/assets/image-20221227232428289.e91e8c01.png",O="/aurora-blog/assets/image-20221227232458486.d3faeecb.png",M="/aurora-blog/assets/image-20230102120759666.439e234f.png",S="/aurora-blog/assets/image-20230102122358130.602aa39d.png",B="/aurora-blog/assets/image-20230102122459746.aae64969.png",L={},j=n("p",null,"「二叉搜索树 Binary Search Tree」",-1),A=n("p",null,"「二叉搜索树 Binary Search Tree」满足以下条件：",-1),z=n("ol",null,[n("li",null,"对于根结点，左子树中所有结点的值 < 根结点的值 < 右子树中所有结点的值；"),n("li",null,[s("任意结点的左子树和右子树也是二叉搜索树，即也满足条件 "),n("code",null,"1."),s(" ；")])],-1),C=n("p",null,[n("img",{src:v,alt:"image-20221227222729075",loading:"lazy"})],-1),V=n("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token comment"},"/// 二叉搜索树结点"),s(`
`),n("span",{class:"token attribute attr-name"},"#[derive(Debug)]"),s(`
`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token type-definition class-name"},"TreeNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},"{"),s(`
	value`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},","),s(`
	left`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s(`
	right`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token keyword"},"impl"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token comment"},"/// 创建一个新结点"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"new"),n("span",{class:"token punctuation"},"("),s("val"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"Self"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token class-name"},"TreeNode"),s(),n("span",{class:"token punctuation"},"{"),s(" value"),n("span",{class:"token punctuation"},":"),s(" val"),n("span",{class:"token punctuation"},","),s(" left"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"None"),n("span",{class:"token punctuation"},","),s(" right"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"None"),s(),n("span",{class:"token punctuation"},"}"),s(`	
	`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"/// 二叉搜索树"),s(`
`),n("span",{class:"token attribute attr-name"},"#[derive(Debug)]"),s(`
`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token type-definition class-name"},"BinarySearchTree"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token comment"},"/// 二叉搜索树根结点"),s(`
	root`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"impl"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"BinarySearchTree"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"/// 创建一颗空的二叉搜索树"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"Self"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token class-name"},"BinarySearchTree"),s(),n("span",{class:"token punctuation"},"{"),s(" root"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"None"),s(),n("span",{class:"token punctuation"},"}"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
	`),n("span",{class:"token comment"},"/// 从结点值数组构建二叉搜索树"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"from"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s("nodes"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
		nodes`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"sort"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("root "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"build_tree"),n("span",{class:"token punctuation"},"("),s("nodes"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"("),s("nodes"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"len"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"as"),s(),n("span",{class:"token keyword"},"isize"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token comment"},"/// 递归地构建二叉搜索树"),s(`
`),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"build_tree"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},"("),s(" nodes"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token punctuation"},","),s("begin"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"isize"),n("span",{class:"token punctuation"},","),s(" end"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"isize"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"if"),s(" begin "),n("span",{class:"token operator"},">"),s(" end "),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token class-name"},"None"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),s(`
	`),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" mid "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("begin "),n("span",{class:"token operator"},"+"),s(" end"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"/"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" root "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Box"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),s("nodes"),n("span",{class:"token punctuation"},"["),s("mid "),n("span",{class:"token keyword"},"as"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"clone"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	root`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"as_mut"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"build_tree"),n("span",{class:"token punctuation"},"("),s("nodes"),n("span",{class:"token punctuation"},","),s(" begin"),n("span",{class:"token punctuation"},","),s(" mid "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	root`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"as_mut"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"build_tree"),n("span",{class:"token punctuation"},"("),s("nodes"),n("span",{class:"token punctuation"},","),s(" mid "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(" end"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token keyword"},"return"),s(" root"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),D=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token comment"},"// 二叉搜索树结点"),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),s(),n("span",{class:"token keyword"},"extends"),s(),n("span",{class:"token class-name"},"Comparable"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"T"),s(" value"),n("span",{class:"token punctuation"},";"),s("             "),n("span",{class:"token comment"},"// 结点值"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" left"),n("span",{class:"token punctuation"},";"),s("    "),n("span",{class:"token comment"},"// 左子结点"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" right"),n("span",{class:"token punctuation"},";"),s("   "),n("span",{class:"token comment"},"// 右子结点"),s(`

  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"T"),s(" value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("value "),n("span",{class:"token operator"},"="),s(" value"),n("span",{class:"token punctuation"},";"),s(`  
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"BinarySearchTree"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),s(),n("span",{class:"token keyword"},"extends"),s(),n("span",{class:"token class-name"},"Comparable"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" root"),n("span",{class:"token punctuation"},";"),s(`
 	`),n("span",{class:"token doc-comment comment"},[s(`/**
   * 构建二叉搜索树
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"nodes"),s(` 原始无序数组 (存储的是结点中的 值 ,即 TreeNode.value )
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"BinarySearchTree"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" nodes"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token class-name"},"Arrays"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"sort"),n("span",{class:"token punctuation"},"("),s("nodes"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("root "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"buildTree"),n("span",{class:"token punctuation"},"("),s("nodes"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(" nodes"),n("span",{class:"token punctuation"},"."),s("length "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  
  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * `),n("span",{class:"token keyword"},"@return"),s(` 二叉树的根结点
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"getRoot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("root"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  
  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 根据有序数组构建二叉树搜索树
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"nodes"),s(` 有序的结点数组
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"begin"),s(` 结点数组起始索引
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"end"),s(`   结点数组末尾索引
   * `),n("span",{class:"token keyword"},"@return"),s(` 二叉搜索树的根结点
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"buildTree"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" nodes"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" begin"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" end"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("begin "),n("span",{class:"token operator"},">"),s(" end"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// nodes[mid] 作为根结点"),s(`
    `),n("span",{class:"token keyword"},"int"),s(" mid "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("begin "),n("span",{class:"token operator"},"+"),s(" end"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"/"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" root "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),s("nodes"),n("span",{class:"token punctuation"},"["),s("mid"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// 递归构建左子树和右子树"),s(`
    root`),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"buildTree"),n("span",{class:"token punctuation"},"("),s("nodes"),n("span",{class:"token punctuation"},","),s(" begin"),n("span",{class:"token punctuation"},","),s(" mid "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    root`),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"buildTree"),n("span",{class:"token punctuation"},"("),s("nodes"),n("span",{class:"token punctuation"},","),s(" mid "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(" end"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" root"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),E=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token comment"},"// 二叉搜索树结点"),s(`
`),n("span",{class:"token keyword"},"template"),s(),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"typename"),s(),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">"),s(`
`),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"TreeNode"),s(),n("span",{class:"token punctuation"},"{"),s(`
  T value`),n("span",{class:"token punctuation"},";"),s("            "),n("span",{class:"token comment"},"// 结点值"),s(`
  TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("left"),n("span",{class:"token punctuation"},";"),s("  "),n("span",{class:"token comment"},"// 左子结点"),s(`
  TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("right"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 右子结点"),s(`
  `),n("span",{class:"token function"},"TreeNode"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"default"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"explicit"),s(),n("span",{class:"token function"},"TreeNode"),n("span",{class:"token punctuation"},"("),s("T x"),n("span",{class:"token punctuation"},","),s(" TreeNode"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("left "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},","),s(" TreeNode"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("right "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(`
      `),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"value"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token function"},"left"),n("span",{class:"token punctuation"},"("),s("left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token function"},"right"),n("span",{class:"token punctuation"},"("),s("right"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"// 二叉搜索树"),s(`
`),n("span",{class:"token keyword"},"template"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"typename"),s(),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">"),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"BinarySearchTree"),s(),n("span",{class:"token punctuation"},"{"),s(`

`),n("span",{class:"token keyword"},"private"),n("span",{class:"token operator"},":"),s(`
  TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("root"),n("span",{class:"token punctuation"},";"),n("span",{class:"token comment"},"// 二叉搜索树根结点"),s(`

`),n("span",{class:"token keyword"},"public"),n("span",{class:"token operator"},":"),s(`
  `),n("span",{class:"token comment"},`/**
   * @brief 从数组中构建一颗二叉搜索树
   * @param nodes 结点数组
   */`),s(`
  `),n("span",{class:"token keyword"},"explicit"),s(),n("span",{class:"token function"},"BinarySearchTree"),n("span",{class:"token punctuation"},"("),s("vector"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(" nodes"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"sort"),n("span",{class:"token punctuation"},"("),s("nodes"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"begin"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" nodes"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"end"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    root `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"buildTree"),n("span",{class:"token punctuation"},"("),s("nodes"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},","),s(" nodes"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"size"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token comment"},`/**
   * @brief 递归地构建二叉搜索树
   * @param nodes 排好序的数组
   * @param begin 开始索引
   * @param end   结束索引
   * @return TreeNode<T>* 相对 “根结点”
   */`),s(`
  TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),n("span",{class:"token function"},"buildTree"),n("span",{class:"token punctuation"},"("),s("vector"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(" nodes"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" begin"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" end"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("begin "),n("span",{class:"token operator"},">"),s(" end"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"int"),s(" mid "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token punctuation"},"("),s("begin "),n("span",{class:"token operator"},"+"),s(" end"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"/"),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"auto"),s(),n("span",{class:"token operator"},"*"),s("root "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"TreeNode"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),s("nodes"),n("span",{class:"token punctuation"},"["),s("mid"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    root`),n("span",{class:"token operator"},"->"),s("left "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"buildTree"),n("span",{class:"token punctuation"},"("),s("nodes"),n("span",{class:"token punctuation"},","),s(" begin"),n("span",{class:"token punctuation"},","),s(" mid "),n("span",{class:"token operator"},"-"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    root`),n("span",{class:"token operator"},"->"),s("right "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"buildTree"),n("span",{class:"token punctuation"},"("),s("nodes"),n("span",{class:"token punctuation"},","),s(" mid "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(" end"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" root"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  
  TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),n("span",{class:"token function"},"getRoot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("root"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),q=i('<h2 id="二叉搜索树的操作" tabindex="-1"><a class="header-anchor" href="#二叉搜索树的操作" aria-hidden="true">#</a> 二叉搜索树的操作</h2><h3 id="查找结点" tabindex="-1"><a class="header-anchor" href="#查找结点" aria-hidden="true">#</a> 查找结点</h3><p>给定目标结点 <code>node</code> ，可以根据二叉搜索树的性质来查找。声明一个结点 <code>cur</code> ，从二叉树的根结点 <code>root</code> 出发，循环比较结点值 <code>cur.value</code> 和 <code>node.value</code> 之间的大小关系.</p><ul><li>若 <code>cur.value &lt; node.value</code> ，说明目标结点在 <code>cur</code> 的右子树中，因此执行 <code>cur = cur.right</code> ；</li><li>若 <code>cur.value &gt; node.value</code> ，说明目标结点在 <code>cur</code> 的左子树中，因此执行 <code>cur = cur.left</code> ；</li><li>若 <code>cur.value = node.value</code> ，说明找到目标结点，跳出循环并返回该结点即可；</li></ul>',4),P=n("p",null,[n("img",{src:b,alt:"image-20221227224209336",loading:"lazy"})],-1),G=n("p",null,[n("img",{src:h,alt:"image-20221227224245927",loading:"lazy"})],-1),R=n("p",null,[n("img",{src:w,alt:"image-20221227224312600",loading:"lazy"})],-1),U=n("p",null,[n("img",{src:g,alt:"image-20221227224343427",loading:"lazy"})],-1),F=n("p",null,[s("二叉搜索树的查找操作就像二分查找一样，每次折半。循环次数最多为二叉树的高度，"),n("strong",null,"当二叉树平衡时"),s("，时间复杂度为 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"l"),n("mi",null,"o"),n("mi",null,"g"),n("mtext",null," "),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(log \\ n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mspace"}," "),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])]),s(" .")],-1),H=n("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token keyword"},"impl"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"BinarySearchTree"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token comment"},"/// 查找结点值,"),s(`
  `),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"search"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"bool"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" cur "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("root"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(" cur "),n("span",{class:"token punctuation"},"{"),s(`
      cur `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"match"),s(" value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"cmp"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),s("node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
        `),n("span",{class:"token class-name"},"Ordering"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Equal"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},","),s("     "),n("span",{class:"token comment"},"// 已找到"),s(`
        `),n("span",{class:"token class-name"},"Ordering"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Less"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token operator"},"&"),s("node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},","),s("       "),n("span",{class:"token comment"},"// 左子树中"),s(`
        `),n("span",{class:"token class-name"},"Ordering"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Greater"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token operator"},"&"),s("node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},","),s("   "),n("span",{class:"token comment"},"// 右子树中"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token boolean"},"false"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),I=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * 查找结点
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"node"),s(` 查找的目标结点
 * `),n("span",{class:"token keyword"},"@return"),s(` 返回查找的目标结点
 */`)]),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"search"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" cur "),n("span",{class:"token operator"},"="),s(" root"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("cur "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),s(),n("span",{class:"token operator"},"&&"),s(" node "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("cur"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"compareTo"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s("      "),n("span",{class:"token comment"},"// 目标结点的值大于根结点的值, 在右子树中"),s(`
      cur `),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("cur"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"compareTo"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// 目标结点的值小于根结点的值, 在左子树中"),s(`
      cur `),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"else"),s("           "),n("span",{class:"token comment"},"// 找到目标结点, 跳出循环"),s(`
      `),n("span",{class:"token keyword"},"break"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" cur"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),J=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token comment"},`/**
 * @brief 查找结点
 * @param value 被查找的结点值
 * @return TreeNode<T>* 找到的结点
 */`),s(`
TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),n("span",{class:"token function"},"search"),n("span",{class:"token punctuation"},"("),s("T value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("cur "),n("span",{class:"token operator"},"="),s(" root"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("root "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("value "),n("span",{class:"token operator"},">"),s(" root"),n("span",{class:"token operator"},"->"),s("value"),n("span",{class:"token punctuation"},")"),s(" cur "),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token operator"},"->"),s("right"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("value "),n("span",{class:"token operator"},"<"),s(" root"),n("span",{class:"token operator"},"->"),s("value"),n("span",{class:"token punctuation"},")"),s(" cur "),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token operator"},"->"),s("left"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"break"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" cur"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),K=n("h3",{id:"插入结点",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#插入结点","aria-hidden":"true"},"#"),s(" 插入结点")],-1),Q=n("p",null,[s("给定一个待插入结点 "),n("code",null,"node"),s(" ，为了保持二叉搜索树 “左子树 < 根结点 < 右子树” 的性质，插入操作分为两步：")],-1),W=n("ol",null,[n("li",null,[n("strong",null,"查找插入位置："),s(" 与查找操作类似，我们从根结点出发，根据当前结点值和 "),n("code",null,"node.value"),s(" 的大小关系循环向下搜索，直到越过叶结点（遍历到 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"n"),n("mi",null,"u"),n("mi",null,"l"),n("mi",null,"l")]),n("annotation",{encoding:"application/x-tex"},"null")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mord mathnormal"},"u"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"ll")])])]),s("）时跳出循环；")]),n("li",null,[n("strong",null,"在该位置插入结点："),s(" 将该结点放到查到的 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"n"),n("mi",null,"u"),n("mi",null,"l"),n("mi",null,"l")]),n("annotation",{encoding:"application/x-tex"},"null")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mord mathnormal"},"u"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"ll")])])]),s(" 位置 ；")])],-1),X=n("p",null,"二叉搜索树不允许存在重复结点，否则将会违背其定义。因此若待插入结点在树中已经存在，则不执行插入，直接返回即可.",-1),Y=n("p",null,[n("img",{src:y,alt:"image-20221227225855008",loading:"lazy"})],-1),Z=n("p",null,[s("为了插入结点，需要借助 "),n("strong",null,[s("辅助结点 "),n("code",null,"pre")]),s(" 保存上一轮循环的结点，这样在遍历到 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"n"),n("mi",null,"u"),n("mi",null,"l"),n("mi",null,"l")]),n("annotation",{encoding:"application/x-tex"},"null")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mord mathnormal"},"u"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"ll")])])]),s(" 时，我们也可以获取到其父结点，从而完成结点插入操作。")],-1),$=n("p",null,[s("与查找结点相同，"),n("strong",null,"当二叉树平衡时"),s("，插入结点的时间复杂度为: "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"l"),n("mi",null,"o"),n("mi",null,"g"),n("mtext",null," "),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(log \\ n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mspace"}," "),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])]),s(".")],-1),nn=n("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token keyword"},"impl"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"BinarySearchTree"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token comment"},"/// 插入结点值"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"insert"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"bool"),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token function"},"insert_helper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("root"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},")"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token comment"},"/// 插入辅助函数 (递归插入)"),s(`
`),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"insert_helper"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},"("),s("tree"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},":"),n("span",{class:"token class-name"},"T"),s(),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"bool"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(" tree "),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"let"),s(" inserted "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"match"),s(" value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"cmp"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),s("node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
			`),n("span",{class:"token class-name"},"Ordering"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Equal"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},","),s("         "),n("span",{class:"token comment"},"// 结点已存在"),s(`
			`),n("span",{class:"token class-name"},"Ordering"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Less"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token function"},"insert_helper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(" node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s("    "),n("span",{class:"token comment"},"// 应插入左子树"),s(`
			`),n("span",{class:"token class-name"},"Ordering"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Greater"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token function"},"insert_helper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(" node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),n("span",{class:"token comment"},"// 应插入右子树"),s(`
		`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
		inserted
	`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s("                                  "),n("span",{class:"token comment"},"// 找到待插入结点的位置,将其插入"),s(`
		`),n("span",{class:"token operator"},"*"),s("tree "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Box"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token punctuation"},"{"),s(`
			value`),n("span",{class:"token punctuation"},","),s(`
			left`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"None"),n("span",{class:"token punctuation"},","),s(`
			right`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"None"),n("span",{class:"token punctuation"},","),s(`
		`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token boolean"},"true"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),sn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * 插入结点
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"node"),s(` 需要被插入的结点
 * `),n("span",{class:"token keyword"},"@return"),s(` 被插入结点信息
 */`)]),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"insert"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("root "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" cur "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("root"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" pre "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// 查找结点位置"),s(`
  `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("cur "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("cur"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"compareTo"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// 结点已经存在, 直接返回"),s(`
      `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`
    pre `),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token punctuation"},";"),s("                  "),n("span",{class:"token comment"},"// 记录当前结点, 便于后序的插入"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("cur"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"compareTo"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"// 插入位置在当前结点的右子树"),s(`
      cur `),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"else"),s("                                      "),n("span",{class:"token comment"},"// 插入位置在当前结点的左子树"),s(`
      cur `),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token comment"},"// 插入该结点"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("pre"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"compareTo"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(`
    pre`),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"else"),s(`
    pre`),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" node"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),an=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token comment"},`/**
 * @brief 插入一个结点
 * @param value 结点值
 * @return TreeNode<T>* 插入的结点
 */`),s(`
TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),n("span",{class:"token function"},"insert"),n("span",{class:"token punctuation"},"("),s("T value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("root "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},";"),s(`
  TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("cur "),n("span",{class:"token operator"},"="),s(" root"),n("span",{class:"token punctuation"},";"),s(`
  TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("pre "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// 查找结点位置"),s(`
  `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("cur "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("cur"),n("span",{class:"token operator"},"->"),s("value "),n("span",{class:"token operator"},"=="),s(" value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},";"),s(`
    pre `),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token punctuation"},";"),s("                 "),n("span",{class:"token comment"},"// 记录上一结点,便于插入"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("cur"),n("span",{class:"token operator"},"->"),s("value "),n("span",{class:"token operator"},">"),s(" value"),n("span",{class:"token punctuation"},")"),s(" cur "),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token operator"},"->"),s("left"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"else"),s(" cur "),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token operator"},"->"),s("right"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token comment"},"// 插入结点"),s(`
  TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("node "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"TreeNode"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),s("value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("pre"),n("span",{class:"token operator"},"->"),s("value "),n("span",{class:"token operator"},"<"),s(" value"),n("span",{class:"token punctuation"},")"),s(" pre"),n("span",{class:"token operator"},"->"),s("right "),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"else"),s(" pre"),n("span",{class:"token operator"},"->"),s("left "),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" node"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),tn=n("h3",{id:"删除结点",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#删除结点","aria-hidden":"true"},"#"),s(" 删除结点")],-1),en=n("p",null,[s("与插入结点一样，我们需要在删除操作后维持二叉搜索树的 “左子树 < 根结点 < 右子树” 的性质。首先，我们需要在二叉树中执行查找操作，获取待删除结点。根据待删除结点的"),n("strong",null,"子结点数量"),s("，删除操作需要分为三种情况：")],-1),on=n("ol",null,[n("li",null,[n("strong",null,[s("待删除结点的子结点数量 = "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"0")]),n("annotation",{encoding:"application/x-tex"},"0")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"0")])])]),s(" .")]),s(" 表明待删除结点是叶结点，直接删除即可。")])],-1),cn=n("p",null,[n("img",{src:f,alt:"image-20221227230225366",loading:"lazy"})],-1),ln=n("ol",{start:"2"},[n("li",null,[n("strong",null,[s("待删除结点的子结点数量 = "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"1")]),n("annotation",{encoding:"application/x-tex"},"1")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"1")])])]),s(" .")]),s(" 将待删除结点替换为其子结点。")])],-1),pn=n("p",null,[n("img",{src:T,alt:"image-20221227230333570",loading:"lazy"})],-1),un=n("ol",{start:"3"},[n("li",null,[n("strong",null,[s("待删除结点的子结点数量 = "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"2")]),n("annotation",{encoding:"application/x-tex"},"2")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"2")])])]),s(" .")]),s(" 删除操作分为三步： "),n("ol",null,[n("li",null,[s("找到待删除结点在 "),n("strong",null,"中序遍历序列"),s(" 中的下一个结点，记为 "),n("code",null,"next"),s(" ；")]),n("li",null,[s("在树中递归删除结点 "),n("code",null,"next"),s(" ；")]),n("li",null,[s("使用 "),n("code",null,"next"),s(" 替换待删除结点；")])])])],-1),rn=n("p",null,[n("img",{src:x,alt:"image-20221227232312859",loading:"lazy"})],-1),kn=n("p",null,[n("img",{src:_,alt:"image-20221227232349026",loading:"lazy"})],-1),mn=n("p",null,[n("img",{src:N,alt:"image-20221227232428289",loading:"lazy"})],-1),dn=n("p",null,[n("img",{src:O,alt:"image-20221227232458486",loading:"lazy"})],-1),vn=n("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token keyword"},"impl"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token class-name"},"BinarySearchTree"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token comment"},"/// 删除结点"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"remove"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"bool"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token function"},"remove_helper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("root"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},")"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token comment"},"/// 删除辅助函数"),s(`
`),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"remove_helper"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},"("),s("tree"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"bool"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(" tree "),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"let"),s(" removed "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"match"),s(" value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"cmp"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),s("node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
			`),n("span",{class:"token class-name"},"Ordering"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Less"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token function"},"remove_helper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(" node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token class-name"},"Ordering"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Greater"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token function"},"remove_helper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(" node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},","),s(" value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
			`),n("span",{class:"token class-name"},"Ordering"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token class-name"},"Equal"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token punctuation"},"{"),s("          "),n("span",{class:"token comment"},"// 找到了需要删除的结点"),s(`
				`),n("span",{class:"token operator"},"*"),s("tree "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"match"),s(),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"take"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"take"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
					`),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"None"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"None"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token class-name"},"None"),n("span",{class:"token punctuation"},","),s("                          "),n("span",{class:"token comment"},"// 删除叶子结点"),s(`
					`),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("b"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"None"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"|"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"None"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("b"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("b"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// 删除只有一个叶子结点的结点"),s(`
					`),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token function"},"merge"),n("span",{class:"token punctuation"},"("),s("left"),n("span",{class:"token punctuation"},","),s(" right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token comment"},"// 删除有两个子结点的结点"),s(`
				`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
				`),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},";"),s(`
			`),n("span",{class:"token punctuation"},"}"),s(`
		`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
		removed
	`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token boolean"},"false"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token comment"},"/// 将要被删除的结点替换为它的中序遍历前驱结点, 返回该结点"),s(`
`),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"merge"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},"("),s("left"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token punctuation"},","),s(" right"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" op_right "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token comment"},"// 寻找被删除结点的中序遍历前驱结点, 即其右子树中的最小值"),s(`
	`),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" root "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"take_min"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(" op_right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	root`),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("left"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	root`),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(" op_right"),n("span",{class:"token punctuation"},";"),s(`
	root
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token comment"},"/// 获取最小值"),s(`
`),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"take_min"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},"("),s("tree"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"mut"),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(" tree"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"take"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token comment"},"// 例如删除 4 , 寻找其右子树种的最小结点,即: 5"),s(`
		`),n("span",{class:"token comment"},"//         4"),s(`
		`),n("span",{class:"token comment"},"//       /   \\"),s(`
		`),n("span",{class:"token comment"},"//      2     6"),s(`
		`),n("span",{class:"token comment"},"//     / \\   / \\"),s(`
		`),n("span",{class:"token comment"},"//    1  3  5   7"),s(`
		`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("min"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"take_min"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(" node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s("  "),n("span",{class:"token comment"},"// 右子树中最左端结点"),s(`
			`),n("span",{class:"token operator"},"*"),s("tree "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
			`),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("min"),n("span",{class:"token punctuation"},")"),s(`
		
		`),n("span",{class:"token punctuation"},"}"),s(`
		`),n("span",{class:"token comment"},"// 例如删除 4 , 寻找其右子树种的最小结点,即: 6"),s(`
		`),n("span",{class:"token comment"},"//         4"),s(`
		`),n("span",{class:"token comment"},"//       /   \\"),s(`
		`),n("span",{class:"token comment"},"//      2     6"),s(`
		`),n("span",{class:"token comment"},"//     / \\   "),s(`
		`),n("span",{class:"token comment"},"//    1  3  "),s(`
		`),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s("                       "),n("span",{class:"token comment"},"//右子结点"),s(`
			`),n("span",{class:"token operator"},"*"),s("tree "),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"take"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`     
			`),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),s(`
		`),n("span",{class:"token punctuation"},"}"),s(`
	`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token class-name"},"None"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),bn=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token doc-comment comment"},[s(`/**
 * 删除结点
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"node"),s(` 需要被删除的结点
 * `),n("span",{class:"token keyword"},"@return"),s(` 被删除的结点的信息
 */`)]),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"remove"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("root "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s("        "),n("span",{class:"token comment"},"// 树为空,直接返回"),s(`
  `),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" cur "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("root"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" pre "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("cur "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("cur"),n("span",{class:"token punctuation"},"."),s("value "),n("span",{class:"token operator"},"=="),s(" node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),s("             "),n("span",{class:"token comment"},"// 找到待删除结点,跳出循环"),s(`
      `),n("span",{class:"token keyword"},"break"),n("span",{class:"token punctuation"},";"),s(`
    pre `),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token punctuation"},";"),s("                               "),n("span",{class:"token comment"},"// 记录当前结点,便于后续删除"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("cur"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"compareTo"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// 待删除结点在当前结点的右子树中"),s(`
      cur `),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"else"),s("                                     "),n("span",{class:"token comment"},"// 待删除结点在当前结点的左子树中"),s(`
      cur `),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("cur "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s("              "),n("span",{class:"token comment"},"// 待删除结点不存在"),s(`
  `),n("span",{class:"token comment"},"// 待删除结点的 子结点数量 = 0 或 1"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("cur"),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),s(),n("span",{class:"token operator"},"||"),s(" cur"),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// 当子结点数量 = 0 / 1 时， child = null / 该子结点"),s(`
    `),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" child "),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),s(),n("span",{class:"token operator"},"?"),s(" cur"),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},":"),s(" cur"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("pre"),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"=="),s(" cur"),n("span",{class:"token punctuation"},")"),s(" pre"),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"="),s(" child"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"else"),s(" pre"),n("span",{class:"token punctuation"},"."),s("right "),n("span",{class:"token operator"},"="),s(" child"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token comment"},"// 待删除结点数量 = 2"),s(`
  `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// 获取中序遍历下 cur 的后继结点 next"),s(`
    `),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" next "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"take_min"),n("span",{class:"token punctuation"},"("),s("cur"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"T"),s(" tmp "),n("span",{class:"token operator"},"="),s(" next"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// 删除 next 结点"),s(`
    `),n("span",{class:"token function"},"remove"),n("span",{class:"token punctuation"},"("),s("next"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token comment"},"// 将 next 结点的值赋给待删除结点"),s(`
    cur`),n("span",{class:"token punctuation"},"."),s("value "),n("span",{class:"token operator"},"="),s(" tmp"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" cur"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token doc-comment comment"},[s(`/**
 * 获取最小结点
 * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"node"),s(`
 * `),n("span",{class:"token keyword"},"@return"),s(`
 */`)]),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"take_min"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" node"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("node "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},"."),s("left "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    node `),n("span",{class:"token operator"},"="),s(" node"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" node"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),hn=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token comment"},`/**
 * @brief 删除结点
 * @param value 结点值
 * @return TreeNode<T>* 被删除的结点
 */`),s(`
TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),n("span",{class:"token function"},"remove"),n("span",{class:"token punctuation"},"("),s("T value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("root "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},";"),s(`
  TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("cur "),n("span",{class:"token operator"},"="),s(" root"),n("span",{class:"token punctuation"},";"),s(`
  TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("pre "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// 查找待删除的结点"),s(`
  `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("cur "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("cur"),n("span",{class:"token operator"},"->"),s("value "),n("span",{class:"token operator"},"=="),s(" value"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"break"),n("span",{class:"token punctuation"},";"),s(`
    pre `),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("cur"),n("span",{class:"token operator"},"->"),s("value "),n("span",{class:"token operator"},">"),s(" value"),n("span",{class:"token punctuation"},")"),s(" cur "),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token operator"},"->"),s("left"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"else"),s(" cur "),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token operator"},"->"),s("right"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("cur "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// 子结点数量为 0 or 1"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("cur"),n("span",{class:"token operator"},"->"),s("left "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"nullptr"),s(),n("span",{class:"token operator"},"||"),s(" cur"),n("span",{class:"token operator"},"->"),s("right "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// 当子结点数量 = 0 / 1 时， child = nullptr / 该子结点"),s(`
    TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("child "),n("span",{class:"token operator"},"="),s(" cur"),n("span",{class:"token operator"},"->"),s("left "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"nullptr"),s(),n("span",{class:"token operator"},"?"),s(" cur"),n("span",{class:"token operator"},"->"),s("left "),n("span",{class:"token operator"},":"),s(" cur"),n("span",{class:"token operator"},"->"),s("right"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("pre"),n("span",{class:"token operator"},"->"),s("left "),n("span",{class:"token operator"},"=="),s(" cur"),n("span",{class:"token punctuation"},")"),s(" pre"),n("span",{class:"token operator"},"->"),s("left "),n("span",{class:"token operator"},"="),s(" child"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"else"),s(" pre"),n("span",{class:"token operator"},"->"),s("right "),n("span",{class:"token operator"},"="),s(" child"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token comment"},"// 子结点数量 = 2"),s(`
  `),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
    TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("next "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"take_min"),n("span",{class:"token punctuation"},"("),s("cur"),n("span",{class:"token operator"},"->"),s("right"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"int"),s(" tmp "),n("span",{class:"token operator"},"="),s(" next"),n("span",{class:"token operator"},"->"),s("value"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token function"},"remove"),n("span",{class:"token punctuation"},"("),s("next"),n("span",{class:"token operator"},"->"),s("value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    cur`),n("span",{class:"token operator"},"->"),s("value "),n("span",{class:"token operator"},"="),s(" tmp"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},`/**
 * @brief 获取最小结点
 * @param root 所要寻找结点的右子结点
 * @return TreeNode<T>* 右子树上的最小结点
 */`),s(`
TreeNode`),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),n("span",{class:"token function"},"take_min"),n("span",{class:"token punctuation"},"("),s("TreeNode"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("root"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("root "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(" root"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token comment"},"// 循环访问左子结点，直到叶结点时为最小结点返回"),s(`
  `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token operator"},"->"),s("left "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    root `),n("span",{class:"token operator"},"="),s(" root"),n("span",{class:"token operator"},"->"),s("left"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" root"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),wn=n("h2",{id:"二叉搜索树的优势",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#二叉搜索树的优势","aria-hidden":"true"},"#"),s(" 二叉搜索树的优势")],-1),gn=n("table",null,[n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}}),n("th",{style:{"text-align":"center"}},"无序数组"),n("th",{style:{"text-align":"center"}},"有序数组"),n("th",{style:{"text-align":"center"}},"二叉搜索树 (平衡时)")])]),n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"center"}},"查找指定元素"),n("td",{style:{"text-align":"center"}},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])]),n("td",{style:{"text-align":"center"}},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"l"),n("mi",null,"o"),n("mi",null,"g"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(logn)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])]),n("td",{style:{"text-align":"center"}},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"l"),n("mi",null,"o"),n("mi",null,"g"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(logn)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])])]),n("tr",null,[n("td",{style:{"text-align":"center"}},"插入元素"),n("td",{style:{"text-align":"center"}},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(1)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")")])])])]),n("td",{style:{"text-align":"center"}},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])]),n("td",{style:{"text-align":"center"}},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"l"),n("mi",null,"o"),n("mi",null,"g"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(logn)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])])]),n("tr",null,[n("td",{style:{"text-align":"center"}},"删除元素"),n("td",{style:{"text-align":"center"}},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])]),n("td",{style:{"text-align":"center"}},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])]),n("td",{style:{"text-align":"center"}},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"l"),n("mi",null,"o"),n("mi",null,"g"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(logn)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])])]),n("tr",null,[n("td",{style:{"text-align":"center"}},"获取最小 / 最大元素"),n("td",{style:{"text-align":"center"}},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])]),n("td",{style:{"text-align":"center"}},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mn",null,"1"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(1)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")")])])])]),n("td",{style:{"text-align":"center"}},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"l"),n("mi",null,"o"),n("mi",null,"g"),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(logn)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])])])])],-1),yn=n("div",{class:"custom-container warning"},[n("p",{class:"custom-container-title"},"注意"),n("p",null,"虽然在平衡时二叉搜索树的各项效率较好，但是这仅限平衡时，而对于一般的二叉树，如果对其进行动态维护，那么二叉搜索树就会退化。")],-1),fn=n("h2",{id:"二叉搜索树的退化",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#二叉搜索树的退化","aria-hidden":"true"},"#"),s(" 二叉搜索树的退化")],-1),Tn=n("p",null,[s("理想状态下的，希望二叉搜索树是 “左右平衡” 的，此时可以在 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"l"),n("mi",null,"o"),n("msub",null,[n("mi",null,"g"),n("mi",null,"n")]),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(log_n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord"},[n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t vlist-t2"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.1514em"}},[n("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mathnormal mtight"},"n")])])]),n("span",{class:"vlist-s"},"​")]),n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.15em"}},[n("span")])])])])]),n("span",{class:"mclose"},")")])])]),s(" 的时间复杂度下查找任意结点。")],-1),xn=n("p",null,[s("但是如果"),n("strong",null,"动态"),s("的在二叉搜索树中插入与删除结点，则可能导致二叉树退化为链表，此时"),n("strong",null,"各种操作"),s("的时间复杂度都会退化为 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])],-1),_n=i('<p><img src="'+M+'" alt="image-20230102120759666" loading="lazy"></p><p>如下图所示，执行两步删除结点后，该二叉搜索树就会退化为链表。</p><p><img src="'+S+'" alt="image-20230102122358130" loading="lazy"></p><p>再比如，在以下完美二叉树中插入两个结点后，树严重向左偏斜，查找操作的时间复杂度也随之发生劣化。</p><p><img src="'+B+'" alt="image-20230102122459746" loading="lazy"></p><p>从动态维护二叉搜索树的退化来看，“平衡” 操作尤为重要。</p><h4 id="二叉搜索树的打印" tabindex="-1"><a class="header-anchor" href="#二叉搜索树的打印" aria-hidden="true">#</a> 二叉搜索树的打印</h4>',7),Nn=n("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token attribute attr-name"},"#![allow(unused)]"),s(`

`),n("span",{class:"token keyword"},"use"),s(),n("span",{class:"token keyword"},"super"),n("span",{class:"token module-declaration namespace"},[n("span",{class:"token punctuation"},"::"),s("bst"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"use"),s(),n("span",{class:"token namespace"},[s("std"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token punctuation"},"{"),n("span",{class:"token namespace"},[s("fmt"),n("span",{class:"token punctuation"},"::")]),n("span",{class:"token class-name"},"Debug"),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token attribute attr-name"},"#[derive(Clone, PartialEq, PartialOrd)]"),s(`
`),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token type-definition class-name"},"Trunk"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(" prev"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Trunk"),n("span",{class:"token operator"},">>"),n("span",{class:"token punctuation"},","),s(`
	`),n("span",{class:"token keyword"},"pub"),s(" s"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"String"),n("span",{class:"token operator"},">"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token keyword"},"impl"),s(),n("span",{class:"token class-name"},"Trunk"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"new"),n("span",{class:"token punctuation"},"("),s("prev"),n("span",{class:"token punctuation"},":"),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Trunk"),n("span",{class:"token operator"},">>"),n("span",{class:"token punctuation"},","),s(" s"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"String"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"Self"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token class-name"},"Trunk"),s(),n("span",{class:"token punctuation"},"{"),s(" prev"),n("span",{class:"token punctuation"},","),s(" s "),n("span",{class:"token punctuation"},"}"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"set_s"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" s"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"String"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("s"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"="),s(" s "),n("span",{class:"token punctuation"},"{"),s(`
			`),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("s "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("s"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token punctuation"},"}"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"print_tree"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Debug"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token function"},"print_tree_helper"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token class-name"},"None"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"print_tree_helper"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Ord"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Clone"),s(),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token class-name"},"Debug"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">>"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s(" prev"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Trunk"),n("span",{class:"token operator"},">>"),n("span",{class:"token punctuation"},","),s(" isleft"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"bool"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"if"),s(" root"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"is_none"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),s(`

	`),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" prev_str "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"from"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"     "'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" trunk "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token class-name"},"Trunk"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),s("prev"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"clone"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),s("prev_str"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"to_owned"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

	`),n("span",{class:"token function"},"print_tree_helper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),s("root"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"as_ref"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Box"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),s("trunk"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"clone"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

	`),n("span",{class:"token keyword"},"if"),s(" prev"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"is_none"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
		trunk`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set_s"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"from"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"———"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(" isleft "),n("span",{class:"token punctuation"},"{"),s(`
		trunk`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set_s"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"from"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'" /———"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
		trunk`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set_s"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"from"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'r" \\———"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`

	`),n("span",{class:"token function"},"show_trunk"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Box"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),s("trunk"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"clone"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token macro property"},"println!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'" {:?}"'),n("span",{class:"token punctuation"},","),s(" root"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"as_deref"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

	`),n("span",{class:"token keyword"},"if"),s(" prev"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"is_some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
		prev`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"take"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"as_mut"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set_s"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"from"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"    |"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
	trunk`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"set_s"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"from"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"     "'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token function"},"print_tree_helper"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),s("root"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"as_ref"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token class-name"},"Some"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Box"),n("span",{class:"token punctuation"},"::"),n("span",{class:"token function"},"new"),n("span",{class:"token punctuation"},"("),s("trunk"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"clone"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`


`),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"show_trunk"),n("span",{class:"token punctuation"},"("),s("trunk"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token operator"},"&"),n("span",{class:"token class-name"},"Option"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Box"),n("span",{class:"token operator"},"<"),n("span",{class:"token class-name"},"Trunk"),n("span",{class:"token operator"},">>"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token keyword"},"if"),s(" trunk"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"is_none"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
	`),n("span",{class:"token function"},"show_trunk"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),s("trunk"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"as_ref"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("prev"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token macro property"},"print!"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"{}"'),n("span",{class:"token punctuation"},","),s("trunk"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"clone"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("s"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"unwrap"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),On=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Trunk"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token class-name"},"Trunk"),s(" prev"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token class-name"},"String"),s(" str"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token class-name"},"Trunk"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Trunk"),s(" prev"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"String"),s(" str"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("prev "),n("span",{class:"token operator"},"="),s(" prev"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("str "),n("span",{class:"token operator"},"="),s(" str"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"PrintUnitT"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),s(),n("span",{class:"token keyword"},"extends"),s(),n("span",{class:"token class-name"},"Comparable"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"printTree"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" root"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token function"},"printTree"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"printTree"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"TreeNode"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"T"),n("span",{class:"token punctuation"},">")]),s(" root"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"Trunk"),s(" prev"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"boolean"),s(" isLeft"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("root "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token class-name"},"String"),s(" prev_str "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"    "'),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"Trunk"),s(" trunk "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"Trunk"),n("span",{class:"token punctuation"},"("),s("prev"),n("span",{class:"token punctuation"},","),s(" prev_str"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token function"},"printTree"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},"."),s("right"),n("span",{class:"token punctuation"},","),s(" trunk"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("prev "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      trunk`),n("span",{class:"token punctuation"},"."),s("str "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"———"'),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("isLeft"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      trunk`),n("span",{class:"token punctuation"},"."),s("str "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"/———"'),n("span",{class:"token punctuation"},";"),s(`
      prev_str `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"   |"'),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
      trunk`),n("span",{class:"token punctuation"},"."),s("str "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"\\\\———"'),n("span",{class:"token punctuation"},";"),s(`
      prev`),n("span",{class:"token punctuation"},"."),s("str "),n("span",{class:"token operator"},"="),s(" prev_str"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token function"},"showTrunks"),n("span",{class:"token punctuation"},"("),s("trunk"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'" "'),s(),n("span",{class:"token operator"},"+"),s(" root"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("prev "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      prev`),n("span",{class:"token punctuation"},"."),s("str "),n("span",{class:"token operator"},"="),s(" prev_str"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    trunk`),n("span",{class:"token punctuation"},"."),s("str "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"   |"'),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token function"},"printTree"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},"."),s("left"),n("span",{class:"token punctuation"},","),s(" trunk"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"showTrunks"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Trunk"),s(" p"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("p "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token function"},"showTrunks"),n("span",{class:"token punctuation"},"("),s("p"),n("span",{class:"token punctuation"},"."),s("prev"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"print"),n("span",{class:"token punctuation"},"("),s("p"),n("span",{class:"token punctuation"},"."),s("str"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Mn=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token keyword"},"template"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"typename"),s(),n("span",{class:"token class-name"},"T"),n("span",{class:"token operator"},">"),s(`
`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"PrintUtilT"),s(),n("span",{class:"token punctuation"},"{"),s(`
`),n("span",{class:"token keyword"},"public"),n("span",{class:"token operator"},":"),s(`
  `),n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token class-name"},"Trunk"),s(),n("span",{class:"token punctuation"},"{"),s(`
    Trunk `),n("span",{class:"token operator"},"*"),s("prev"),n("span",{class:"token punctuation"},";"),s(`
    string str`),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token function"},"Trunk"),n("span",{class:"token punctuation"},"("),s("Trunk "),n("span",{class:"token operator"},"*"),s("prev"),n("span",{class:"token punctuation"},","),s(" string str"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("prev "),n("span",{class:"token operator"},"="),s(" prev"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token keyword"},"this"),n("span",{class:"token operator"},"->"),s("str "),n("span",{class:"token operator"},"="),s(" str"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`

  `),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"showTrunks"),n("span",{class:"token punctuation"},"("),s("Trunk "),n("span",{class:"token operator"},"*"),s("p"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("p "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token function"},"showTrunks"),n("span",{class:"token punctuation"},"("),s("p"),n("span",{class:"token operator"},"->"),s("prev"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    cout `),n("span",{class:"token operator"},"<<"),s(" p"),n("span",{class:"token operator"},"->"),s("str"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"printTree"),n("span",{class:"token punctuation"},"("),s("TreeNode"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("root"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token function"},"printTree"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"printTree"),n("span",{class:"token punctuation"},"("),s("TreeNode"),n("span",{class:"token operator"},"<"),s("T"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token operator"},"*"),s("root"),n("span",{class:"token punctuation"},","),s(" Trunk "),n("span",{class:"token operator"},"*"),s("prev"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"bool"),s(" isLeft"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("root "),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    string prev_str `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"    "'),n("span",{class:"token punctuation"},";"),s(`
    Trunk `),n("span",{class:"token operator"},"*"),s("trunk "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token function"},"Trunk"),n("span",{class:"token punctuation"},"("),s("prev"),n("span",{class:"token punctuation"},","),s(" prev_str"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token function"},"printTree"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token operator"},"->"),s("right"),n("span",{class:"token punctuation"},","),s(" trunk"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"true"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("prev"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      trunk`),n("span",{class:"token operator"},"->"),s("str "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"———"'),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("isLeft"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      trunk`),n("span",{class:"token operator"},"->"),s("str "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"/———"'),n("span",{class:"token punctuation"},";"),s(`
      prev_str `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"   |"'),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
      trunk`),n("span",{class:"token operator"},"->"),s("str "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"\\\\———"'),n("span",{class:"token punctuation"},";"),s(`
      prev`),n("span",{class:"token operator"},"->"),s("str "),n("span",{class:"token operator"},"="),s(" prev_str"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`

    `),n("span",{class:"token function"},"showTrunks"),n("span",{class:"token punctuation"},"("),s("trunk"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    cout `),n("span",{class:"token operator"},"<<"),s(),n("span",{class:"token string"},'" "'),s(),n("span",{class:"token operator"},"<<"),s(" root"),n("span",{class:"token operator"},"->"),s("value "),n("span",{class:"token operator"},"<<"),s(" endl"),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("prev"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      prev`),n("span",{class:"token operator"},"->"),s("str "),n("span",{class:"token operator"},"="),s(" prev_str"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    trunk`),n("span",{class:"token operator"},"->"),s("str "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"   |"'),n("span",{class:"token punctuation"},";"),s(`

    `),n("span",{class:"token function"},"printTree"),n("span",{class:"token punctuation"},"("),s("root"),n("span",{class:"token operator"},"->"),s("left"),n("span",{class:"token punctuation"},","),s(" trunk"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function Sn(Bn,Ln){const l=u("CodeTabs"),p=u("Tabs");return k(),m("div",null,[j,d(" more "),A,z,C,c(l,{id:"22",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:o})=>[V]),tab1:a(({title:t,value:e,isActive:o})=>[D]),tab2:a(({title:t,value:e,isActive:o})=>[E]),_:1}),q,c(p,{id:"59",data:[{title:"step1"},{title:"step2"},{title:"step3"},{title:"step4"}]},{tab0:a(({title:t,value:e,isActive:o})=>[P]),tab1:a(({title:t,value:e,isActive:o})=>[G]),tab2:a(({title:t,value:e,isActive:o})=>[R]),tab3:a(({title:t,value:e,isActive:o})=>[U]),_:1}),F,c(l,{id:"84",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:o})=>[H]),tab1:a(({title:t,value:e,isActive:o})=>[I]),tab2:a(({title:t,value:e,isActive:o})=>[J]),_:1}),K,Q,W,X,Y,Z,$,c(l,{id:"125",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:o})=>[nn]),tab1:a(({title:t,value:e,isActive:o})=>[sn]),tab2:a(({title:t,value:e,isActive:o})=>[an]),_:1}),tn,en,on,cn,ln,pn,un,c(p,{id:"186",data:[{title:"setp1"},{title:"setp2"},{title:"setp3"},{title:"setp4"}]},{tab0:a(({title:t,value:e,isActive:o})=>[rn]),tab1:a(({title:t,value:e,isActive:o})=>[kn]),tab2:a(({title:t,value:e,isActive:o})=>[mn]),tab3:a(({title:t,value:e,isActive:o})=>[dn]),_:1}),c(l,{id:"208",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:o})=>[vn]),tab1:a(({title:t,value:e,isActive:o})=>[bn]),tab2:a(({title:t,value:e,isActive:o})=>[hn]),_:1}),wn,gn,yn,fn,Tn,xn,_n,c(l,{id:"333",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:o})=>[Nn]),tab1:a(({title:t,value:e,isActive:o})=>[On]),tab2:a(({title:t,value:e,isActive:o})=>[Mn]),_:1})])}const zn=r(L,[["render",Sn],["__file","3.html.vue"]]);export{zn as default};
