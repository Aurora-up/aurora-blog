import{_ as p}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as u,c as i,e as k,d as l,w as a,a as n,b as s,r}from"./app.d359c0d2.js";const d="/aurora-blog/assets/image-20230104151310041.41000e7a.png",m={},b=n("p",null,"「并查集 Union Find」",-1),y=n("p",null,"并查集是一种可以动态维护若干个不重叠的集合，并支持查询与合并的数据结构.",-1),v=n("ul",null,[n("li",null,"查询操作：查询某个元素属于哪个集合"),n("li",null,"合并操作：将两个集合合并为一个集合")],-1),w=n("p",null,"并查集中，每个集合以 “根结点” 作为代表，所以并查集的本质就是一个森林 (由若干个树 (集合) 组成).",-1),f=n("h2",{id:"路径压缩",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#路径压缩","aria-hidden":"true"},"#"),s(" 路径压缩")],-1),x=n("p",null,[s("如果将并查集的每个集合以 “树” 的形式进行存储，这棵树在极端形况下可以会退化成一个链表，此时如果若要执行查询操作，时间复杂度为 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])]),s(" ，这并不理想，在并查集中并不关心树的形状，其关键在于集合的代表：【根结点】，也即下面两个树是等价的.")],-1),h=n("p",null,[n("img",{src:d,alt:"image-20230104151310041",loading:"lazy"})],-1),g=n("p",null,[s("【路径压缩】在每次执行"),n("strong",null,"查询操作"),s("的同时，将访问过的每个结点 (也就是所查询元素的全部祖先) 都直接指向根结点。此时平均时间复杂度会降到 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"l"),n("mi",null,"o"),n("mi",null,"g"),n("mtext",null," "),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(log \\ n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mspace"}," "),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])])],-1),_=n("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token type-definition class-name"},"UnionFind"),s(),n("span",{class:"token punctuation"},"{"),s(`
	id`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"usize"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s("      "),n("span",{class:"token comment"},"// 集合代表 (根结点)  "),s(`
	count`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},","),s("        "),n("span",{class:"token comment"},"// 不相交集合个数"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"impl"),s(),n("span",{class:"token class-name"},"UnionFind"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token comment"},"/// 初始化并查集"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"new"),n("span",{class:"token punctuation"},"("),s("n"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"Self"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" id "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token macro property"},"vec!"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s("n"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},".."),s("n "),n("span",{class:"token punctuation"},"{"),s(`
			id`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" i"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token punctuation"},"}"),s(`
		`),n("span",{class:"token keyword"},"Self"),s(),n("span",{class:"token punctuation"},"{"),s("id "),n("span",{class:"token punctuation"},","),s("  count"),n("span",{class:"token punctuation"},":"),s(" n"),n("span",{class:"token punctuation"},"}"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`

	`),n("span",{class:"token comment"},"/// 查找并查集所在集合"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"find"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"usize"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" x "),n("span",{class:"token operator"},"="),s(" x"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token keyword"},"while"),s(" x "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"{"),s(`
			x `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`                
			`),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"["),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s("    "),n("span",{class:"token comment"},"// 路径压缩"),s(`
		`),n("span",{class:"token punctuation"},"}"),s(`
		x
	`),n("span",{class:"token punctuation"},"}"),s(`

	`),n("span",{class:"token comment"},"/// 合并 x 所在的集合与 y 所在的集合"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"merge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"let"),s(" x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token keyword"},"let"),s(" y "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token keyword"},"if"),s(" x "),n("span",{class:"token operator"},"=="),s(" y "),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),s(`
   	`),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" y"),n("span",{class:"token punctuation"},";"),s("        "),n("span",{class:"token comment"},"// 直接合并"),s(`
		`),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("count "),n("span",{class:"token operator"},"-="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`

	`),n("span",{class:"token comment"},"/// 判断两个元素是否属于同一集合"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"is_same_set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"bool"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("y"),n("span",{class:"token punctuation"},")"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
	
	`),n("span",{class:"token comment"},"/// 所有集合中不相交集合的个数"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"count"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"usize"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s(`count
	`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),z=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"UnionFind"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" id"),n("span",{class:"token punctuation"},";"),s("       "),n("span",{class:"token comment"},"// 集合代表 (根结点)"),s(`
  `),n("span",{class:"token keyword"},"int"),s(" count"),n("span",{class:"token punctuation"},";"),s("      "),n("span",{class:"token comment"},"// 所有集合中不相交的个数"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 初始化并查集
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"n"),s(` 集合个数
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"UnionFind"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    id `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),s("n"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(" n "),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      id`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" i"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("count "),n("span",{class:"token operator"},"="),s(" n"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 查找 x 所在集合的代表 (根结点)
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"x"),s(` 需要被查找的元素
   * `),n("span",{class:"token keyword"},"@return"),s(` x 所在集合的代表(根结点)
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" x"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("x "),n("span",{class:"token operator"},"!="),s(" id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      x `),n("span",{class:"token operator"},"="),s(" id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
      id`),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" id"),n("span",{class:"token punctuation"},"["),s("id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s("   "),n("span",{class:"token comment"},"// 路径压缩"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" x"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 合并元素所在集合
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"x"),s(` 某一集合元素
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"y"),s(` 某一集合元素
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"merge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" x"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" y"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"int"),s(" fx "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"int"),s(" fy "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("fx "),n("span",{class:"token operator"},"=="),s(" fy"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(`
    id`),n("span",{class:"token punctuation"},"["),s("fx"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" fy"),n("span",{class:"token punctuation"},";"),s("          "),n("span",{class:"token comment"},"// 直接合并"),s(`
    count `),n("span",{class:"token operator"},"--"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 判断是否属于同一集合
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"x"),s(` 某集合元素
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"y"),s(` 某集合元素
   * `),n("span",{class:"token keyword"},"@return"),s(` true: 同一集合 ; false: 不是同一集合
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"boolean"),s(),n("span",{class:"token function"},"isSameSet"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" x"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" y"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * `),n("span",{class:"token keyword"},"@return"),s(` 所有集合中不相交集合的个数
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"getCount"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" count"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),M=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token comment"},"// 保存每个元素的父结点, 根结点的父结点为自己"),s(`
`),n("span",{class:"token keyword"},"int"),s(" fa"),n("span",{class:"token punctuation"},"["),s("N"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// 并查集的初始化： 初始化的并查集中每个结点都是都是单独的集合,因此根结点就是他本身."),s(`
`),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"init"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"for"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<="),s(" n "),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(` 
    fa`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" i"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// 查询操作: 若 x 为树根, 则 x 代表集合, 否则递归访问 fa[x] 直至根结点"),s(`
`),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" x"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s("               "),n("span",{class:"token comment"},"// 返回 x 所在集合的代表元素"),s(`
  `),n("span",{class:"token keyword"},"if"),n("span",{class:"token punctuation"},"("),s("x "),n("span",{class:"token operator"},"=="),s(" fa"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(" x"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" fa"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("fa"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("   "),n("span",{class:"token comment"},"// 路径压缩, fa直接赋值为根结点"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// 合并操作: 合并元素 x 和 元素 y 所在的集合"),s(`
`),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"merge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" x"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" y"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  fa`),n("span",{class:"token punctuation"},"["),s("find"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("        "),n("span",{class:"token comment"},"// 直接将集合的根结点插入到"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// 查询操作 (非递归)"),s(`
`),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"nr_find"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" x"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"int"),s(" root "),n("span",{class:"token operator"},"="),s(" x"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"while"),n("span",{class:"token punctuation"},"("),s("fa"),n("span",{class:"token punctuation"},"["),s("root"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"!="),s(" root"),n("span",{class:"token punctuation"},")"),s(" root "),n("span",{class:"token operator"},"="),s(" fa"),n("span",{class:"token punctuation"},"["),s("root"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s("   "),n("span",{class:"token comment"},"// 找到 x 所在集合的根结点"),s(`
  
  `),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(" x"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"int"),s(" j"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"while"),n("span",{class:"token punctuation"},"("),s("i "),n("span",{class:"token operator"},"!="),s(" root"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    j `),n("span",{class:"token operator"},"="),s(" fa"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`             
    fa`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" root"),n("span",{class:"token punctuation"},";"),s("          "),n("span",{class:"token comment"},"// 将 x 的所有祖先结点直接指向根结点"),s(`
    i `),n("span",{class:"token operator"},"="),s(" j"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" root"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),j=n("h2",{id:"按秩合并",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#按秩合并","aria-hidden":"true"},"#"),s(" 按秩合并")],-1),O=n("p",null,[s("对秩的定义有很多，例如：树高 / 集合的大小，按秩合并是一种启发式合并，将 “小的结构” 合并到 “大的结构” 上，这里使用树高作为秩的定义，也即将较矮的树合并到较高的树，直接将较低的树的根结点的父结点赋值为较高的树的根结点，这样合并后，较低的树每次合并后树高 +"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mn",null,"1")]),n("annotation",{encoding:"application/x-tex"},"1")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"1")])])]),s(" 。这样在平均情况下，整体的时间复杂度会更小，对于一般的并查集，只使用按秩合并的话，将所有集合合并到一起的时间复杂度是 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mi",null,"l"),n("mi",null,"o"),n("mi",null,"g"),n("mtext",null," "),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(nlog \\ n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mspace"}," "),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])]),s(" 那么每次"),n("strong",null,"查询操作"),s("的时间复杂度为 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"l"),n("mi",null,"o"),n("mi",null,"g"),n("mtext",null," "),n("mi",null,"n"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(log \\ n)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mspace"}," "),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},")")])])]),s(".")],-1),F=n("div",{class:"custom-container info"},[n("p",{class:"custom-container-title"},"相关信息"),n("p",null,[s("同时采用 “路径压缩” 和 “按秩合并” 时，时间复杂度会降到 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"α"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(α(n))")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},"))")])])]),s(" ，其增长比 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"l"),n("mi",null,"o"),n("mi",null,"g"),n("mtext",null," "),n("mi",null,"n")]),n("annotation",{encoding:"application/x-tex"},"log \\ n")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),n("span",{class:"mspace"}," "),n("span",{class:"mord mathnormal"},"n")])])]),s(" 更慢，所以 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mi",null,"α"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",{stretchy:"false"},")"),n("mo",{stretchy:"false"},")")]),n("annotation",{encoding:"application/x-tex"},"O(α(n))")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mclose"},"))")])])]),s(" 是"),n("strong",null,"近似于常数阶"),s("的时间复杂度.")])],-1),L=n("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token type-definition class-name"},"UnionFind"),s(),n("span",{class:"token punctuation"},"{"),s(`
	id`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"usize"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s("      "),n("span",{class:"token comment"},"// 集合代表 (根结点)  "),s(`
	rank`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"usize"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s("    "),n("span",{class:"token comment"},"// 秩 (树高)"),s(`
	count`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},","),s("        "),n("span",{class:"token comment"},"// 不相交集合个数"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"impl"),s(),n("span",{class:"token class-name"},"UnionFind"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token comment"},"/// 初始化并查集"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"new"),n("span",{class:"token punctuation"},"("),s("n"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"Self"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" id "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token macro property"},"vec!"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s("n"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" rank "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token macro property"},"vec!"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s("n"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},".."),s("n "),n("span",{class:"token punctuation"},"{"),s(`
			id`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" i"),n("span",{class:"token punctuation"},";"),s(`
			rank`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token punctuation"},"}"),s(`
		`),n("span",{class:"token keyword"},"Self"),s(),n("span",{class:"token punctuation"},"{"),s("id "),n("span",{class:"token punctuation"},","),s(" rank "),n("span",{class:"token punctuation"},","),s(" count"),n("span",{class:"token punctuation"},":"),s(" n"),n("span",{class:"token punctuation"},"}"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`

	`),n("span",{class:"token comment"},"/// 查找并查集所在集合"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"find"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"usize"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" x "),n("span",{class:"token operator"},"="),s(" x"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token keyword"},"while"),s(" x "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"{"),s(`
			x `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`                
			`),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"["),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s("    "),n("span",{class:"token comment"},"// 路径压缩"),s(`
		`),n("span",{class:"token punctuation"},"}"),s(`
		x
	`),n("span",{class:"token punctuation"},"}"),s(`

	`),n("span",{class:"token comment"},"/// 合并 x 所在的集合与 y 所在的集合"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"merge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"let"),s(" x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token keyword"},"let"),s(" y "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token keyword"},"if"),s(" x "),n("span",{class:"token operator"},"=="),s(" y "),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),s(`
		`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("rank"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("rank"),n("span",{class:"token punctuation"},"["),s("y"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"{"),s("          "),n("span",{class:"token comment"},"// y 所在树高于 x, 将 x 合并到 y"),s(`
			`),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" y"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
			`),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"["),s("y"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" x"),n("span",{class:"token punctuation"},";"),s(`
			`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("rank"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("rank"),n("span",{class:"token punctuation"},"["),s("y"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"{"),s("       "),n("span",{class:"token comment"},"// 树高相同且不是同一集合, 树高 + 1 "),s(`
				`),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("rank"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
			`),n("span",{class:"token punctuation"},"}"),s(`
		`),n("span",{class:"token punctuation"},"}"),s(`
		`),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("count "),n("span",{class:"token operator"},"-="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`

	`),n("span",{class:"token comment"},"/// 判断两个元素是否属于同一集合"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"is_same_set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"bool"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("y"),n("span",{class:"token punctuation"},")"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
	
	`),n("span",{class:"token comment"},"/// 所有集合中不相交集合的个数"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"count"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"usize"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s(`count
	`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),U=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"UnionFind"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" id"),n("span",{class:"token punctuation"},";"),s("       "),n("span",{class:"token comment"},"// 集合代表 (根结点)"),s(`
  `),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" rank"),n("span",{class:"token punctuation"},";"),s("     "),n("span",{class:"token comment"},"// 每个集合的秩(树高)"),s(`
  `),n("span",{class:"token keyword"},"int"),s(" count"),n("span",{class:"token punctuation"},";"),s("      "),n("span",{class:"token comment"},"// 所有集合中不相交的个数"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 初始化并查集
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"n"),s(` 集合个数
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"UnionFind"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    id `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),s("n"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
    rank `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),s("n"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(" n "),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      id`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" i"),n("span",{class:"token punctuation"},";"),s(`
      rank`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("count "),n("span",{class:"token operator"},"="),s(" n"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 查找 x 所在集合的代表 (根结点)
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"x"),s(` 需要被查找的元素
   * `),n("span",{class:"token keyword"},"@return"),s(` x 所在集合的代表(根结点)
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" x"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("x "),n("span",{class:"token operator"},"!="),s(" id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      x `),n("span",{class:"token operator"},"="),s(" id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
      id`),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" id"),n("span",{class:"token punctuation"},"["),s("id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s("         "),n("span",{class:"token comment"},"// 路径压缩"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" x"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 合并元素所在集合
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"x"),s(` 某一集合元素
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"y"),s(` 某一集合元素
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"merge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" x"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" y"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"int"),s(" fx "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"int"),s(" fy "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("fx "),n("span",{class:"token operator"},"=="),s(" fy"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("rank"),n("span",{class:"token punctuation"},"["),s("fx"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"<"),s(" rank"),n("span",{class:"token punctuation"},"["),s("fy"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      id`),n("span",{class:"token punctuation"},"["),s("fx"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" fy"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
      id`),n("span",{class:"token punctuation"},"["),s("fy"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" fx"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("rank"),n("span",{class:"token punctuation"},"["),s("fx"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"=="),s(" rank"),n("span",{class:"token punctuation"},"["),s("fy"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"// 树高相同且不是同一集合, 树高 + 1"),s(`
        rank`),n("span",{class:"token punctuation"},"["),s("fx"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    count `),n("span",{class:"token operator"},"--"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 判断是否属于同一集合
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"x"),s(` 某集合元素
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"y"),s(` 某集合元素
   * `),n("span",{class:"token keyword"},"@return"),s(` true: 同一集合 ; false: 不是同一集合
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"boolean"),s(),n("span",{class:"token function"},"isSameSet"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" x"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" y"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * `),n("span",{class:"token keyword"},"@return"),s(` 所有集合中不相交集合的个数
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"getCount"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" count"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),S=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token comment"},"// 保存每个元素的父结点, 根结点的父结点为自己"),s(`
`),n("span",{class:"token keyword"},"int"),s(" fa"),n("span",{class:"token punctuation"},"["),s("N"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"// 每个集合的秩 (这里用树高表示秩)"),s(`
`),n("span",{class:"token keyword"},"int"),s(" rank"),n("span",{class:"token punctuation"},"["),s("N"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(` 

`),n("span",{class:"token comment"},"// 并查集的初始化： 初始化的并查集中每个结点都是都是单独的集合,因此根结点就是他本身."),s(`
`),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"init"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"for"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<="),s(" n "),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    fa`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" i"),n("span",{class:"token punctuation"},";"),s(`
    rank`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// 查询操作: 若 x 为树根, 则 x 代表集合, 否则递归访问 fa[x] 直至根结点"),s(`
`),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" x"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s("               "),n("span",{class:"token comment"},"// 返回 x 所在集合的代表元素"),s(`
  `),n("span",{class:"token keyword"},"if"),n("span",{class:"token punctuation"},"("),s("x "),n("span",{class:"token operator"},"=="),s(" fa"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(" x"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" fa"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("fa"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("   "),n("span",{class:"token comment"},"// 路径压缩, fa直接赋值为根结点"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// 合并操作: 合并元素 x 和 元素 y 所在的集合"),s(`
`),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"merge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" x"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" y"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"int"),s(" fx "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" fy "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
 	
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("fx "),n("span",{class:"token operator"},"=="),s(" fy"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},";"),s("       "),n("span",{class:"token comment"},"// 在同一集合中,无需合并"),s(`
  
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("rank"),n("span",{class:"token punctuation"},"["),s("fx"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},">"),s(" rank"),n("span",{class:"token punctuation"},"["),s("fy"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s("   "),n("span",{class:"token comment"},"// fx 所在树高于 fy, 将 fy 合并到 fx"),s(`
    fa`),n("span",{class:"token punctuation"},"["),s("fy"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" fx"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
    fa`),n("span",{class:"token punctuation"},"["),s("fx"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" fy"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("rank"),n("span",{class:"token punctuation"},"["),s("fx"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"=="),s(" rank"),n("span",{class:"token punctuation"},"["),s("fy"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s("  "),n("span",{class:"token comment"},"// 树高相同且不是同一集合, 树高 + 1 "),s(`
      rank`),n("span",{class:"token punctuation"},"["),s("fy"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),A=n("h2",{id:"并查集的应用",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#并查集的应用","aria-hidden":"true"},"#"),s(" 并查集的应用")],-1),N=n("p",null,"在一般应用中，并查集中的每个集合往往需要维护更多的信息来解决更为复杂的问题，以下是两种常见的应用.",-1),V=n("h3",{id:"维护集合的大小",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#维护集合的大小","aria-hidden":"true"},"#"),s(" 维护集合的大小")],-1),C=n("p",null,"在按秩合并中，即可使用树高，也能使用集合大小 (集合中元素的个数)，下面为同时维护集合大小的并查集.",-1),B=n("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[n("pre",{class:"language-rust"},[n("code",null,[n("span",{class:"token keyword"},"struct"),s(),n("span",{class:"token type-definition class-name"},"UnionFind"),s(),n("span",{class:"token punctuation"},"{"),s(`
	id`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"usize"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s("      "),n("span",{class:"token comment"},"// 集合代表 (根结点)  "),s(`
	size`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token class-name"},"Vec"),n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"usize"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},","),s("    "),n("span",{class:"token comment"},"// 每个集合元素数量"),s(`
	count`),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},","),s("        "),n("span",{class:"token comment"},"// 不相交集合个数"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"impl"),s(),n("span",{class:"token class-name"},"UnionFind"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token comment"},"/// 初始化并查集"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"new"),n("span",{class:"token punctuation"},"("),s("n"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"Self"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" id "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token macro property"},"vec!"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s("n"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" size "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token macro property"},"vec!"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s("n"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},".."),s("n "),n("span",{class:"token punctuation"},"{"),s(`
			id`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" i"),n("span",{class:"token punctuation"},";"),s(`
			size`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token punctuation"},"}"),s(`
		`),n("span",{class:"token keyword"},"Self"),s(),n("span",{class:"token punctuation"},"{"),s("id "),n("span",{class:"token punctuation"},","),s(" size "),n("span",{class:"token punctuation"},","),s("count"),n("span",{class:"token punctuation"},":"),s(" n"),n("span",{class:"token punctuation"},"}"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`

	`),n("span",{class:"token comment"},"/// 查找并查集所在集合"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"find"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"usize"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"let"),s(),n("span",{class:"token keyword"},"mut"),s(" x "),n("span",{class:"token operator"},"="),s(" x"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token keyword"},"while"),s(" x "),n("span",{class:"token operator"},"!="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"{"),s(`
			x `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`                
			`),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"["),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s("    "),n("span",{class:"token comment"},"// 路径压缩"),s(`
		`),n("span",{class:"token punctuation"},"}"),s(`
		x
	`),n("span",{class:"token punctuation"},"}"),s(`

	`),n("span",{class:"token comment"},"/// 合并 x 所在的集合与 y 所在的集合"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"merge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"let"),s(" x "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token keyword"},"let"),s(" y "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
		`),n("span",{class:"token keyword"},"if"),s(" x "),n("span",{class:"token operator"},"=="),s(" y "),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token punctuation"},"}"),s(`
		`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("size"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("size"),n("span",{class:"token punctuation"},"["),s("y"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"{"),s("         "),n("span",{class:"token comment"},"// 将 x 合并到 y 中"),s(`
            `),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" y"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("size"),n("span",{class:"token punctuation"},"["),s("y"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("size"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s("        "),n("span",{class:"token comment"},"// y 集合中元素增加"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s("                                 "),n("span",{class:"token comment"},"// 将 y 合并到 x 中"),s(`
            `),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("id"),n("span",{class:"token punctuation"},"["),s("y"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" x"),n("span",{class:"token punctuation"},";"),s(`
            `),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("size"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"+="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("size"),n("span",{class:"token punctuation"},"["),s("y"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s("        "),n("span",{class:"token comment"},"// x 集合中元素增加"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
		`),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s("count "),n("span",{class:"token operator"},"-="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`

	`),n("span",{class:"token comment"},"/// 判断两个元素是否属于同一集合"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"is_same_set"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"mut"),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},","),s(" x"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},","),s(" y"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token keyword"},"usize"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"bool"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("y"),n("span",{class:"token punctuation"},")"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
	
	`),n("span",{class:"token comment"},"/// 所有集合中不相交集合的个数"),s(`
	`),n("span",{class:"token keyword"},"pub"),s(),n("span",{class:"token keyword"},"fn"),s(),n("span",{class:"token function-definition function"},"count"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"&"),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"->"),s(),n("span",{class:"token keyword"},"usize"),s(),n("span",{class:"token punctuation"},"{"),s(`
		`),n("span",{class:"token keyword"},"self"),n("span",{class:"token punctuation"},"."),s(`count
	`),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),T=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"UnionFind"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" id"),n("span",{class:"token punctuation"},";"),s("       "),n("span",{class:"token comment"},"// 集合代表 (根结点)"),s(`
  `),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" size"),n("span",{class:"token punctuation"},";"),s("     "),n("span",{class:"token comment"},"// 每个集合中的元素的数量"),s(`
  `),n("span",{class:"token keyword"},"int"),s(" count"),n("span",{class:"token punctuation"},";"),s("      "),n("span",{class:"token comment"},"// 所有集合中不相交的个数"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 初始化并查集
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"n"),s(` 集合个数
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"UnionFind"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    id `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),s("n"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
    size `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token keyword"},"int"),n("span",{class:"token punctuation"},"["),s("n"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(" n "),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      id`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" i"),n("span",{class:"token punctuation"},";"),s(`
      size`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("count "),n("span",{class:"token operator"},"="),s(" n"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 查找 x 所在集合的代表 (根结点)
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"x"),s(` 需要被查找的元素
   * `),n("span",{class:"token keyword"},"@return"),s(` x 所在集合的代表(根结点)
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" x"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"while"),s(),n("span",{class:"token punctuation"},"("),s("x "),n("span",{class:"token operator"},"!="),s(" id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      x `),n("span",{class:"token operator"},"="),s(" id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
      id`),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" id"),n("span",{class:"token punctuation"},"["),s("id"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s("         "),n("span",{class:"token comment"},"// 路径压缩"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" x"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 合并元素所在集合
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"x"),s(` 某一集合元素
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"y"),s(` 某一集合元素
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"merge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" x"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" y"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"int"),s(" fx "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"int"),s(" fy "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("fx "),n("span",{class:"token operator"},"=="),s(" fy"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("size"),n("span",{class:"token punctuation"},"["),s("fx"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"<"),s(" size"),n("span",{class:"token punctuation"},"["),s("fy"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
      id`),n("span",{class:"token punctuation"},"["),s("fx"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" fy"),n("span",{class:"token punctuation"},";"),s(`
      size`),n("span",{class:"token punctuation"},"["),s("fy"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"+="),s(" size"),n("span",{class:"token punctuation"},"["),s("fx"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
      id`),n("span",{class:"token punctuation"},"["),s("fy"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" fx"),n("span",{class:"token punctuation"},";"),s(`
      size`),n("span",{class:"token punctuation"},"["),s("fx"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"+="),s(" size"),n("span",{class:"token punctuation"},"["),s("fy"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
    count `),n("span",{class:"token operator"},"--"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 判断是否属于同一集合
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"x"),s(` 某集合元素
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"y"),s(` 某集合元素
   * `),n("span",{class:"token keyword"},"@return"),s(` true: 同一集合 ; false: 不是同一集合
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"boolean"),s(),n("span",{class:"token function"},"isSameSet"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" x"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" y"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=="),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`

  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * `),n("span",{class:"token keyword"},"@return"),s(` 所有集合中不相交集合的个数
   */`)]),s(`
  `),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"getCount"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"return"),s(" count"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),E=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token comment"},"// 保存每个元素的父结点, 根结点的父结点为自己"),s(`
`),n("span",{class:"token keyword"},"int"),s(" fa"),n("span",{class:"token punctuation"},"["),s("N"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token comment"},"// 每个集合中元素的个数"),s(`
`),n("span",{class:"token keyword"},"int"),s(" size"),n("span",{class:"token punctuation"},"["),s("N"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(` 

`),n("span",{class:"token comment"},"// 并查集的初始化： 初始化的并查集中每个结点都是都是单独的集合,因此根结点就是他本身."),s(`
`),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"init"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" n"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"for"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" i "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),s(),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<="),s(" n "),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    fa`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" i"),n("span",{class:"token punctuation"},";"),s(`
    size`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// 查询操作: 若 x 为树根, 则 x 代表集合, 否则递归访问 fa[x] 直至根结点"),s(`
`),n("span",{class:"token keyword"},"int"),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" x"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s("               "),n("span",{class:"token comment"},"// 返回 x 所在集合的代表元素"),s(`
  `),n("span",{class:"token keyword"},"if"),n("span",{class:"token punctuation"},"("),s("x "),n("span",{class:"token operator"},"=="),s(" fa"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"return"),s(" x"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"return"),s(" fa"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("fa"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s("   "),n("span",{class:"token comment"},"// 路径压缩, fa直接赋值为根结点"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// 合并操作: 合并元素 x 和 元素 y 所在的集合"),s(`
`),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"merge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" x"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" y"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token keyword"},"int"),s(" fx "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("x"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(" fy "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"find"),n("span",{class:"token punctuation"},"("),s("y"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
 	`),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("size"),n("span",{class:"token punctuation"},"["),s("fx"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},">"),s(" size"),n("span",{class:"token punctuation"},"["),s("fy"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    fa`),n("span",{class:"token punctuation"},"["),s("fy"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" fx"),n("span",{class:"token punctuation"},";"),s("                      "),n("span",{class:"token comment"},"// 将 fy 合并到 fx 集合 "),s(`
 		size`),n("span",{class:"token punctuation"},"["),s("fx"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"+="),s(" size"),n("span",{class:"token punctuation"},"["),s("fy"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s("             "),n("span",{class:"token comment"},"// fx 集合数量增加"),s(`
  `),n("span",{class:"token punctuation"},"}"),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
    fa`),n("span",{class:"token punctuation"},"["),s("fx"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(" fy"),n("span",{class:"token punctuation"},";"),s("                      "),n("span",{class:"token comment"},"// 将 fx 合并到 fy 集合 "),s(`
    size`),n("span",{class:"token punctuation"},"["),s("fy"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"+="),s(" size"),n("span",{class:"token punctuation"},"["),s("x"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s("              "),n("span",{class:"token comment"},"// fy 集合数量增加"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),q=n("h3",{id:"带权并查集",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#带权并查集","aria-hidden":"true"},"#"),s(" 带权并查集")],-1),D=n("p",null,[s("并查集本身是由若干树组成的森林，可以在树中"),n("strong",null,"每条边上记录一个权值"),s("，在代码实现中，维护一个数组 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"d")]),n("annotation",{encoding:"application/x-tex"},"d")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal"},"d")])])]),s(" ，用 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"d"),n("mo",{stretchy:"false"},"["),n("mi",null,"x"),n("mo",{stretchy:"false"},"]")]),n("annotation",{encoding:"application/x-tex"},"d[x]")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"d"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mclose"},"]")])])]),s(" 保存结点 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"x")]),n("annotation",{encoding:"application/x-tex"},"x")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"x")])])]),s(" 到父结点 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"f"),n("mi",null,"a"),n("mo",{stretchy:"false"},"["),n("mi",null,"x"),n("mo",{stretchy:"false"},"]")]),n("annotation",{encoding:"application/x-tex"},"fa[x]")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mopen"},"["),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mclose"},"]")])])]),s(" 之间的边权。在每次路径压缩过后，每个访问的结点都会直接指向树根，如果在路径压缩过程中同时更新这些结点的 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"d")]),n("annotation",{encoding:"application/x-tex"},"d")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6944em"}}),n("span",{class:"mord mathnormal"},"d")])])]),s(" 值，也即利用路径压缩的过程来统计每个结点到树根之间的路径上的一些信息。")],-1);function G(H,I){const c=r("CodeTabs");return u(),i("div",null,[b,k(" more "),y,v,w,f,x,h,g,l(c,{id:"34",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:o})=>[_]),tab1:a(({title:t,value:e,isActive:o})=>[z]),tab2:a(({title:t,value:e,isActive:o})=>[M]),_:1}),j,O,F,l(c,{id:"56",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:o})=>[L]),tab1:a(({title:t,value:e,isActive:o})=>[U]),tab2:a(({title:t,value:e,isActive:o})=>[S]),_:1}),A,N,V,C,l(c,{id:"79",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:o})=>[B]),tab1:a(({title:t,value:e,isActive:o})=>[T]),tab2:a(({title:t,value:e,isActive:o})=>[E]),_:1}),q,D])}const P=p(m,[["render",G],["__file","7.html.vue"]]);export{P as default};
