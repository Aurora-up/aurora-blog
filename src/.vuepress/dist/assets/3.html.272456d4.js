import{_ as i}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as u,c as r,e as k,d as o,w as a,a as n,f as p,b as s,r as d}from"./app.56b2977a.js";const m={},v=n("p",null,"mybatis 动态 SQL",-1),g=p('<p>【动态 SQL】解决的问题：SQL语句的拼接。</p><h3 id="if" tabindex="-1"><a class="header-anchor" href="#if" aria-hidden="true">#</a> if</h3><blockquote><p>主要用于某些判断条件为 <code>null</code> 或者为 <code>&quot;&quot;</code> (空字符串)可能会导致的查询失败。</p></blockquote><p>【参数】：</p><ul><li><code>test</code> : 在其中书写判断语句，判断语句中可以使用 <code>==</code> ，<code>!=</code> ，<code>&gt;</code> ，<code>&gt;=</code> 比较符号，对于复合条件，可以使用 <code>and</code> 和 <code>or</code> 进行连接。 <ul><li>当 <code>test</code> 中的条件成立时，在 <code>&lt;if&gt;&lt;/if&gt;</code> 中的 SQL 语句会生效；</li><li>不成立时，其中的 SQL 语句不会生效。</li></ul></li></ul><blockquote><p>例如：查询某一个班上学生成绩大于某个分数的学生的信息。</p></blockquote><p>查询时需要传递两个参数，一个是班级，一个是成绩。如果未传入成绩时，可以查询这个班所有学生的成绩。</p>',7),b=n("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[n("pre",{class:"language-xml"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("select")]),s(),n("span",{class:"token attr-name"},"id"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("findScoreGe"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"resultType"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("com.pojo.Student"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
  SELECT * FROM all_students
  WHERE class_name = #{className}
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("if")]),s(),n("span",{class:"token attr-name"},"test"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("score!=null"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
    AND score > #{score};
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("if")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("select")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"interface"),s(),n("span",{class:"token class-name"},"StudentMapper"),s(),n("span",{class:"token punctuation"},"{"),s(`
   `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 查询某一个班上学生成绩大于某个分数的学生的信息
   * `),n("span",{class:"token keyword"},"@return"),s(` 符合条件的学生信息
   */`)]),s(`
   `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Student"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"findScoreGe"),n("span",{class:"token punctuation"},"("),n("span",{class:"token annotation punctuation"},"@Param"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"className"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token class-name"},"String"),s(" className"),n("span",{class:"token punctuation"},","),s(` 
                             `),n("span",{class:"token annotation punctuation"},"@Param"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"score"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token class-name"},"Integer"),s(" score"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),q=n("div",{class:"custom-container info"},[n("p",{class:"custom-container-title"},"相关信息"),n("p",null,[s("在上面语句中，如果传入的 "),n("code",null,"score==null"),s(" ，那么就不将其中的 SQL 语句进行拼接。"),n("code",null,"if"),s(" 中的 "),n("code",null,"test"),s(" 中写的就是判定条件。")])],-1),f=n("blockquote",null,[n("p",null,"例如：查询某一个班上学生成绩大于某个分数且排名大于某个名次的学生的信息。")],-1),_=n("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[n("pre",{class:"language-xml"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("select")]),s(),n("span",{class:"token attr-name"},"id"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("findScoreGeOneHundred"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"resultType"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("com.pojo.Student"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
  SELECT * FROM all_students
  WHERE class_name = #{className}
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("if")]),s(),n("span",{class:"token attr-name"},"test"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("score!=null and rank!=null"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
    AND score > #{score}
    AND rank > #{rank}
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("if")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("select")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),x=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"interface"),s(),n("span",{class:"token class-name"},"StudentMapper"),s(),n("span",{class:"token punctuation"},"{"),s(`
   `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 查询某一个班上学生成绩大于某个分数且排名大于某个名词的学生的信息
   * `),n("span",{class:"token keyword"},"@return"),s(` 符合条件的学生信息
   */`)]),s(`
   `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Student"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"findScoreGeOneHundred"),n("span",{class:"token punctuation"},"("),n("span",{class:"token annotation punctuation"},"@Param"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"className"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token class-name"},"String"),s(" className"),n("span",{class:"token punctuation"},","),s(` 
                             				   `),n("span",{class:"token annotation punctuation"},"@Param"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"score"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token class-name"},"Integer"),s(" score"),n("span",{class:"token punctuation"},","),s(`
                                       `),n("span",{class:"token annotation punctuation"},"@Param"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"rank"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token class-name"},"Integer"),s(" rank"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),w=p(`<div class="custom-container info"><p class="custom-container-title">相关信息</p><p><code>&lt;if&gt;&lt;/if&gt;</code> 也可以连续多次使用，这样如果某个 <code>&lt;if&gt;&lt;/if&gt;</code> 中的条件满足时，就可以将其中的 SQL 语句加上。</p></div><h3 id="choose、when-、otherwise" tabindex="-1"><a class="header-anchor" href="#choose、when-、otherwise" aria-hidden="true">#</a> choose、when 、otherwise</h3><blockquote><p>在 SQL 语句中有时不想使用所有的条件，而是从其中选择一个使用，就像 <code>switch</code> 语句一样。那么此时可以使用这套组合。</p></blockquote><p>【基本结构】</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>choose</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>when</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      ...
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>when</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>when</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>...<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      ...
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>when</span><span class="token punctuation">&gt;</span></span>
   	<span class="token comment">&lt;!-- 可以有多个 when --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>otherwise</span><span class="token punctuation">&gt;</span></span>
      ...
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>otherwise</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>choose</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container info"><p class="custom-container-title">相关信息</p><p>依次执行 <code>when</code> 中的 <code>test</code> 判定条件，如果满足就会执行，并且跳出 <code>choose</code> ，若所有的 <code>when</code> 都没有执行，那么就是执行 <code>otherwise</code></p></div><blockquote><p>例如：根据学生的学号或学生的姓名进行查询，当两者都为空时，返回一个预置学生( <code>id=0</code>)</p></blockquote>`,7),N=n("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[n("pre",{class:"language-xml"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("select")]),s(),n("span",{class:"token attr-name"},"id"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("findStudent"),n("span",{class:"token punctuation"},'"')]),s(`
     `),n("span",{class:"token attr-name"},"resultType"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("Student"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
  SELECT * FROM all_students
  WHERE class_name = #{className}
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("choose")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("when")]),s(),n("span",{class:"token attr-name"},"test"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("id != null"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
      AND id = #{id}
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("when")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("when")]),s(),n("span",{class:"token attr-name"},"test"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("studentName != null"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
      AND studentName = #{studentName}
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("when")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("otherwise")]),n("span",{class:"token punctuation"},">")]),s(`
      AND id = 0
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("otherwise")]),n("span",{class:"token punctuation"},">")]),s(`
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("choose")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("select")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),E=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"interface"),s(),n("span",{class:"token class-name"},"StudentMapper"),s(),n("span",{class:"token punctuation"},"{"),s(`
   `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 根据学生的学号或学生的姓名进行查询
   * `),n("span",{class:"token keyword"},"@return"),s(` 符合条件的学生信息
   */`)]),s(`
   `),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Student"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"findStudent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token annotation punctuation"},"@Param"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"className"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token class-name"},"String"),s("  className"),n("span",{class:"token punctuation"},","),s(`
     												 `),n("span",{class:"token annotation punctuation"},"@Param"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"id"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token class-name"},"Long"),s(" id"),n("span",{class:"token punctuation"},","),s(` 
                             `),n("span",{class:"token annotation punctuation"},"@Param"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"studentName"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token class-name"},"String"),s(" studentName"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),S=p('<h3 id="trim、where、-set" tabindex="-1"><a class="header-anchor" href="#trim、where、-set" aria-hidden="true">#</a> trim、where、 set</h3><div class="custom-container info"><p class="custom-container-title">相关信息</p><p>使用 <code>&lt;if&gt;&lt;/if&gt;</code> 和 <code>&lt;choose&gt;&lt;/choose&gt;</code> 解决了 SQL 多个筛选条件时，后续的 <code>AND</code> 语句可能失败的情况，那么如果一开始的 <code>WHERE</code> 接一个判断语句就有问题的话，该如何解决？</p></div><p>例如下面情况。</p>',3),y=n("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[n("pre",{class:"language-xml"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("select")]),s(),n("span",{class:"token attr-name"},"id"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("findStudent"),n("span",{class:"token punctuation"},'"')]),s(`
     `),n("span",{class:"token attr-name"},"resultType"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("Student"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
  SELECT * FROM all_students
  WHERE 
  	`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("if")]),s(),n("span",{class:"token attr-name"},"test"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("className != null"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
  		class_name = #{className}
  	`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("if")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("if")]),s(),n("span",{class:"token attr-name"},"test"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("id != null"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
      AND id = #{id}
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("if")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("if")]),s(),n("span",{class:"token attr-name"},"test"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("studentName != null"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
      AND studentName = #{studentName}
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("if")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("select")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),L=n("p",null,[s("如果上面语句中 "),n("code",null,"className"),s(" ，"),n("code",null,"id"),s(" ，"),n("code",null,"studentName"),s(" 都为空的话， 会被解析为如下 SQL语句：")],-1),A=n("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[n("pre",{class:"language-sql"},[n("code",null,[n("span",{class:"token keyword"},"SELECT"),s(),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token keyword"},"FROM"),s(` all_students
`),n("span",{class:"token keyword"},"WHERE"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),R=n("p",null,[s("那么就这会导致查询失败，或者 "),n("code",null,"className"),s(" 为空，"),n("code",null,"id"),s(" 为 34 时，会解析为如下：")],-1),O=n("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[n("pre",{class:"language-sql"},[n("code",null,[n("span",{class:"token keyword"},"SELECT"),s(),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token keyword"},"FROM"),s(` all_students
`),n("span",{class:"token keyword"},"WHERE"),s(`
`),n("span",{class:"token operator"},"AND"),s(" id "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"34"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),T=n("p",null,"同样也会导致查询失败",-1),D=p(`<p>【解决方案一】</p><blockquote><p>使用 <code>&lt;where&gt;&lt;/where&gt;</code> ：</p></blockquote><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>findStudent<span class="token punctuation">&quot;</span></span>
     <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Student<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  SELECT * FROM all_students
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>where</span><span class="token punctuation">&gt;</span></span> 
  	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>className != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  		class_name = #{className}
  	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      AND id = #{id}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>studentName != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      AND studentName = #{studentName}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>where</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container info"><p class="custom-container-title">相关信息</p><p><code>&lt;where&gt;&lt;/where&gt;</code> 元素只会在子元素返回任何内容的情况下才插入 <code>WHERE</code> 子句。而且，若子句的开头为 <code>AND</code> 或 <code>OR</code>，则会将它们去除。</p></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>方案一中，对于后续的所有判断语句，必须以 <code>AND</code> 或者 <code>OR</code> 来开头，这对 SQL 的规范性有所要求，如果这个 <code>AND</code> 或者 <code>OR</code> 正好出现在上一条件的末尾。而不是开头，那么其就会无法被去掉，进而造成 SQL 语句的执行失败。</p></div><p>【解决方案二】</p><blockquote><p>使用 <code>&lt;trim&gt;&lt;/trim&gt;</code></p></blockquote><p>参数：</p><ul><li><code>prefix</code> trim 中整体语句的前缀</li><li><code>suffix</code> trim 中整体语句的后缀</li><li><code>prefixOverrides</code> trim 中每个独立语句想要省去的前缀</li><li><code>suffixOverrides</code> trim 中每个独立语句想要省去的后缀</li></ul><div class="custom-container info"><p class="custom-container-title">相关信息</p><p>当 trim 中没有任何语句时，<code>prefix</code> 和 <code>suffix</code> 中的内容就不会生效。</p></div><p>与 <code>&lt;where&gt;&lt;/where&gt;</code> 等价的写法：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>trim</span> <span class="token attr-name">prefix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>WHERE<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prefixOverrides</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>AND | OR <span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  ...
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>trim</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container info"><p class="custom-container-title">相关信息</p><p><code>prefixOverrides=&quot;AND | OR &quot;</code> 标签前缀为 <code>AND</code> 或者 <code>OR</code> 的都会省去</p></div><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>findStudent<span class="token punctuation">&quot;</span></span>
     <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Student<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  SELECT * FROM all_students
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>trim</span> <span class="token attr-name">prefix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>WHERE<span class="token punctuation">&quot;</span></span> <span class="token attr-name">prefixOverrides</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>AND | OR <span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>className != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  		class_name = #{className}
  	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      AND id = #{id}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>studentName != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      AND studentName = #{studentName}
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>trim</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在更新语句中，也可以使用 <code>&lt;trim&gt;&lt;/trim&gt;</code> 元素来替代 <code>&lt;set&gt;&lt;/set&gt;</code> 元素，并且可以将条件不成立语句后面的 <code>,</code> 省去。</p><p>对于 <code>&lt;set&gt;&lt;/set&gt;</code> 元素本身来说，若子句的开头为 【<code>,</code>】 , 则会将其去除。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>modifyUserInfo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  update smbms.smbms_user
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>trim</span> <span class="token attr-name">prefix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>SET<span class="token punctuation">&quot;</span></span> <span class="token attr-name">suffixOverrides</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>,<span class="token punctuation">&quot;</span></span> <span class="token attr-name">suffix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>WHERE id = #{id}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userCode != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>userCode = #{user.userCode},<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userName != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>userName = #{user.userName},<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userPassword != null<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>userPassword = #{user.userPassword},<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>trim</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="foreach" tabindex="-1"><a class="header-anchor" href="#foreach" aria-hidden="true">#</a> foreach</h3><p>对于需要迭代的集合，数组，那么就可以使用 foreach 元素。</p><p>【参数】</p><ul><li><code>collection</code> 为可迭代的类型</li><li><code>item</code> 为迭代的每个一个元素</li><li><code>index</code> 每个迭代元素的索引</li><li><code>separator</code> 为每个迭代元素之间的间隔符</li><li><code>open</code> 为第一迭代元素前加的字符</li><li><code>close</code> 为最后一个迭代元素后加的字符</li></ul><blockquote><p>例如：通过 id 数组 批量删除用户</p></blockquote>`,22),M=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"interface"),s(),n("span",{class:"token class-name"},"UserMapper"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 通过 id 数组批量删除用户
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"ids"),s(` id 数组
   * `),n("span",{class:"token keyword"},"@return"),s(` 影响行数
   */`)]),s(`
  `),n("span",{class:"token class-name"},"Integer"),s(),n("span",{class:"token function"},"deleteUsersById"),n("span",{class:"token punctuation"},"("),n("span",{class:"token annotation punctuation"},"@Param"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"ids"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token class-name"},"Long"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" ids"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),j=n("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[n("pre",{class:"language-xml"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("delete")]),s(),n("span",{class:"token attr-name"},"id"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("deleteUsersById"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
  DELETE FROM smbms.smbms_user
  WHERE smbms_user.id IN
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("foreach")]),s(),n("span",{class:"token attr-name"},"collection"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("ids"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"item"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("id"),n("span",{class:"token punctuation"},'"')]),s(`
           `),n("span",{class:"token attr-name"},"separator"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s(","),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"open"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("("),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"close"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s(")"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
    #{id}
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("foreach")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("delete")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),H=n("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[n("pre",{class:"language-sql"},[n("code",null,[n("span",{class:"token comment"},"# 上面 xml 等价的 sql 语句"),s(`
`),n("span",{class:"token keyword"},"DELETE"),s(),n("span",{class:"token keyword"},"FROM"),s(" smbms"),n("span",{class:"token punctuation"},"."),s(`smbms_user 
`),n("span",{class:"token keyword"},"WHERE"),s(" smbms_user"),n("span",{class:"token punctuation"},"."),s("id "),n("span",{class:"token operator"},"IN"),s(),n("span",{class:"token punctuation"},"("),s(" ? "),n("span",{class:"token punctuation"},","),s(" ? "),n("span",{class:"token punctuation"},","),s(" ?"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),C=n("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[n("pre",{class:"language-xml"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("delete")]),s(),n("span",{class:"token attr-name"},"id"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("deleteUsersById"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
  DELETE FROM smbms.smbms_user
  WHERE smbms_user.id =
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("foreach")]),s(),n("span",{class:"token attr-name"},"collection"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("ids"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"item"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("id"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"separator"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("or"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
    #{id}
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("foreach")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("delete")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),I=n("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[n("pre",{class:"language-sql"},[n("code",null,[n("span",{class:"token comment"},"# 上面 xml 等价的 sql 语句"),s(`
`),n("span",{class:"token keyword"},"DELETE"),s(),n("span",{class:"token keyword"},"FROM"),s(" smbms"),n("span",{class:"token punctuation"},"."),s(`smbms_user 
`),n("span",{class:"token keyword"},"WHERE"),s(" smbms_user"),n("span",{class:"token punctuation"},"."),s("id "),n("span",{class:"token operator"},"="),s(" ? "),n("span",{class:"token operator"},"or"),s(" ? "),n("span",{class:"token operator"},"or"),s(" ? "),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),W=n("blockquote",null,[n("p",null,"例如：批量添加用户")],-1),Q=n("div",{class:"language-java line-numbers-mode","data-ext":"java"},[n("pre",{class:"language-java"},[n("code",null,[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"interface"),s(),n("span",{class:"token class-name"},"UserMapper"),s(),n("span",{class:"token punctuation"},"{"),s(`
  `),n("span",{class:"token doc-comment comment"},[s(`/**
   * 批量添加用户
   * `),n("span",{class:"token keyword"},"@param"),s(),n("span",{class:"token parameter"},"users"),s(` 用户集合
   * `),n("span",{class:"token keyword"},"@return"),s(` 影响行数
   */`)]),s(`
  `),n("span",{class:"token class-name"},"Integer"),s(),n("span",{class:"token function"},"insertUsers"),n("span",{class:"token punctuation"},"("),n("span",{class:"token annotation punctuation"},"@Param"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"users"'),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"User"),n("span",{class:"token punctuation"},">")]),s(" users"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),P=n("div",{class:"language-xml line-numbers-mode","data-ext":"xml"},[n("pre",{class:"language-xml"},[n("code",null,[n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("insert")]),s(),n("span",{class:"token attr-name"},"id"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("insertUsers"),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
  INSERT INTO smbms.smbms_user VALUES
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("foreach")]),s(),n("span",{class:"token attr-name"},"collection"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("users"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"item"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s("user"),n("span",{class:"token punctuation"},'"')]),s(),n("span",{class:"token attr-name"},"separator"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),s(","),n("span",{class:"token punctuation"},'"')]),n("span",{class:"token punctuation"},">")]),s(`
    (#{user.id}, #{user.userCode}, #{user.userName},null, null)
  `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("foreach")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("insert")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"highlight-lines"},[n("br"),n("br"),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("div",{class:"highlight-line"}," "),n("br")]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),F=n("div",{class:"language-sql line-numbers-mode","data-ext":"sql"},[n("pre",{class:"language-sql"},[n("code",null,[n("span",{class:"token comment"},"# 上面 xml 等价的 sql 语句"),s(`
`),n("span",{class:"token keyword"},"INSERT"),s(),n("span",{class:"token keyword"},"INTO"),s(" smbms"),n("span",{class:"token punctuation"},"."),s(`smbms_user 
`),n("span",{class:"token keyword"},"VALUES"),s(),n("span",{class:"token punctuation"},"("),s("?"),n("span",{class:"token punctuation"},","),s(" ?"),n("span",{class:"token punctuation"},","),s(" ?"),n("span",{class:"token punctuation"},","),n("span",{class:"token boolean"},"null"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"null"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`
			 `),n("span",{class:"token punctuation"},"("),s("?"),n("span",{class:"token punctuation"},","),s(" ?"),n("span",{class:"token punctuation"},","),s(" ?"),n("span",{class:"token punctuation"},","),n("span",{class:"token boolean"},"null"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token boolean"},"null"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(`	
       `),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),n("span",{class:"token punctuation"},"."),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),U=n("p",null,"上述的的元素常用于各个 SQL 语句中，还有",-1);function V(X,B){const c=d("Tabs");return u(),r("div",null,[v,k(" more "),g,o(c,{id:"45",data:[{title:"XML"},{title:"java"}]},{tab0:a(({title:t,value:e,isActive:l})=>[b]),tab1:a(({title:t,value:e,isActive:l})=>[h]),_:1}),q,f,o(c,{id:"63",data:[{title:"XML"},{title:"java"}]},{tab0:a(({title:t,value:e,isActive:l})=>[_]),tab1:a(({title:t,value:e,isActive:l})=>[x]),_:1}),w,o(c,{id:"98",data:[{title:"XML"},{title:"java"}]},{tab0:a(({title:t,value:e,isActive:l})=>[N]),tab1:a(({title:t,value:e,isActive:l})=>[E]),_:1}),S,o(c,{id:"117",data:[{title:"XML"},{title:"SQL"}]},{tab0:a(({title:t,value:e,isActive:l})=>[y]),tab1:a(({title:t,value:e,isActive:l})=>[L,A,R,O,T]),_:1}),D,o(c,{id:"255",data:[{title:"java"},{title:"XML-1"},{title:"XML-2"}]},{tab0:a(({title:t,value:e,isActive:l})=>[M]),tab1:a(({title:t,value:e,isActive:l})=>[j,H]),tab2:a(({title:t,value:e,isActive:l})=>[C,I]),_:1}),W,o(c,{id:"273",data:[{title:"java"},{title:"XML"}]},{tab0:a(({title:t,value:e,isActive:l})=>[Q]),tab1:a(({title:t,value:e,isActive:l})=>[P,F]),_:1}),U])}const J=i(m,[["render",V],["__file","3.html.vue"]]);export{J as default};
