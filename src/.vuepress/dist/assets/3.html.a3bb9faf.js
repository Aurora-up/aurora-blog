import{_ as u}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as r,c as m,e as d,d as o,w as a,a as s,b as n,f as k,r as p}from"./app.d8d3cce9.js";const h="/aurora-blog/assets/image-20221227222729075.d0cb3478.png",g="/aurora-blog/assets/image-20221227224209336.27d44d6c.png",v="/aurora-blog/assets/image-20221227224245927.84b08366.png",b="/aurora-blog/assets/image-20221227224312600.fa03f11a.png",y="/aurora-blog/assets/image-20221227224343427.375a578e.png",w="/aurora-blog/assets/image-20221227225855008.c63fc071.png",x="/aurora-blog/assets/image-20221227230225366.e3248dc2.png",_="/aurora-blog/assets/image-20221227230333570.7ca18543.png",f="/aurora-blog/assets/image-20221227232312859.b48cafe6.png",M="/aurora-blog/assets/image-20221227232349026.46ec736c.png",T="/aurora-blog/assets/image-20221227232428289.e91e8c01.png",O="/aurora-blog/assets/image-20221227232458486.d3faeecb.png",N="/aurora-blog/assets/image-20230102120759666.439e234f.png",z="/aurora-blog/assets/image-20230102122358130.602aa39d.png",L="/aurora-blog/assets/image-20230102122459746.aae64969.png",A={},j=s("p",null,"「二叉搜索树 Binary Search Tree」",-1),B=s("p",null,"「二叉搜索树 Binary Search Tree」满足以下条件：",-1),C=s("ol",null,[s("li",null,"对于根结点，左子树中所有结点的值 < 根结点的值 < 右子树中所有结点的值；"),s("li",null,[n("任意结点的左子树和右子树也是二叉搜索树，即也满足条件 "),s("code",null,"1."),n(" ；")])],-1),S=s("p",null,[s("img",{src:h,alt:"image-20221227222729075",loading:"lazy"})],-1),V=s("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[s("pre",{class:"language-rust"},[s("code",null,`
`)]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])],-1),E=s("div",{class:"language-java line-numbers-mode","data-ext":"java"},[s("pre",{class:"language-java"},[s("code",null,[s("span",{class:"token keyword"},"class"),n(),s("span",{class:"token class-name"},"BinarySearchTree"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),n(),s("span",{class:"token keyword"},"extends"),n(),s("span",{class:"token class-name"},"Comparable"),s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},">"),s("span",{class:"token punctuation"},">")]),n(),s("span",{class:"token punctuation"},"{"),n(`
	`),s("span",{class:"token keyword"},"private"),n(),s("span",{class:"token class-name"},"TreeNode"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},">")]),n(" root"),s("span",{class:"token punctuation"},";"),n(`
 	`),s("span",{class:"token doc-comment comment"},[n(`/**
   * 构建二叉搜索树
   * `),s("span",{class:"token keyword"},"@param"),n(),s("span",{class:"token parameter"},"nodes"),n(` 原始无序数组 (存储的是结点中的 值 ,即 TreeNode.value )
   */`)]),n(`
  `),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token class-name"},"BinarySearchTree"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},"]"),n(" nodes"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token class-name"},"Arrays"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"sort"),s("span",{class:"token punctuation"},"("),n("nodes"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"this"),s("span",{class:"token punctuation"},"."),n("root "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token function"},"buildTree"),s("span",{class:"token punctuation"},"("),n("nodes"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},","),n(" nodes"),s("span",{class:"token punctuation"},"."),n("length "),s("span",{class:"token operator"},"-"),n(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token punctuation"},"}"),n(`
  
  `),s("span",{class:"token doc-comment comment"},[n(`/**
   * `),s("span",{class:"token keyword"},"@return"),n(` 二叉树的根结点
   */`)]),n(`
  `),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token class-name"},"TreeNode"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},">")]),n(),s("span",{class:"token function"},"getRoot"),s("span",{class:"token punctuation"},"("),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token keyword"},"this"),s("span",{class:"token punctuation"},"."),n("root"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token punctuation"},"}"),n(`
  
  `),s("span",{class:"token doc-comment comment"},[n(`/**
   * 根据有序数组构建二叉树搜索树
   * `),s("span",{class:"token keyword"},"@param"),n(),s("span",{class:"token parameter"},"nodes"),n(` 有序的结点数组
   * `),s("span",{class:"token keyword"},"@param"),n(),s("span",{class:"token parameter"},"begin"),n(` 结点数组起始索引
   * `),s("span",{class:"token keyword"},"@param"),n(),s("span",{class:"token parameter"},"end"),n(`   结点数组末尾索引
   * `),s("span",{class:"token keyword"},"@return"),n(` 二叉搜索树的根节点
   */`)]),n(`
  `),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token class-name"},"TreeNode"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},">")]),n(),s("span",{class:"token function"},"buildTree"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},"["),s("span",{class:"token punctuation"},"]"),n(" nodes"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token keyword"},"int"),n(" begin"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token keyword"},"int"),n(" end"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("begin "),s("span",{class:"token operator"},">"),n(" end"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token comment"},"// nodes[mid] 作为根节点"),n(`
    `),s("span",{class:"token keyword"},"int"),n(" mid "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token punctuation"},"("),n("begin "),s("span",{class:"token operator"},"+"),n(" end"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},"/"),n(),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token class-name"},"TreeNode"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},">")]),n(" root "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token keyword"},"new"),n(),s("span",{class:"token class-name"},"TreeNode"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token punctuation"},">")]),s("span",{class:"token punctuation"},"("),n("nodes"),s("span",{class:"token punctuation"},"["),n("mid"),s("span",{class:"token punctuation"},"]"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token comment"},"// 递归构建左子树和右子树"),n(`
    root`),s("span",{class:"token punctuation"},"."),n("left "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token function"},"buildTree"),s("span",{class:"token punctuation"},"("),n("nodes"),s("span",{class:"token punctuation"},","),n(" begin"),s("span",{class:"token punctuation"},","),n(" mid "),s("span",{class:"token operator"},"-"),n(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
    root`),s("span",{class:"token punctuation"},"."),n("right "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token function"},"buildTree"),s("span",{class:"token punctuation"},"("),n("nodes"),s("span",{class:"token punctuation"},","),n(" mid "),s("span",{class:"token operator"},"+"),n(),s("span",{class:"token number"},"1"),s("span",{class:"token punctuation"},","),n(" end"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"return"),n(" root"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token punctuation"},"}"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),R=s("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[s("pre",{class:"language-cpp"},[s("code",null,`
`)]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])],-1),q=k('<h2 id="二叉搜索树的操作" tabindex="-1"><a class="header-anchor" href="#二叉搜索树的操作" aria-hidden="true">#</a> 二叉搜索树的操作</h2><h3 id="查找结点" tabindex="-1"><a class="header-anchor" href="#查找结点" aria-hidden="true">#</a> 查找结点</h3><p>给定目标结点 <code>node</code> ，可以根据二叉搜索树的性质来查找。声明一个结点 <code>cur</code> ，从二叉树的根结点 <code>root</code> 出发，循环比较结点值 <code>cur.value</code> 和 <code>node.value</code> 之间的大小关系.</p><ul><li>若 <code>cur.value &lt; node.value</code> ，说明目标结点在 <code>cur</code> 的右子树中，因此执行 <code>cur = cur.right</code> ；</li><li>若 <code>cur.value &gt; node.value</code> ，说明目标结点在 <code>cur</code> 的左子树中，因此执行 <code>cur = cur.left</code> ；</li><li>若 <code>cur.value = node.value</code> ，说明找到目标结点，跳出循环并返回该结点即可；</li></ul>',4),D=s("p",null,[s("img",{src:g,alt:"image-20221227224209336",loading:"lazy"})],-1),F=s("p",null,[s("img",{src:v,alt:"image-20221227224245927",loading:"lazy"})],-1),G=s("p",null,[s("img",{src:b,alt:"image-20221227224312600",loading:"lazy"})],-1),H=s("p",null,[s("img",{src:y,alt:"image-20221227224343427",loading:"lazy"})],-1),I=s("p",null,[n("二叉搜索树的查找操作就像二分查找一样，每次折半。循环次数最多为二叉树的高度，"),s("strong",null,"当二叉树平衡时"),n("，时间复杂度为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"l"),s("mi",null,"o"),s("msub",null,[s("mi",null,"g"),s("mi",null,"n")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(log_n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose"},")")])])]),n(" .")],-1),J=s("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[s("pre",{class:"language-rust"},[s("code",null,`
`)]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])],-1),K=s("div",{class:"language-java line-numbers-mode","data-ext":"java"},[s("pre",{class:"language-java"},[s("code",null,[s("span",{class:"token doc-comment comment"},[n(`/**
 * 查找结点
 * `),s("span",{class:"token keyword"},"@param"),n(),s("span",{class:"token parameter"},"node"),n(` 查找的目标结点
 * `),s("span",{class:"token keyword"},"@return"),n(` 返回查找的目标结点
 */`)]),n(`
`),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token class-name"},"TreeNode"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},">")]),n(),s("span",{class:"token function"},"search"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name"},"TreeNode"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},">")]),n(" node"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token class-name"},"TreeNode"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},">")]),n(" cur "),s("span",{class:"token operator"},"="),n(" root"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token keyword"},"while"),n(),s("span",{class:"token punctuation"},"("),n("cur "),s("span",{class:"token operator"},"!="),n(),s("span",{class:"token keyword"},"null"),n(),s("span",{class:"token operator"},"&&"),n(" node "),s("span",{class:"token operator"},"!="),n(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("cur"),s("span",{class:"token punctuation"},"."),n("value"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"compareTo"),s("span",{class:"token punctuation"},"("),n("node"),s("span",{class:"token punctuation"},"."),n("value"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},"<"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},")"),n("      "),s("span",{class:"token comment"},"// 目标结点的值大于根节点的值, 在右子树中"),n(`
      cur `),s("span",{class:"token operator"},"="),n(" cur"),s("span",{class:"token punctuation"},"."),n("right"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"else"),n(),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("cur"),s("span",{class:"token punctuation"},"."),n("value"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"compareTo"),s("span",{class:"token punctuation"},"("),n("node"),s("span",{class:"token punctuation"},"."),n("value"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},">"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token comment"},"// 目标结点的值小于根节点的值, 在左子树中"),n(`
      cur `),s("span",{class:"token operator"},"="),n(" cur"),s("span",{class:"token punctuation"},"."),n("left"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"else"),n("           "),s("span",{class:"token comment"},"// 找到目标结点, 跳出循环"),n(`
      `),s("span",{class:"token keyword"},"break"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token punctuation"},"}"),n(`
  `),s("span",{class:"token keyword"},"return"),n(" cur"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),P=s("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[s("pre",{class:"language-cpp"},[s("code",null,`
`)]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])],-1),Q=s("h3",{id:"插入结点",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#插入结点","aria-hidden":"true"},"#"),n(" 插入结点")],-1),U=s("p",null,[n("给定一个待插入结点 "),s("code",null,"node"),n(" ，为了保持二叉搜索树 “左子树 < 根结点 < 右子树” 的性质，插入操作分为两步：")],-1),W=s("ol",null,[s("li",null,[s("strong",null,"查找插入位置："),n(" 与查找操作类似，我们从根结点出发，根据当前结点值和 "),s("code",null,"node.value"),n(" 的大小关系循环向下搜索，直到越过叶结点（遍历到 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"l"),s("mi",null,"l")]),s("annotation",{encoding:"application/x-tex"},"null")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"ll")])])]),n("）时跳出循环；")]),s("li",null,[s("strong",null,"在该位置插入结点："),n(" 将该结点放到查到的 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"l"),s("mi",null,"l")]),s("annotation",{encoding:"application/x-tex"},"null")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"ll")])])]),n(" 位置 ；")])],-1),X=s("p",null,"二叉搜索树不允许存在重复结点，否则将会违背其定义。因此若待插入结点在树中已经存在，则不执行插入，直接返回即可.",-1),Y=s("p",null,[s("img",{src:w,alt:"image-20221227225855008",loading:"lazy"})],-1),Z=s("p",null,[n("为了插入结点，需要借助 "),s("strong",null,[n("辅助结点 "),s("code",null,"pre")]),n(" 保存上一轮循环的结点，这样在遍历到 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n"),s("mi",null,"u"),s("mi",null,"l"),s("mi",null,"l")]),s("annotation",{encoding:"application/x-tex"},"null")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"ll")])])]),n(" 时，我们也可以获取到其父结点，从而完成结点插入操作。")],-1),$=s("p",null,[n("与查找结点相同，"),s("strong",null,"当二叉树平衡时"),n("，插入结点的时间复杂度为: "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"g"),s("msub",null,[s("mtext",null,"⁡"),s("mi",null,"n")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(log⁡_n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord"},[s("span",{class:"mord"},"⁡"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose"},")")])])]),n(".")],-1),ss=s("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[s("pre",{class:"language-rust"},[s("code",null,`
`)]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])],-1),ns=s("div",{class:"language-java line-numbers-mode","data-ext":"java"},[s("pre",{class:"language-java"},[s("code",null,[s("span",{class:"token doc-comment comment"},[n(`/**
 * 插入结点
 * `),s("span",{class:"token keyword"},"@param"),n(),s("span",{class:"token parameter"},"node"),n(` 需要被插入的结点
 * `),s("span",{class:"token keyword"},"@return"),n(` 被插入结点信息
 */`)]),n(`
`),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token class-name"},"TreeNode"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},">")]),n(),s("span",{class:"token function"},"insert"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name"},"TreeNode"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},">")]),n(" node"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"this"),s("span",{class:"token punctuation"},"."),n("root "),s("span",{class:"token operator"},"=="),n(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token class-name"},"TreeNode"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},">")]),n(" cur "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token keyword"},"this"),s("span",{class:"token punctuation"},"."),n("root"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token class-name"},"TreeNode"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},">")]),n(" pre "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token comment"},"// 查找结点位置"),n(`
  `),s("span",{class:"token keyword"},"while"),n(),s("span",{class:"token punctuation"},"("),n("cur "),s("span",{class:"token operator"},"!="),n(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("cur"),s("span",{class:"token punctuation"},"."),n("value"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"compareTo"),s("span",{class:"token punctuation"},"("),n("node"),s("span",{class:"token punctuation"},"."),n("value"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},"=="),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token comment"},"// 结点已经存在, 直接返回"),n(`
      `),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},";"),n(`
    pre `),s("span",{class:"token operator"},"="),n(" cur"),s("span",{class:"token punctuation"},";"),n("                  "),s("span",{class:"token comment"},"// 记录当前结点, 便于后序的插入"),n(`
    `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("cur"),s("span",{class:"token punctuation"},"."),n("value"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"compareTo"),s("span",{class:"token punctuation"},"("),n("node"),s("span",{class:"token punctuation"},"."),n("value"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},"<"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},")"),n("  "),s("span",{class:"token comment"},"// 插入位置在当前结点的右子树"),n(`
      cur `),s("span",{class:"token operator"},"="),n(" cur"),s("span",{class:"token punctuation"},"."),n("right"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"else"),n("                                      "),s("span",{class:"token comment"},"// 插入位置在当前结点的左子树"),n(`
      cur `),s("span",{class:"token operator"},"="),n(" cur"),s("span",{class:"token punctuation"},"."),n("left"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token punctuation"},"}"),n(`
  `),s("span",{class:"token comment"},"// 插入该节点"),n(`
  `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("pre"),s("span",{class:"token punctuation"},"."),n("value"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"compareTo"),s("span",{class:"token punctuation"},"("),n("node"),s("span",{class:"token punctuation"},"."),n("value"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},"<"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},")"),n(`
    pre`),s("span",{class:"token punctuation"},"."),n("right "),s("span",{class:"token operator"},"="),n(" node"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token keyword"},"else"),n(`
    pre`),s("span",{class:"token punctuation"},"."),n("left "),s("span",{class:"token operator"},"="),n(" node"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token keyword"},"return"),n(" node"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),as=s("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[s("pre",{class:"language-cpp"},[s("code",null,`
`)]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])],-1),ts=s("h3",{id:"删除结点",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#删除结点","aria-hidden":"true"},"#"),n(" 删除结点")],-1),es=s("p",null,[n("与插入结点一样，我们需要在删除操作后维持二叉搜索树的 “左子树 < 根结点 < 右子树” 的性质。首先，我们需要在二叉树中执行查找操作，获取待删除结点。根据待删除结点的"),s("strong",null,"子结点数量"),n("，删除操作需要分为三种情况：")],-1),ls=s("ol",null,[s("li",null,[s("strong",null,[n("待删除结点的子结点数量 = "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"},"0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])]),n(" .")]),n(" 表明待删除结点是叶结点，直接删除即可。")])],-1),os=s("p",null,[s("img",{src:x,alt:"image-20221227230225366",loading:"lazy"})],-1),cs=s("ol",{start:"2"},[s("li",null,[s("strong",null,[n("待删除结点的子结点数量 = "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),n(" .")]),n(" 将待删除结点替换为其子结点。")])],-1),is=s("p",null,[s("img",{src:_,alt:"image-20221227230333570",loading:"lazy"})],-1),ps=s("ol",{start:"3"},[s("li",null,[s("strong",null,[n("待删除结点的子结点数量 = "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"2")]),s("annotation",{encoding:"application/x-tex"},"2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"2")])])]),n(" .")]),n(" 删除操作分为三步： "),s("ol",null,[s("li",null,[n("找到待删除结点在 "),s("strong",null,"中序遍历序列"),n(" 中的下一个结点，记为 "),s("code",null,"next"),n(" ；")]),s("li",null,[n("在树中递归删除结点 "),s("code",null,"next"),n(" ；")]),s("li",null,[n("使用 "),s("code",null,"next"),n(" 替换待删除结点；")])])])],-1),us=s("p",null,[s("img",{src:f,alt:"image-20221227232312859",loading:"lazy"})],-1),rs=s("p",null,[s("img",{src:M,alt:"image-20221227232349026",loading:"lazy"})],-1),ms=s("p",null,[s("img",{src:T,alt:"image-20221227232428289",loading:"lazy"})],-1),ds=s("p",null,[s("img",{src:O,alt:"image-20221227232458486",loading:"lazy"})],-1),ks=s("div",{class:"language-rust line-numbers-mode","data-ext":"rs"},[s("pre",{class:"language-rust"},[s("code",null,`
`)]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])],-1),hs=s("div",{class:"language-java line-numbers-mode","data-ext":"java"},[s("pre",{class:"language-java"},[s("code",null,[s("span",{class:"token doc-comment comment"},[n(`/**
 * 删除结点
 * `),s("span",{class:"token keyword"},"@param"),n(),s("span",{class:"token parameter"},"node"),n(` 需要被删除的结点
 * `),s("span",{class:"token keyword"},"@return"),n(` 被删除的结点的信息
 */`)]),n(`
`),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token class-name"},"TreeNode"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},">")]),n(),s("span",{class:"token function"},"remove"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name"},"TreeNode"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},">")]),n(" node"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"this"),s("span",{class:"token punctuation"},"."),n("root "),s("span",{class:"token operator"},"=="),n(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},";"),n("        "),s("span",{class:"token comment"},"// 树为空,直接返回"),n(`
  `),s("span",{class:"token class-name"},"TreeNode"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},">")]),n(" cur "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token keyword"},"this"),s("span",{class:"token punctuation"},"."),n("root"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token class-name"},"TreeNode"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},">")]),n(" pre "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token keyword"},"while"),n(),s("span",{class:"token punctuation"},"("),n("cur "),s("span",{class:"token operator"},"!="),n(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("cur"),s("span",{class:"token punctuation"},"."),n("value "),s("span",{class:"token operator"},"=="),n(" node"),s("span",{class:"token punctuation"},"."),n("value"),s("span",{class:"token punctuation"},")"),n("             "),s("span",{class:"token comment"},"// 找到待删除结点,跳出循环"),n(`
      `),s("span",{class:"token keyword"},"break"),s("span",{class:"token punctuation"},";"),n(`
    pre `),s("span",{class:"token operator"},"="),n(" cur"),s("span",{class:"token punctuation"},";"),n("                               "),s("span",{class:"token comment"},"// 记录当前结点,便于后续删除"),n(`
    `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("cur"),s("span",{class:"token punctuation"},"."),n("value"),s("span",{class:"token punctuation"},"."),s("span",{class:"token function"},"compareTo"),s("span",{class:"token punctuation"},"("),n("node"),s("span",{class:"token punctuation"},"."),n("value"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token operator"},"<"),n(),s("span",{class:"token number"},"0"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token comment"},"// 待删除结点在当前节点的右子树中"),n(`
      cur `),s("span",{class:"token operator"},"="),n(" cur"),s("span",{class:"token punctuation"},"."),n("right"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"else"),n("                                     "),s("span",{class:"token comment"},"// 待删除结点在当前结点的左子树中"),n(`
      cur `),s("span",{class:"token operator"},"="),n(" cur"),s("span",{class:"token punctuation"},"."),n("left"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token punctuation"},"}"),n(`
  `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("cur "),s("span",{class:"token operator"},"=="),n(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},";"),n("              "),s("span",{class:"token comment"},"// 待删除结点不存在"),n(`
  `),s("span",{class:"token comment"},"// 待删除结点的 子结点数量 = 0 或 1"),n(`
  `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("cur"),s("span",{class:"token punctuation"},"."),n("left "),s("span",{class:"token operator"},"=="),n(),s("span",{class:"token keyword"},"null"),n(),s("span",{class:"token operator"},"||"),n(" cur"),s("span",{class:"token punctuation"},"."),n("right "),s("span",{class:"token operator"},"=="),n(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token comment"},"// 当子结点数量 = 0 / 1 时， child = null / 该子结点"),n(`
    `),s("span",{class:"token class-name"},"TreeNode"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},">")]),n(" child "),s("span",{class:"token operator"},"="),n(" cur"),s("span",{class:"token punctuation"},"."),n("left "),s("span",{class:"token operator"},"!="),n(),s("span",{class:"token keyword"},"null"),n(),s("span",{class:"token operator"},"?"),n(" cur"),s("span",{class:"token punctuation"},"."),n("left "),s("span",{class:"token operator"},":"),n(" cur"),s("span",{class:"token punctuation"},"."),n("right"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("pre"),s("span",{class:"token punctuation"},"."),n("left "),s("span",{class:"token operator"},"=="),n(" cur"),s("span",{class:"token punctuation"},")"),n(" pre"),s("span",{class:"token punctuation"},"."),n("left "),s("span",{class:"token operator"},"="),n(" child"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token keyword"},"else"),n(" pre"),s("span",{class:"token punctuation"},"."),n("right "),s("span",{class:"token operator"},"="),n(" child"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token punctuation"},"}"),n(`
  `),s("span",{class:"token comment"},"// 待删除结点数量 = 2"),n(`
  `),s("span",{class:"token keyword"},"else"),n(),s("span",{class:"token punctuation"},"{"),n(`
    `),s("span",{class:"token comment"},"// 获取中序遍历下 cur 的后继结点 next"),n(`
    `),s("span",{class:"token class-name"},"TreeNode"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},">")]),n(" next "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token function"},"inOrderNextNode"),s("span",{class:"token punctuation"},"("),n("cur"),s("span",{class:"token punctuation"},"."),n("right"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token class-name"},"T"),n(" tmp "),s("span",{class:"token operator"},"="),n(" next"),s("span",{class:"token punctuation"},"."),n("value"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token comment"},"// 删除 next 结点"),n(`
    `),s("span",{class:"token function"},"remove"),s("span",{class:"token punctuation"},"("),n("next"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";"),n(`
    `),s("span",{class:"token comment"},"// 将 next 结点的值赋给待删除结点"),n(`
    cur`),s("span",{class:"token punctuation"},"."),n("value "),s("span",{class:"token operator"},"="),n(" tmp"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token punctuation"},"}"),n(`
  `),s("span",{class:"token keyword"},"return"),n(" cur"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`

`),s("span",{class:"token doc-comment comment"},[n(`/**
 * 获取最小结点
 * `),s("span",{class:"token keyword"},"@param"),n(),s("span",{class:"token parameter"},"node"),n(`
 * `),s("span",{class:"token keyword"},"@return"),n(`
 */`)]),n(`
`),s("span",{class:"token keyword"},"public"),n(),s("span",{class:"token class-name"},"TreeNode"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},">")]),n(),s("span",{class:"token function"},"inOrderNextNode"),s("span",{class:"token punctuation"},"("),s("span",{class:"token class-name"},"TreeNode"),s("span",{class:"token generics"},[s("span",{class:"token punctuation"},"<"),s("span",{class:"token class-name"},"T"),s("span",{class:"token punctuation"},">")]),n(" node"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
  `),s("span",{class:"token keyword"},"if"),n(),s("span",{class:"token punctuation"},"("),n("node "),s("span",{class:"token operator"},"=="),n(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token keyword"},"return"),n(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token keyword"},"while"),n(),s("span",{class:"token punctuation"},"("),n("node"),s("span",{class:"token punctuation"},"."),n("left "),s("span",{class:"token operator"},"!="),n(),s("span",{class:"token keyword"},"null"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token punctuation"},"{"),n(`
    node `),s("span",{class:"token operator"},"="),n(" node"),s("span",{class:"token punctuation"},"."),n("left"),s("span",{class:"token punctuation"},";"),n(`
  `),s("span",{class:"token punctuation"},"}"),n(`
  `),s("span",{class:"token keyword"},"return"),n(" node"),s("span",{class:"token punctuation"},";"),n(`
`),s("span",{class:"token punctuation"},"}"),n(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),gs=s("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[s("pre",{class:"language-cpp"},[s("code",null,`
`)]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])],-1),vs=s("h2",{id:"二叉搜索树的优势",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#二叉搜索树的优势","aria-hidden":"true"},"#"),n(" 二叉搜索树的优势")],-1),bs=s("table",null,[s("thead",null,[s("tr",null,[s("th",{style:{"text-align":"center"}}),s("th",{style:{"text-align":"center"}},"无序数组"),s("th",{style:{"text-align":"center"}},"有序数组"),s("th",{style:{"text-align":"center"}},"二叉搜索树 (平衡时)")])]),s("tbody",null,[s("tr",null,[s("td",{style:{"text-align":"center"}},"查找指定元素"),s("td",{style:{"text-align":"center"}},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])]),s("td",{style:{"text-align":"center"}},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"g"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(logn)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])]),s("td",{style:{"text-align":"center"}},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"g"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(logn)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])])]),s("tr",null,[s("td",{style:{"text-align":"center"}},"插入元素"),s("td",{style:{"text-align":"center"}},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(1)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")")])])])]),s("td",{style:{"text-align":"center"}},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])]),s("td",{style:{"text-align":"center"}},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"g"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(logn)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])])]),s("tr",null,[s("td",{style:{"text-align":"center"}},"删除元素"),s("td",{style:{"text-align":"center"}},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])]),s("td",{style:{"text-align":"center"}},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])]),s("td",{style:{"text-align":"center"}},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"g"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(logn)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])])]),s("tr",null,[s("td",{style:{"text-align":"center"}},"获取最小 / 最大元素"),s("td",{style:{"text-align":"center"}},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])]),s("td",{style:{"text-align":"center"}},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(1)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")")])])])]),s("td",{style:{"text-align":"center"}},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"g"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(logn)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])])])])],-1),ys=s("div",{class:"custom-container warning"},[s("p",{class:"custom-container-title"},"注意"),s("p",null,"虽然在平衡时二叉搜索树的各项效率较好，但是这仅限平衡时，而对于一般的二叉树，如果对其进行动态维护，那么二叉搜索树就会退化。")],-1),ws=s("h2",{id:"二叉搜索树的退化",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#二叉搜索树的退化","aria-hidden":"true"},"#"),n(" 二叉搜索树的退化")],-1),xs=s("p",null,[n("理想状态下的，希望二叉搜索树是 “左右平衡” 的，此时可以在 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"l"),s("mi",null,"o"),s("msub",null,[s("mi",null,"g"),s("mi",null,"n")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(log_n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose"},")")])])]),n(" 的时间复杂度下查找任意结点。")],-1),_s=s("p",null,[n("但是如果"),s("strong",null,"动态"),n("的在二叉搜索树中插入与删除结点，则可能导致二叉树退化为链表，此时"),s("strong",null,"各种操作"),n("的时间复杂度都会退化为 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])])],-1),fs=s("p",null,[s("img",{src:N,alt:"image-20230102120759666",loading:"lazy"})],-1),Ms=s("p",null,"如下图所示，执行两步删除结点后，该二叉搜索树就会退化为链表。",-1),Ts=s("p",null,[s("img",{src:z,alt:"image-20230102122358130",loading:"lazy"})],-1),Os=s("p",null,"再比如，在以下完美二叉树中插入两个结点后，树严重向左偏斜，查找操作的时间复杂度也随之发生劣化。",-1),Ns=s("p",null,[s("img",{src:L,alt:"image-20230102122459746",loading:"lazy"})],-1),zs=s("p",null,"从动态维护二叉搜索树的退化来看，“平衡” 操作尤为重要。",-1);function Ls(As,js){const c=p("CodeTabs"),i=p("Tabs");return r(),m("div",null,[j,d(" more "),B,C,S,o(c,{id:"22",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:l})=>[V]),tab1:a(({title:t,value:e,isActive:l})=>[E]),tab2:a(({title:t,value:e,isActive:l})=>[R]),_:1}),q,o(i,{id:"59",data:[{title:"step1"},{title:"step2"},{title:"step3"},{title:"step4"}]},{tab0:a(({title:t,value:e,isActive:l})=>[D]),tab1:a(({title:t,value:e,isActive:l})=>[F]),tab2:a(({title:t,value:e,isActive:l})=>[G]),tab3:a(({title:t,value:e,isActive:l})=>[H]),_:1}),I,o(c,{id:"84",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:l})=>[J]),tab1:a(({title:t,value:e,isActive:l})=>[K]),tab2:a(({title:t,value:e,isActive:l})=>[P]),_:1}),Q,U,W,X,Y,Z,$,o(c,{id:"125",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:l})=>[ss]),tab1:a(({title:t,value:e,isActive:l})=>[ns]),tab2:a(({title:t,value:e,isActive:l})=>[as]),_:1}),ts,es,ls,os,cs,is,ps,o(i,{id:"186",data:[{title:"setp1"},{title:"setp2"},{title:"setp3"},{title:"setp4"}]},{tab0:a(({title:t,value:e,isActive:l})=>[us]),tab1:a(({title:t,value:e,isActive:l})=>[rs]),tab2:a(({title:t,value:e,isActive:l})=>[ms]),tab3:a(({title:t,value:e,isActive:l})=>[ds]),_:1}),o(c,{id:"208",data:[{title:"rust",value:"rust"},{title:"java",value:"java"},{title:"c++",value:"c++"}],"tab-id":"language"},{tab0:a(({title:t,value:e,isActive:l})=>[ks]),tab1:a(({title:t,value:e,isActive:l})=>[hs]),tab2:a(({title:t,value:e,isActive:l})=>[gs]),_:1}),vs,bs,ys,ws,xs,_s,fs,Ms,Ts,Os,Ns,zs])}const Ss=u(A,[["render",Ls],["__file","3.html.vue"]]);export{Ss as default};
